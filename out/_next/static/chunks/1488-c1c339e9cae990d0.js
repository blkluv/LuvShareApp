"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[1488],{67946:function(e,t,n){var o,r,a,i,s,d,l,u;n.d(t,{As:function(){return o},Es:function(){return a},T0:function(){return i}}),(s=o||(o={})).NewPost="NEW_POST",s.NewComment="NEW_COMMENT",(d=r||(r={})).All="ALL",d.Mentions="MENTIONS",d.Comments="COMMENTS",d.Likes="LIKES",d.Collects="COLLECTS",(l=a||(a={})).Feed="FEED",l.Replies="REPLIES",l.Media="MEDIA",l.Collects="COLLECTS",l.Nft="NFT",l.Subscribers="SUBSCRIBERS",(u=i||(i={})).All="All",u.Lens="Lens",u.Other="Other",u.Requests="Requests"},56843:function(e,t,n){n.d(t,{gr:function(){return c}});var o=n(57976),r=n(77243),a=n(8819),i=n(34625),s=n(59508);let d=new s.u({uri:i.T5,fetchOptions:"no-cors",fetch});new o.f({link:(0,r.D)([d]),cache:new a.h});let l=new s.u({uri:"https://api.thegraph.com/subgraphs/name/superfluid-finance/protocol-v1-matic",fetchOptions:"no-cors",fetch}),u=new o.f({link:l,cache:new a.h});var c=u,m=n(86909),p=n(2824),A=n(45933),_=n(6154);let T=e=>({keyArgs:e,read(e){if(!e)return e;let{items:t,pageInfo:n}=e;return{...e,items:t,pageInfo:{...n}}},merge(e,t){var n,o;if(!e)return t;let r=null!==(n=e.items)&&void 0!==n?n:[],a=null!==(o=t.items)&&void 0!==o?o:[];return{...t,items:null==r?void 0:r.concat(a),pageInfo:t.pageInfo}}}),I=e=>"".concat(e.__typename,":").concat(JSON.stringify({id:e.id,createdAt:e.createdAt}));var S=n(48764).Buffer;let b=e=>S.from(e,"base64").toString("binary"),k=e=>{try{return JSON.parse(b(e.split(".")[1]))}catch(t){return console.error("Failed to parse JWT",t),{id:"",role:"",iat:0,exp:0}}},f=()=>{localStorage.removeItem("accessToken"),localStorage.removeItem("refreshToken"),localStorage.removeItem(localStorage.LensterStore),localStorage.removeItem(localStorage.TransactionStore),localStorage.removeItem(localStorage.MessageStore),localStorage.removeItem(localStorage.AttachmentCache),localStorage.removeItem(localStorage.AttachmentStore)},N=new m.i((e,t)=>{var n;let o=localStorage.getItem(localStorage.AccessToken);if(!o||"undefined"===o)return f(),t(e);let r=Date.now()>=(null===(n=k(o))||void 0===n?void 0:n.exp)*1e3;return r?(0,p.p)((0,_.Z)(i.T5,{method:"POST",headers:{"Content-Type":"application/json"},data:JSON.stringify({operationName:"Refresh",query:"\n  mutation Refresh($request: RefreshRequest!) {\n    refresh(request: $request) {\n      accessToken\n      refreshToken\n    }\n  }\n",variables:{request:{refreshToken:localStorage.getItem(localStorage.RefreshToken)}}})}).then(n=>{var o,r,a,i;let{data:s}=n,d=null==s?void 0:null===(o=s.data)||void 0===o?void 0:null===(r=o.refresh)||void 0===r?void 0:r.accessToken,l=null==s?void 0:null===(a=s.data)||void 0===a?void 0:null===(i=a.refresh)||void 0===i?void 0:i.refreshToken;return e.setContext({headers:{"x-access-token":"Bearer ".concat(d)}}),localStorage.setItem("accessToken",d),localStorage.setItem("refreshToken",l),(0,A.V)(t(e))}).catch(()=>(0,A.V)(t(e)))):(e.setContext({headers:{"x-access-token":o?"Bearer ".concat(o):""}}),t(e))});var P=n(68980);let C=()=>T([["request",["profileId","collectedBy","commentsOf","publicationTypes","metadata","commentsRankingFilter"]],"$profileId"]),U=new a.h({possibleTypes:P.ZPm.possibleTypes,typePolicies:{Post:{keyFields:I},Comment:{keyFields:I},Mirror:{keyFields:I},Query:{fields:{feed:T(["request",["profileId","feedEventItemTypes"]]),feedHighlights:T(["request",["profileId"]]),forYou:T(["request",["for"]]),explorePublications:T(["request",["sortCriteria","metadata"]]),publications:C(),publicationsProfileBookmarks:C(),nfts:T(["request",["ownerAddress","chainIds"]]),notifications:T(["request",["profileId","notificationTypes","highSignalFilter"]]),followers:T(["request",["profileId"]]),following:T(["request",["address"]]),search:T(["request",["query","type"]]),profiles:T(["request",["profileIds","ownedBy","handles","whoMirroredPublicationId"]]),whoCollectedPublication:T(["request",["publicationId"]]),whoReactedPublication:T(["request",["publicationId"]]),mutualFollowersProfiles:T(["request",["viewingProfileId","yourProfileId","limit"]])}}}});var g=n(51142);let v=new g.W({delay:{initial:100},attempts:{max:2,retryIf:e=>Boolean(e)}});new o.f({link:(0,r.D)([N,v,d]),cache:U})},20243:function(e,t,n){n.d(t,{aWf:function(){return oQ}});var o,r,a,i,s,d,l,u,c,m,p,A,_,T,I,S,b,k,f,N,P,C,U,g,v,R,O,y,x,h,E,q,D,F,M,B,w,L,$,G,H,Z,V,W,Y,K,Q,X,J,j,z,ee,et,en,eo,er,ea,ei,es,ed,el,eu,ec,em,ep,eA,e_,eT,eI,eS,eb,ek,ef,eN,eP,eC,eU,eg,ev,eR,eO,ey,ex,eh,eE,eq,eD,eF,eM,eB,ew,eL,e$,eG,eH,eZ,eV,eW,eY,eK,eQ,eX,eJ,ej,ez,e0,e1,e2,e4,e5,e6,e3,e8,e7,e9,te,tt,tn,to,tr,ta,ti,ts,td,tl,tu,tc,tm,tp,tA,t_,tT,tI,tS,tb,tk,tf,tN,tP,tC,tU,tg,tv,tR,tO,ty,tx,th,tE,tq,tD,tF,tM,tB,tw,tL,t$,tG,tH,tZ,tV,tW,tY,tK,tQ,tX,tJ,tj,tz,t0,t1,t2,t4,t5,t6,t3,t8,t7,t9,ne,nt,nn,no,nr,na,ni,ns,nd,nl,nu,nc=n(7297),nm=n(17283);function np(){let e=(0,nc.Z)(["\n  fragment ProfileFields on Profile {\n    id\n    name\n    handle\n    bio\n    ownedBy\n    isFollowedByMe\n    stats {\n      totalFollowers\n      totalFollowing\n      totalPosts\n      totalComments\n      totalMirrors\n    }\n    attributes {\n      traitType\n      key\n      value\n    }\n    picture {\n      ... on MediaSet {\n        original {\n          url\n        }\n      }\n      ... on NftImage {\n        uri\n        tokenId\n        contractAddress\n        chainId\n      }\n    }\n    coverPicture {\n      ... on MediaSet {\n        original {\n          url\n        }\n      }\n    }\n    followModule {\n      __typename\n    }\n  }\n"]);return np=function(){return e},e}function nA(){let e=(0,nc.Z)(["\n  fragment ModuleFeeAmountFields on ModuleFeeAmount {\n    asset {\n      symbol\n      decimals\n      address\n    }\n    value\n  }\n"]);return nA=function(){return e},e}function n_(){let e=(0,nc.Z)(["\n  fragment CollectModuleFields on CollectModule {\n    ... on FreeCollectModuleSettings {\n      type\n      contractAddress\n      followerOnly\n    }\n    ... on FeeCollectModuleSettings {\n      type\n      referralFee\n      contractAddress\n      followerOnly\n      amount {\n        ...ModuleFeeAmountFields\n      }\n    }\n    ... on LimitedFeeCollectModuleSettings {\n      type\n      collectLimit\n      referralFee\n      contractAddress\n      followerOnly\n      amount {\n        ...ModuleFeeAmountFields\n      }\n    }\n    ... on LimitedTimedFeeCollectModuleSettings {\n      type\n      collectLimit\n      endTimestamp\n      referralFee\n      contractAddress\n      followerOnly\n      amount {\n        ...ModuleFeeAmountFields\n      }\n    }\n    ... on TimedFeeCollectModuleSettings {\n      type\n      endTimestamp\n      referralFee\n      contractAddress\n      followerOnly\n      amount {\n        ...ModuleFeeAmountFields\n      }\n    }\n    ... on MultirecipientFeeCollectModuleSettings {\n      type\n      optionalCollectLimit: collectLimit\n      optionalEndTimestamp: endTimestamp\n      referralFee\n      followerOnly\n      contractAddress\n      amount {\n        ...ModuleFeeAmountFields\n      }\n      recipients {\n        recipient\n        split\n      }\n    }\n    ... on SimpleCollectModuleSettings {\n      type\n      optionalCollectLimit: collectLimit\n      optionalEndTimestamp: endTimestamp\n      contractAddress\n      followerOnly\n      fee {\n        amount {\n          ...ModuleFeeAmountFields\n        }\n        recipient\n        referralFee\n      }\n    }\n  }\n  ","\n"]);return n_=function(){return e},e}function nT(){let e=(0,nc.Z)(["\n  fragment StatsFields on PublicationStats {\n    totalUpvotes\n    totalAmountOfMirrors\n    totalAmountOfCollects\n    totalAmountOfComments\n  }\n"]);return nT=function(){return e},e}function nI(){let e=(0,nc.Z)(["\n  fragment SimpleConditionFields on AccessConditionOutput {\n    nft {\n      contractAddress\n      chainID\n      contractType\n      tokenIds\n    }\n    eoa {\n      address\n    }\n    token {\n      contractAddress\n      amount\n      chainID\n      condition\n      decimals\n    }\n    follow {\n      profileId\n    }\n    collect {\n      publicationId\n      thisPublication\n    }\n  }\n"]);return nI=function(){return e},e}function nS(){let e=(0,nc.Z)(["\n  fragment MetadataFields on MetadataOutput {\n    name\n    content\n    image\n    tags\n    attributes {\n      traitType\n      value\n    }\n    cover {\n      original {\n        url\n      }\n    }\n    media {\n      original {\n        url\n        mimeType\n      }\n    }\n    encryptionParams {\n      accessCondition {\n        or {\n          criteria {\n            ...SimpleConditionFields\n            and {\n              criteria {\n                ...SimpleConditionFields\n              }\n            }\n            or {\n              criteria {\n                ...SimpleConditionFields\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  ","\n"]);return nS=function(){return e},e}function nb(){let e=(0,nc.Z)(["\n  fragment PostFields on Post {\n    id\n    profile {\n      ...ProfileFields\n    }\n    reaction(request: $reactionRequest)\n    mirrors(by: $profileId)\n    hasCollectedByMe\n    onChainContentURI\n    isGated\n    isDataAvailability\n    dataAvailabilityProofs\n    canComment(profileId: $profileId) {\n      result\n    }\n    canMirror(profileId: $profileId) {\n      result\n    }\n    canDecrypt(profileId: $profileId) {\n      result\n      reasons\n    }\n    collectModule {\n      ...CollectModuleFields\n    }\n    stats {\n      ...StatsFields\n    }\n    metadata {\n      ...MetadataFields\n    }\n    hidden\n    createdAt\n    appId\n  }\n  ","\n  ","\n  ","\n  ","\n"]);return nb=function(){return e},e}function nk(){let e=(0,nc.Z)(["\n  fragment MirrorFields on Mirror {\n    id\n    profile {\n      ...ProfileFields\n    }\n    reaction(request: $reactionRequest)\n    hasCollectedByMe\n    isGated\n    isDataAvailability\n    dataAvailabilityProofs\n    canComment(profileId: $profileId) {\n      result\n    }\n    canMirror(profileId: $profileId) {\n      result\n    }\n    canDecrypt(profileId: $profileId) {\n      result\n      reasons\n    }\n    collectModule {\n      ...CollectModuleFields\n    }\n    stats {\n      ...StatsFields\n    }\n    metadata {\n      ...MetadataFields\n    }\n    hidden\n    mirrorOf {\n      ... on Post {\n        ...PostFields\n      }\n      ... on Comment {\n        id\n        profile {\n          ...ProfileFields\n        }\n        collectNftAddress\n        reaction(request: $reactionRequest)\n        mirrors(by: $profileId)\n        onChainContentURI\n        isGated\n        isDataAvailability\n        dataAvailabilityProofs\n        canComment(profileId: $profileId) {\n          result\n        }\n        canMirror(profileId: $profileId) {\n          result\n        }\n        canDecrypt(profileId: $profileId) {\n          result\n          reasons\n        }\n        stats {\n          ...StatsFields\n        }\n        createdAt\n      }\n    }\n    createdAt\n    appId\n  }\n  ","\n  ","\n  ","\n  ","\n  ","\n"]);return nk=function(){return e},e}function nf(){let e=(0,nc.Z)(["\n  fragment CommentFields on Comment {\n    id\n    profile {\n      ...ProfileFields\n    }\n    reaction(request: $reactionRequest)\n    mirrors(by: $profileId)\n    hasCollectedByMe\n    onChainContentURI\n    isGated\n    isDataAvailability\n    dataAvailabilityProofs\n    canComment(profileId: $profileId) {\n      result\n    }\n    canMirror(profileId: $profileId) {\n      result\n    }\n    canDecrypt(profileId: $profileId) {\n      result\n      reasons\n    }\n    collectModule {\n      ...CollectModuleFields\n    }\n    stats {\n      ...StatsFields\n    }\n    metadata {\n      ...MetadataFields\n    }\n    hidden\n    createdAt\n    appId\n    commentOn {\n      ... on Post {\n        ...PostFields\n      }\n      ... on Comment {\n        id\n        profile {\n          ...ProfileFields\n        }\n        reaction(request: $reactionRequest)\n        mirrors(by: $profileId)\n        hasCollectedByMe\n        onChainContentURI\n        isGated\n        isDataAvailability\n        dataAvailabilityProofs\n        canComment(profileId: $profileId) {\n          result\n        }\n        canMirror(profileId: $profileId) {\n          result\n        }\n        canDecrypt(profileId: $profileId) {\n          result\n          reasons\n        }\n        collectModule {\n          ...CollectModuleFields\n        }\n        metadata {\n          ...MetadataFields\n        }\n        stats {\n          ...StatsFields\n        }\n        mainPost {\n          ... on Post {\n            ...PostFields\n          }\n          ... on Mirror {\n            ...MirrorFields\n          }\n        }\n        hidden\n        createdAt\n      }\n      ... on Mirror {\n        ...MirrorFields\n      }\n    }\n  }\n  ","\n  ","\n  ","\n  ","\n  ","\n  ","\n"]);return nf=function(){return e},e}function nN(){let e=(0,nc.Z)(["\n  fragment RelayerResultFields on RelayResult {\n    ... on RelayerResult {\n      txHash\n      txId\n    }\n    ... on RelayError {\n      reason\n    }\n  }\n"]);return nN=function(){return e},e}function nP(){let e=(0,nc.Z)(["\n  mutation AddProfileInterest($request: AddProfileInterestsRequest!) {\n    addProfileInterests(request: $request)\n  }\n"]);return nP=function(){return e},e}function nC(){let e=(0,nc.Z)(["\n  mutation AddReaction($request: ReactionRequest!) {\n    addReaction(request: $request)\n  }\n"]);return nC=function(){return e},e}function nU(){let e=(0,nc.Z)(["\n  mutation Authenticate($request: SignedAuthChallenge!) {\n    authenticate(request: $request) {\n      accessToken\n      refreshToken\n    }\n  }\n"]);return nU=function(){return e},e}function ng(){let e=(0,nc.Z)(["\n  mutation Broadcast($request: BroadcastRequest!) {\n    broadcast(request: $request) {\n      ... on RelayerResult {\n        txHash\n        txId\n      }\n      ... on RelayError {\n        reason\n      }\n    }\n  }\n"]);return ng=function(){return e},e}function nv(){let e=(0,nc.Z)(["\n  mutation BroadcastDataAvailability($request: BroadcastRequest!) {\n    broadcastDataAvailability(request: $request) {\n      ... on CreateDataAvailabilityPublicationResult {\n        id\n        proofs\n      }\n      ... on RelayError {\n        reason\n      }\n    }\n  }\n"]);return nv=function(){return e},e}function nR(){let e=(0,nc.Z)(["\n  mutation CreateBurnProfileTypedData(\n    $options: TypedDataOptions\n    $request: BurnProfileRequest!\n  ) {\n    createBurnProfileTypedData(options: $options, request: $request) {\n      id\n      expiresAt\n      typedData {\n        domain {\n          name\n          chainId\n          version\n          verifyingContract\n        }\n        types {\n          BurnWithSig {\n            name\n            type\n          }\n        }\n        value {\n          nonce\n          deadline\n          tokenId\n        }\n      }\n    }\n  }\n"]);return nR=function(){return e},e}function nO(){let e=(0,nc.Z)(["\n  mutation CreateCollectTypedData(\n    $options: TypedDataOptions\n    $request: CreateCollectRequest!\n  ) {\n    createCollectTypedData(options: $options, request: $request) {\n      id\n      expiresAt\n      typedData {\n        types {\n          CollectWithSig {\n            name\n            type\n          }\n        }\n        domain {\n          name\n          chainId\n          version\n          verifyingContract\n        }\n        value {\n          nonce\n          deadline\n          profileId\n          pubId\n          data\n        }\n      }\n    }\n  }\n"]);return nO=function(){return e},e}function ny(){let e=(0,nc.Z)(["\n  mutation CreateCommentTypedData(\n    $options: TypedDataOptions\n    $request: CreatePublicCommentRequest!\n  ) {\n    createCommentTypedData(options: $options, request: $request) {\n      id\n      expiresAt\n      typedData {\n        types {\n          CommentWithSig {\n            name\n            type\n          }\n        }\n        domain {\n          name\n          chainId\n          version\n          verifyingContract\n        }\n        value {\n          nonce\n          deadline\n          profileId\n          profileIdPointed\n          pubIdPointed\n          contentURI\n          collectModule\n          collectModuleInitData\n          referenceModule\n          referenceModuleData\n          referenceModuleInitData\n        }\n      }\n    }\n  }\n"]);return ny=function(){return e},e}function nx(){let e=(0,nc.Z)(["\n  mutation CreateCommentViaDispatcher($request: CreatePublicCommentRequest!) {\n    createCommentViaDispatcher(request: $request) {\n      ...RelayerResultFields\n    }\n  }\n  ","\n"]);return nx=function(){return e},e}function nh(){let e=(0,nc.Z)(["\n  mutation CreateDataAvailabilityCommentTypedData(\n    $request: CreateDataAvailabilityCommentRequest!\n  ) {\n    createDataAvailabilityCommentTypedData(request: $request) {\n      id\n      expiresAt\n      typedData {\n        types {\n          CommentWithSig {\n            name\n            type\n          }\n        }\n        domain {\n          name\n          chainId\n          version\n          verifyingContract\n        }\n        value {\n          nonce\n          deadline\n          profileId\n          contentURI\n          profileIdPointed\n          pubIdPointed\n          collectModule\n          collectModuleInitData\n          referenceModule\n          referenceModuleInitData\n          referenceModuleData\n        }\n      }\n    }\n  }\n"]);return nh=function(){return e},e}function nE(){let e=(0,nc.Z)(["\n  mutation CreateDataAvailabilityCommentViaDispatcher(\n    $request: CreateDataAvailabilityCommentRequest!\n  ) {\n    createDataAvailabilityCommentViaDispatcher(request: $request) {\n      ... on CreateDataAvailabilityPublicationResult {\n        id\n        proofs\n      }\n      ... on RelayError {\n        reason\n      }\n    }\n  }\n"]);return nE=function(){return e},e}function nq(){let e=(0,nc.Z)(["\n  mutation CreateDataAvailabilityMirrorViaDispatcher(\n    $request: CreateDataAvailabilityMirrorRequest!\n  ) {\n    createDataAvailabilityMirrorViaDispatcher(request: $request) {\n      ... on CreateDataAvailabilityPublicationResult {\n        id\n        proofs\n      }\n      ... on RelayError {\n        reason\n      }\n    }\n  }\n"]);return nq=function(){return e},e}function nD(){let e=(0,nc.Z)(["\n  mutation CreateDataAvailabilityPostTypedData(\n    $request: CreateDataAvailabilityPostRequest!\n  ) {\n    createDataAvailabilityPostTypedData(request: $request) {\n      id\n      expiresAt\n      typedData {\n        types {\n          PostWithSig {\n            name\n            type\n          }\n        }\n        domain {\n          name\n          chainId\n          version\n          verifyingContract\n        }\n        value {\n          nonce\n          deadline\n          profileId\n          contentURI\n          collectModule\n          collectModuleInitData\n          referenceModule\n          referenceModuleInitData\n        }\n      }\n    }\n  }\n"]);return nD=function(){return e},e}function nF(){let e=(0,nc.Z)(["\n  mutation CreateDataAvailabilityPostViaDispatcher(\n    $request: CreateDataAvailabilityPostRequest!\n  ) {\n    createDataAvailabilityPostViaDispatcher(request: $request) {\n      ... on CreateDataAvailabilityPublicationResult {\n        id\n        proofs\n      }\n      ... on RelayError {\n        reason\n      }\n    }\n  }\n"]);return nF=function(){return e},e}function nM(){let e=(0,nc.Z)(["\n  mutation CreateFollowTypedData(\n    $options: TypedDataOptions\n    $request: FollowRequest!\n  ) {\n    createFollowTypedData(options: $options, request: $request) {\n      id\n      expiresAt\n      typedData {\n        domain {\n          name\n          chainId\n          version\n          verifyingContract\n        }\n        types {\n          FollowWithSig {\n            name\n            type\n          }\n        }\n        value {\n          nonce\n          deadline\n          profileIds\n          datas\n        }\n      }\n    }\n  }\n"]);return nM=function(){return e},e}function nB(){let e=(0,nc.Z)(["\n  mutation CreateMirrorTypedData(\n    $options: TypedDataOptions\n    $request: CreateMirrorRequest!\n  ) {\n    createMirrorTypedData(options: $options, request: $request) {\n      id\n      expiresAt\n      typedData {\n        types {\n          MirrorWithSig {\n            name\n            type\n          }\n        }\n        domain {\n          name\n          chainId\n          version\n          verifyingContract\n        }\n        value {\n          nonce\n          deadline\n          profileId\n          profileIdPointed\n          pubIdPointed\n          referenceModule\n          referenceModuleData\n          referenceModuleInitData\n        }\n      }\n    }\n  }\n"]);return nB=function(){return e},e}function nw(){let e=(0,nc.Z)(["\n  mutation CreateMirrorViaDispatcher($request: CreateMirrorRequest!) {\n    createMirrorViaDispatcher(request: $request) {\n      ...RelayerResultFields\n    }\n  }\n  ","\n"]);return nw=function(){return e},e}function nL(){let e=(0,nc.Z)(["\n  mutation CreateNftGallery($request: NftGalleryCreateRequest!) {\n    createNftGallery(request: $request)\n  }\n"]);return nL=function(){return e},e}function n$(){let e=(0,nc.Z)(["\n  mutation CreatePostTypedData(\n    $options: TypedDataOptions\n    $request: CreatePublicPostRequest!\n  ) {\n    createPostTypedData(options: $options, request: $request) {\n      id\n      expiresAt\n      typedData {\n        types {\n          PostWithSig {\n            name\n            type\n          }\n        }\n        domain {\n          name\n          chainId\n          version\n          verifyingContract\n        }\n        value {\n          nonce\n          deadline\n          profileId\n          contentURI\n          collectModule\n          collectModuleInitData\n          referenceModule\n          referenceModuleInitData\n        }\n      }\n    }\n  }\n"]);return n$=function(){return e},e}function nG(){let e=(0,nc.Z)(["\n  mutation CreatePostViaDispatcher($request: CreatePublicPostRequest!) {\n    createPostViaDispatcher(request: $request) {\n      ...RelayerResultFields\n    }\n  }\n  ","\n"]);return nG=function(){return e},e}function nH(){let e=(0,nc.Z)(["\n  mutation CreateProfile($request: CreateProfileRequest!) {\n    createProfile(request: $request) {\n      ...RelayerResultFields\n    }\n  }\n  ","\n"]);return nH=function(){return e},e}function nZ(){let e=(0,nc.Z)(["\n  mutation CreateSetDefaultProfileTypedData(\n    $options: TypedDataOptions\n    $request: CreateSetDefaultProfileRequest!\n  ) {\n    createSetDefaultProfileTypedData(options: $options, request: $request) {\n      id\n      expiresAt\n      typedData {\n        domain {\n          name\n          chainId\n          version\n          verifyingContract\n        }\n        types {\n          SetDefaultProfileWithSig {\n            name\n            type\n          }\n        }\n        value {\n          nonce\n          deadline\n          wallet\n          profileId\n        }\n      }\n    }\n  }\n"]);return nZ=function(){return e},e}function nV(){let e=(0,nc.Z)(["\n  mutation CreateSetDispatcherTypedData(\n    $options: TypedDataOptions\n    $request: SetDispatcherRequest!\n  ) {\n    createSetDispatcherTypedData(options: $options, request: $request) {\n      id\n      expiresAt\n      typedData {\n        types {\n          SetDispatcherWithSig {\n            name\n            type\n          }\n        }\n        domain {\n          name\n          chainId\n          version\n          verifyingContract\n        }\n        value {\n          nonce\n          deadline\n          profileId\n          dispatcher\n        }\n      }\n    }\n  }\n"]);return nV=function(){return e},e}function nW(){let e=(0,nc.Z)(["\n  mutation CreateSetFollowModuleTypedData(\n    $options: TypedDataOptions\n    $request: CreateSetFollowModuleRequest!\n  ) {\n    createSetFollowModuleTypedData(options: $options, request: $request) {\n      id\n      expiresAt\n      typedData {\n        types {\n          SetFollowModuleWithSig {\n            name\n            type\n          }\n        }\n        domain {\n          name\n          chainId\n          version\n          verifyingContract\n        }\n        value {\n          nonce\n          deadline\n          profileId\n          followModule\n          followModuleInitData\n        }\n      }\n    }\n  }\n"]);return nW=function(){return e},e}function nY(){let e=(0,nc.Z)(["\n  mutation CreateSetProfileImageURITypedData(\n    $options: TypedDataOptions\n    $request: UpdateProfileImageRequest!\n  ) {\n    createSetProfileImageURITypedData(options: $options, request: $request) {\n      id\n      expiresAt\n      typedData {\n        domain {\n          name\n          chainId\n          version\n          verifyingContract\n        }\n        types {\n          SetProfileImageURIWithSig {\n            name\n            type\n          }\n        }\n        value {\n          nonce\n          deadline\n          imageURI\n          profileId\n        }\n      }\n    }\n  }\n"]);return nY=function(){return e},e}function nK(){let e=(0,nc.Z)(["\n  mutation CreateSetProfileImageURIViaDispatcher(\n    $request: UpdateProfileImageRequest!\n  ) {\n    createSetProfileImageURIViaDispatcher(request: $request) {\n      ...RelayerResultFields\n    }\n  }\n  ","\n"]);return nK=function(){return e},e}function nQ(){let e=(0,nc.Z)(["\n  mutation CreateSetProfileMetadataTypedData(\n    $options: TypedDataOptions\n    $request: CreatePublicSetProfileMetadataURIRequest!\n  ) {\n    createSetProfileMetadataTypedData(options: $options, request: $request) {\n      id\n      expiresAt\n      typedData {\n        types {\n          SetProfileMetadataURIWithSig {\n            name\n            type\n          }\n        }\n        domain {\n          name\n          chainId\n          version\n          verifyingContract\n        }\n        value {\n          nonce\n          deadline\n          profileId\n          metadata\n        }\n      }\n    }\n  }\n"]);return nQ=function(){return e},e}function nX(){let e=(0,nc.Z)(["\n  mutation CreateSetProfileMetadataViaDispatcher(\n    $request: CreatePublicSetProfileMetadataURIRequest!\n  ) {\n    createSetProfileMetadataViaDispatcher(request: $request) {\n      ...RelayerResultFields\n    }\n  }\n  ","\n"]);return nX=function(){return e},e}function nJ(){let e=(0,nc.Z)(["\n  mutation CreateUnfollowTypedData($request: UnfollowRequest!) {\n    createUnfollowTypedData(request: $request) {\n      id\n      expiresAt\n      typedData {\n        domain {\n          name\n          chainId\n          version\n          verifyingContract\n        }\n        types {\n          BurnWithSig {\n            name\n            type\n          }\n        }\n        value {\n          nonce\n          deadline\n          tokenId\n        }\n      }\n    }\n  }\n"]);return nJ=function(){return e},e}function nj(){let e=(0,nc.Z)(["\n  mutation DeleteNftGallery($request: NftGalleryDeleteRequest!) {\n    deleteNftGallery(request: $request)\n  }\n"]);return nj=function(){return e},e}function nz(){let e=(0,nc.Z)(["\n  mutation DismissRecommendedProfiles(\n    $request: DismissRecommendedProfilesRequest!\n  ) {\n    dismissRecommendedProfiles(request: $request)\n  }\n"]);return nz=function(){return e},e}function n0(){let e=(0,nc.Z)(["\n  mutation HidePublication($request: HidePublicationRequest!) {\n    hidePublication(request: $request)\n  }\n"]);return n0=function(){return e},e}function n1(){let e=(0,nc.Z)(["\n  mutation ProxyAction($request: ProxyActionRequest!) {\n    proxyAction(request: $request)\n  }\n"]);return n1=function(){return e},e}function n2(){let e=(0,nc.Z)(["\n  mutation RemoveProfileInterest($request: RemoveProfileInterestsRequest!) {\n    removeProfileInterests(request: $request)\n  }\n"]);return n2=function(){return e},e}function n4(){let e=(0,nc.Z)(["\n  mutation RemoveReaction($request: ReactionRequest!) {\n    removeReaction(request: $request)\n  }\n"]);return n4=function(){return e},e}function n5(){let e=(0,nc.Z)(["\n  mutation ReportPublication($request: ReportPublicationRequest!) {\n    reportPublication(request: $request)\n  }\n"]);return n5=function(){return e},e}function n6(){let e=(0,nc.Z)(["\n  mutation UpdateNftGalleryInfo($request: NftGalleryUpdateInfoRequest!) {\n    updateNftGalleryInfo(request: $request)\n  }\n"]);return n6=function(){return e},e}function n3(){let e=(0,nc.Z)(["\n  mutation UpdateNftGalleryItems($request: NftGalleryUpdateItemsRequest!) {\n    updateNftGalleryItems(request: $request)\n  }\n"]);return n3=function(){return e},e}function n8(){let e=(0,nc.Z)(["\n  mutation UpdateNftGalleryOrder($request: NftGalleryUpdateItemOrderRequest!) {\n    updateNftGalleryOrder(request: $request)\n  }\n"]);return n8=function(){return e},e}function n7(){let e=(0,nc.Z)(["\n  query ApprovedModuleAllowanceAmount(\n    $request: ApprovedModuleAllowanceAmountRequest!\n  ) {\n    approvedModuleAllowanceAmount(request: $request) {\n      currency\n      module\n      allowance\n      contractAddress\n    }\n  }\n"]);return n7=function(){return e},e}function n9(){let e=(0,nc.Z)(["\n  query CanDecryptStatus(\n    $request: PublicationQueryRequest!\n    $profileId: ProfileId\n  ) {\n    publication(request: $request) {\n      ... on Post {\n        id\n        canDecrypt(profileId: $profileId) {\n          result\n          reasons\n        }\n      }\n      ... on Comment {\n        id\n        canDecrypt(profileId: $profileId) {\n          result\n          reasons\n        }\n      }\n      ... on Mirror {\n        id\n        canDecrypt(profileId: $profileId) {\n          result\n          reasons\n        }\n      }\n    }\n  }\n"]);return n9=function(){return e},e}function oe(){let e=(0,nc.Z)(["\n  query Challenge($request: ChallengeRequest!) {\n    challenge(request: $request) {\n      text\n    }\n  }\n"]);return oe=function(){return e},e}function ot(){let e=(0,nc.Z)(["\n  query CollectModule($request: PublicationQueryRequest!) {\n    publication(request: $request) {\n      ... on Post {\n        collectNftAddress\n        collectModule {\n          ...CollectModuleFields\n        }\n      }\n      ... on Comment {\n        collectNftAddress\n        collectModule {\n          ...CollectModuleFields\n        }\n      }\n      ... on Mirror {\n        collectNftAddress\n        collectModule {\n          ...CollectModuleFields\n        }\n      }\n    }\n  }\n  ","\n"]);return ot=function(){return e},e}function on(){let e=(0,nc.Z)(["\n  query Collectors($request: WhoCollectedPublicationRequest!) {\n    whoCollectedPublication(request: $request) {\n      items {\n        address\n        defaultProfile {\n          ...ProfileFields\n          isFollowedByMe\n        }\n      }\n      pageInfo {\n        next\n      }\n    }\n  }\n  ","\n"]);return on=function(){return e},e}function oo(){let e=(0,nc.Z)(["\n  query CommentFeed(\n    $request: PublicationsQueryRequest!\n    $reactionRequest: ReactionFieldResolverRequest\n    $profileId: ProfileId\n  ) {\n    publications(request: $request) {\n      items {\n        ... on Comment {\n          ...CommentFields\n        }\n      }\n      pageInfo {\n        next\n      }\n    }\n  }\n  ","\n"]);return oo=function(){return e},e}function or(){let e=(0,nc.Z)(["\n  query EnabledModules {\n    enabledModules {\n      collectModules {\n        moduleName\n        contractAddress\n      }\n    }\n    enabledModuleCurrencies {\n      name\n      symbol\n      decimals\n      address\n    }\n  }\n"]);return or=function(){return e},e}function oa(){let e=(0,nc.Z)(["\n  query ExploreFeed(\n    $request: ExplorePublicationRequest!\n    $reactionRequest: ReactionFieldResolverRequest\n    $profileId: ProfileId\n  ) {\n    explorePublications(request: $request) {\n      items {\n        ... on Post {\n          ...PostFields\n        }\n        ... on Comment {\n          ...CommentFields\n        }\n        ... on Mirror {\n          ...MirrorFields\n        }\n      }\n      pageInfo {\n        next\n      }\n    }\n  }\n  ","\n  ","\n  ","\n"]);return oa=function(){return e},e}function oi(){let e=(0,nc.Z)(["\n  query FeedHighlights(\n    $request: FeedHighlightsRequest!\n    $reactionRequest: ReactionFieldResolverRequest\n    $profileId: ProfileId\n  ) {\n    feedHighlights(request: $request) {\n      items {\n        ... on Post {\n          ...PostFields\n        }\n        ... on Comment {\n          ...CommentFields\n        }\n        ... on Mirror {\n          ...MirrorFields\n        }\n      }\n      pageInfo {\n        next\n      }\n    }\n  }\n  ","\n  ","\n  ","\n"]);return oi=function(){return e},e}function os(){let e=(0,nc.Z)(["\n  query Followers($request: FollowersRequest!) {\n    followers(request: $request) {\n      items {\n        wallet {\n          address\n          defaultProfile {\n            ...ProfileFields\n            isFollowedByMe\n          }\n        }\n        totalAmountOfTimesFollowed\n      }\n      pageInfo {\n        next\n      }\n    }\n  }\n  ","\n"]);return os=function(){return e},e}function od(){let e=(0,nc.Z)(["\n  query Following($request: FollowingRequest!) {\n    following(request: $request) {\n      items {\n        profile {\n          ...ProfileFields\n          isFollowedByMe\n        }\n        totalAmountOfTimesFollowing\n      }\n      pageInfo {\n        next\n      }\n    }\n  }\n  ","\n"]);return od=function(){return e},e}function ol(){let e=(0,nc.Z)(["\n  query ForYou(\n    $request: PublicationForYouRequest!\n    $reactionRequest: ReactionFieldResolverRequest\n    $profileId: ProfileId\n  ) {\n    forYou(request: $request) {\n      items {\n        ... on Post {\n          ...PostFields\n        }\n        ... on Comment {\n          ...CommentFields\n        }\n        ... on Mirror {\n          ...MirrorFields\n        }\n      }\n      pageInfo {\n        next\n      }\n    }\n  }\n  ","\n  ","\n  ","\n"]);return ol=function(){return e},e}function ou(){let e=(0,nc.Z)(["\n  query GenerateModuleCurrencyApprovalData(\n    $request: GenerateModuleCurrencyApprovalDataRequest!\n  ) {\n    generateModuleCurrencyApprovalData(request: $request) {\n      to\n      from\n      data\n    }\n  }\n"]);return ou=function(){return e},e}function oc(){let e=(0,nc.Z)(["\n  query HasTxHashBeenIndexed($request: HasTxHashBeenIndexedRequest!) {\n    hasTxHashBeenIndexed(request: $request) {\n      ... on TransactionIndexedResult {\n        metadataStatus {\n          status\n        }\n        txHash\n        indexed\n      }\n      ... on TransactionError {\n        reason\n      }\n    }\n  }\n"]);return oc=function(){return e},e}function om(){let e=(0,nc.Z)(["\n  query LensterStats($request: GlobalProtocolStatsRequest) {\n    globalProtocolStats(request: $request) {\n      totalProfiles\n      totalPosts\n      totalBurntProfiles\n      totalMirrors\n      totalComments\n      totalCollects\n      totalFollows\n    }\n  }\n"]);return om=function(){return e},e}function op(){let e=(0,nc.Z)(["\n  query Likes($request: WhoReactedPublicationRequest!) {\n    whoReactedPublication(request: $request) {\n      items {\n        reactionId\n        profile {\n          ...ProfileFields\n          isFollowedByMe\n        }\n      }\n      pageInfo {\n        next\n      }\n    }\n  }\n  ","\n"]);return op=function(){return e},e}function oA(){let e=(0,nc.Z)(["\n  query MutualFollowers($request: MutualFollowersProfilesQueryRequest!) {\n    mutualFollowersProfiles(request: $request) {\n      items {\n        ...ProfileFields\n        isFollowedByMe\n      }\n      pageInfo {\n        next\n        totalCount\n      }\n    }\n  }\n  ","\n"]);return oA=function(){return e},e}function o_(){let e=(0,nc.Z)(["\n  query NftChallenge($request: NftOwnershipChallengeRequest!) {\n    nftOwnershipChallenge(request: $request) {\n      id\n      text\n    }\n  }\n"]);return o_=function(){return e},e}function oT(){let e=(0,nc.Z)(["\n  query NftFeed($request: NFTsRequest!) {\n    nfts(request: $request) {\n      items {\n        name\n        collectionName\n        contractAddress\n        tokenId\n        chainId\n        originalContent {\n          uri\n          animatedUrl\n        }\n      }\n      pageInfo {\n        next\n      }\n    }\n  }\n"]);return oT=function(){return e},e}function oI(){let e=(0,nc.Z)(["\n  query NftGalleries($request: NftGalleriesRequest!) {\n    nftGalleries(request: $request) {\n      id\n      name\n      profileId\n      items {\n        name\n        description\n        collectionName\n        contractAddress\n        tokenId\n        chainId\n        originalContent {\n          uri\n          animatedUrl\n        }\n      }\n    }\n  }\n"]);return oI=function(){return e},e}function oS(){let e=(0,nc.Z)(["\n  query NotificationCount($request: NotificationRequest!) {\n    notifications(request: $request) {\n      pageInfo {\n        totalCount\n      }\n    }\n  }\n"]);return oS=function(){return e},e}function ob(){let e=(0,nc.Z)(["\n  query Notifications($request: NotificationRequest!) {\n    notifications(request: $request) {\n      items {\n        ... on NewFollowerNotification {\n          notificationId\n          wallet {\n            address\n            defaultProfile {\n              ...ProfileFields\n            }\n          }\n          createdAt\n        }\n        ... on NewMentionNotification {\n          notificationId\n          mentionPublication {\n            ... on Post {\n              id\n              profile {\n                ...ProfileFields\n              }\n              metadata {\n                content\n              }\n            }\n            ... on Comment {\n              id\n              profile {\n                ...ProfileFields\n              }\n              metadata {\n                content\n              }\n            }\n          }\n          createdAt\n        }\n        ... on NewReactionNotification {\n          notificationId\n          profile {\n            ...ProfileFields\n          }\n          publication {\n            ... on Post {\n              id\n              metadata {\n                content\n              }\n            }\n            ... on Comment {\n              id\n              metadata {\n                content\n              }\n            }\n            ... on Mirror {\n              id\n              metadata {\n                content\n              }\n            }\n          }\n          createdAt\n        }\n        ... on NewCommentNotification {\n          notificationId\n          profile {\n            ...ProfileFields\n          }\n          comment {\n            id\n            metadata {\n              content\n            }\n            commentOn {\n              ... on Post {\n                id\n              }\n              ... on Comment {\n                id\n              }\n              ... on Mirror {\n                id\n              }\n            }\n          }\n          createdAt\n        }\n        ... on NewMirrorNotification {\n          notificationId\n          profile {\n            ...ProfileFields\n          }\n          publication {\n            ... on Post {\n              id\n              metadata {\n                content\n              }\n            }\n            ... on Comment {\n              id\n              metadata {\n                content\n              }\n            }\n          }\n          createdAt\n        }\n        ... on NewCollectNotification {\n          notificationId\n          wallet {\n            address\n            defaultProfile {\n              ...ProfileFields\n            }\n          }\n          collectedPublication {\n            ... on Post {\n              id\n              metadata {\n                content\n              }\n              collectModule {\n                ...CollectModuleFields\n              }\n            }\n            ... on Comment {\n              id\n              metadata {\n                content\n              }\n              collectModule {\n                ...CollectModuleFields\n              }\n            }\n          }\n          createdAt\n        }\n      }\n      pageInfo {\n        next\n      }\n    }\n  }\n  ","\n  ","\n"]);return ob=function(){return e},e}function ok(){let e=(0,nc.Z)(["\n  query Profile($request: SingleProfileQueryRequest!, $who: ProfileId) {\n    profile(request: $request) {\n      ...ProfileFields\n      metadata\n      followNftAddress\n      isFollowing(who: $who)\n      dispatcher {\n        address\n        canUseRelay\n        sponsor\n      }\n      onChainIdentity {\n        proofOfHumanity\n        sybilDotOrg {\n          verified\n          source {\n            twitter {\n              handle\n            }\n          }\n        }\n        ens {\n          name\n        }\n        worldcoin {\n          isHuman\n        }\n      }\n    }\n  }\n  ","\n"]);return ok=function(){return e},e}function of(){let e=(0,nc.Z)(["\n  query ProfileFeed(\n    $request: PublicationsQueryRequest!\n    $reactionRequest: ReactionFieldResolverRequest\n    $profileId: ProfileId\n  ) {\n    publications(request: $request) {\n      items {\n        ... on Post {\n          ...PostFields\n        }\n        ... on Comment {\n          ...CommentFields\n        }\n        ... on Mirror {\n          ...MirrorFields\n        }\n      }\n      pageInfo {\n        next\n      }\n    }\n  }\n  ","\n  ","\n  ","\n"]);return of=function(){return e},e}function oN(){let e=(0,nc.Z)(["\n  query ProfileInterests {\n    profileInterests\n  }\n"]);return oN=function(){return e},e}function oP(){let e=(0,nc.Z)(["\n  query ProfileSettings($request: SingleProfileQueryRequest!) {\n    profile(request: $request) {\n      ...ProfileFields\n    }\n  }\n  ","\n"]);return oP=function(){return e},e}function oC(){let e=(0,nc.Z)(["\n  query Profiles($request: ProfileQueryRequest!) {\n    profiles(request: $request) {\n      items {\n        ...ProfileFields\n        isDefault\n        isFollowedByMe\n      }\n      pageInfo {\n        next\n      }\n    }\n  }\n  ","\n"]);return oC=function(){return e},e}function oU(){let e=(0,nc.Z)(["\n  query Publication(\n    $request: PublicationQueryRequest!\n    $reactionRequest: ReactionFieldResolverRequest\n    $profileId: ProfileId\n  ) {\n    publication(request: $request) {\n      ... on Post {\n        ...PostFields\n        collectNftAddress\n        profile {\n          isFollowedByMe\n        }\n        referenceModule {\n          __typename\n        }\n      }\n      ... on Comment {\n        ...CommentFields\n        collectNftAddress\n        profile {\n          isFollowedByMe\n        }\n        referenceModule {\n          __typename\n        }\n      }\n      ... on Mirror {\n        ...MirrorFields\n        collectNftAddress\n        profile {\n          isFollowedByMe\n        }\n        referenceModule {\n          __typename\n        }\n      }\n    }\n  }\n  ","\n  ","\n  ","\n"]);return oU=function(){return e},e}function og(){let e=(0,nc.Z)(["\n  query PublicationRevenue($request: PublicationRevenueQueryRequest!) {\n    publicationRevenue(request: $request) {\n      revenue {\n        total {\n          value\n        }\n      }\n    }\n  }\n"]);return og=function(){return e},e}function ov(){let e=(0,nc.Z)(["\n  query RecommendedProfiles($options: RecommendedProfileOptions) {\n    recommendedProfiles(options: $options) {\n      ...ProfileFields\n      isFollowedByMe\n    }\n  }\n  ","\n"]);return ov=function(){return e},e}function oR(){let e=(0,nc.Z)(["\n  query RelayQueues {\n    relayQueues {\n      relayer\n      address\n      queue\n    }\n  }\n"]);return oR=function(){return e},e}function oO(){let e=(0,nc.Z)(["\n  query SearchProfiles($request: SearchQueryRequest!) {\n    search(request: $request) {\n      ... on ProfileSearchResult {\n        items {\n          ...ProfileFields\n        }\n        pageInfo {\n          next\n        }\n      }\n    }\n  }\n  ","\n"]);return oO=function(){return e},e}function oy(){let e=(0,nc.Z)(["\n  query SearchPublications(\n    $request: SearchQueryRequest!\n    $reactionRequest: ReactionFieldResolverRequest\n    $profileId: ProfileId\n  ) {\n    search(request: $request) {\n      ... on PublicationSearchResult {\n        items {\n          ... on Post {\n            ...PostFields\n          }\n          ... on Comment {\n            ...CommentFields\n          }\n        }\n        pageInfo {\n          next\n        }\n      }\n    }\n  }\n  ","\n  ","\n"]);return oy=function(){return e},e}function ox(){let e=(0,nc.Z)(["\n  query SeeThroughProfiles($request: FeedRequest!) {\n    feed(request: $request) {\n      items {\n        root {\n          ... on Post {\n            profile {\n              ...ProfileFields\n            }\n          }\n          ... on Comment {\n            profile {\n              ...ProfileFields\n            }\n          }\n        }\n        electedMirror {\n          profile {\n            ...ProfileFields\n          }\n        }\n        mirrors {\n          profile {\n            ...ProfileFields\n          }\n        }\n        collects {\n          profile {\n            ...ProfileFields\n          }\n        }\n        reactions {\n          profile {\n            ...ProfileFields\n          }\n        }\n        comments {\n          profile {\n            ...ProfileFields\n          }\n        }\n      }\n    }\n  }\n  ","\n"]);return ox=function(){return e},e}function oh(){let e=(0,nc.Z)(["\n  query SuperFollow($request: SingleProfileQueryRequest!) {\n    profile(request: $request) {\n      id\n      followModule {\n        ... on FeeFollowModuleSettings {\n          amount {\n            asset {\n              name\n              symbol\n              decimals\n              address\n            }\n            value\n          }\n          recipient\n        }\n      }\n    }\n  }\n"]);return oh=function(){return e},e}function oE(){let e=(0,nc.Z)(['\n  query SuperfluidInflows($id: ID = "") {\n    account(id: $id) {\n      createdAtTimestamp\n      createdAtBlockNumber\n      isSuperApp\n      updatedAtBlockNumber\n      updatedAtTimestamp\n      inflows {\n        id\n        token {\n          name\n          symbol\n          underlyingToken {\n            name\n            symbol\n          }\n          id\n          decimals\n        }\n        deposit\n        currentFlowRate\n        sender {\n          id\n        }\n        createdAtTimestamp\n      }\n    }\n  }\n']);return oE=function(){return e},e}function oq(){let e=(0,nc.Z)(["\n  query Timeline(\n    $request: FeedRequest!\n    $reactionRequest: ReactionFieldResolverRequest\n    $profileId: ProfileId\n  ) {\n    feed(request: $request) {\n      items {\n        root {\n          ... on Post {\n            ...PostFields\n          }\n          ... on Comment {\n            ...CommentFields\n          }\n        }\n        electedMirror {\n          mirrorId\n          profile {\n            ...ProfileFields\n          }\n          timestamp\n        }\n        mirrors {\n          profile {\n            ...ProfileFields\n          }\n          timestamp\n        }\n        collects {\n          profile {\n            ...ProfileFields\n          }\n          timestamp\n        }\n        reactions {\n          profile {\n            ...ProfileFields\n          }\n          reaction\n          timestamp\n        }\n        comments {\n          ...CommentFields\n        }\n      }\n      pageInfo {\n        next\n      }\n    }\n  }\n  ","\n  ","\n  ","\n"]);return oq=function(){return e},e}function oD(){let e=(0,nc.Z)(["\n  query Trending($request: AllPublicationsTagsRequest!) {\n    allPublicationsTags(request: $request) {\n      items {\n        tag\n        total\n      }\n    }\n  }\n"]);return oD=function(){return e},e}function oF(){let e=(0,nc.Z)(["\n  query UserProfiles($ownedBy: [EthereumAddress!]) {\n    profiles(request: { ownedBy: $ownedBy }) {\n      items {\n        ...ProfileFields\n        interests\n        isDefault\n        dispatcher {\n          address\n          canUseRelay\n          sponsor\n        }\n      }\n    }\n  }\n  ","\n"]);return oF=function(){return e},e}function oM(){let e=(0,nc.Z)(["\n  query UserSigNonces {\n    userSigNonces {\n      lensHubOnChainSigNonce\n    }\n  }\n"]);return oM=function(){return e},e}function oB(){let e=(0,nc.Z)(["\n  query Verify($request: VerifyRequest!) {\n    verify(request: $request)\n  }\n"]);return oB=function(){return e},e}(o=eG||(eG={})).Account="account",o.AccountTokenSnapshot="accountTokenSnapshot",o.AccountTokenSnapshotActiveIncomingStreamCount="accountTokenSnapshot__activeIncomingStreamCount",o.AccountTokenSnapshotActiveOutgoingStreamCount="accountTokenSnapshot__activeOutgoingStreamCount",o.AccountTokenSnapshotBalanceUntilUpdatedAt="accountTokenSnapshot__balanceUntilUpdatedAt",o.AccountTokenSnapshotId="accountTokenSnapshot__id",o.AccountTokenSnapshotInactiveIncomingStreamCount="accountTokenSnapshot__inactiveIncomingStreamCount",o.AccountTokenSnapshotInactiveOutgoingStreamCount="accountTokenSnapshot__inactiveOutgoingStreamCount",o.AccountTokenSnapshotIsLiquidationEstimateOptimistic="accountTokenSnapshot__isLiquidationEstimateOptimistic",o.AccountTokenSnapshotMaybeCriticalAtTimestamp="accountTokenSnapshot__maybeCriticalAtTimestamp",o.AccountTokenSnapshotTotalAmountStreamedInUntilUpdatedAt="accountTokenSnapshot__totalAmountStreamedInUntilUpdatedAt",o.AccountTokenSnapshotTotalAmountStreamedOutUntilUpdatedAt="accountTokenSnapshot__totalAmountStreamedOutUntilUpdatedAt",o.AccountTokenSnapshotTotalAmountStreamedUntilUpdatedAt="accountTokenSnapshot__totalAmountStreamedUntilUpdatedAt",o.AccountTokenSnapshotTotalAmountTransferredUntilUpdatedAt="accountTokenSnapshot__totalAmountTransferredUntilUpdatedAt",o.AccountTokenSnapshotTotalApprovedSubscriptions="accountTokenSnapshot__totalApprovedSubscriptions",o.AccountTokenSnapshotTotalDeposit="accountTokenSnapshot__totalDeposit",o.AccountTokenSnapshotTotalInflowRate="accountTokenSnapshot__totalInflowRate",o.AccountTokenSnapshotTotalNetFlowRate="accountTokenSnapshot__totalNetFlowRate",o.AccountTokenSnapshotTotalNumberOfActiveStreams="accountTokenSnapshot__totalNumberOfActiveStreams",o.AccountTokenSnapshotTotalNumberOfClosedStreams="accountTokenSnapshot__totalNumberOfClosedStreams",o.AccountTokenSnapshotTotalOutflowRate="accountTokenSnapshot__totalOutflowRate",o.AccountTokenSnapshotTotalSubscriptionsWithUnits="accountTokenSnapshot__totalSubscriptionsWithUnits",o.AccountTokenSnapshotUpdatedAtBlockNumber="accountTokenSnapshot__updatedAtBlockNumber",o.AccountTokenSnapshotUpdatedAtTimestamp="accountTokenSnapshot__updatedAtTimestamp",o.AccountCreatedAtBlockNumber="account__createdAtBlockNumber",o.AccountCreatedAtTimestamp="account__createdAtTimestamp",o.AccountId="account__id",o.AccountIsSuperApp="account__isSuperApp",o.AccountUpdatedAtBlockNumber="account__updatedAtBlockNumber",o.AccountUpdatedAtTimestamp="account__updatedAtTimestamp",o.ActiveIncomingStreamCount="activeIncomingStreamCount",o.ActiveOutgoingStreamCount="activeOutgoingStreamCount",o.Balance="balance",o.BlockNumber="blockNumber",o.Id="id",o.InactiveIncomingStreamCount="inactiveIncomingStreamCount",o.InactiveOutgoingStreamCount="inactiveOutgoingStreamCount",o.LogIndex="logIndex",o.MaybeCriticalAtTimestamp="maybeCriticalAtTimestamp",o.Order="order",o.Timestamp="timestamp",o.Token="token",o.TokenCreatedAtBlockNumber="token__createdAtBlockNumber",o.TokenCreatedAtTimestamp="token__createdAtTimestamp",o.TokenDecimals="token__decimals",o.TokenId="token__id",o.TokenIsListed="token__isListed",o.TokenIsNativeAssetSuperToken="token__isNativeAssetSuperToken",o.TokenIsSuperToken="token__isSuperToken",o.TokenName="token__name",o.TokenSymbol="token__symbol",o.TokenUnderlyingAddress="token__underlyingAddress",o.TotalAmountStreamed="totalAmountStreamed",o.TotalAmountStreamedIn="totalAmountStreamedIn",o.TotalAmountStreamedOut="totalAmountStreamedOut",o.TotalAmountTransferred="totalAmountTransferred",o.TotalApprovedSubscriptions="totalApprovedSubscriptions",o.TotalDeposit="totalDeposit",o.TotalInflowRate="totalInflowRate",o.TotalNetFlowRate="totalNetFlowRate",o.TotalNumberOfActiveStreams="totalNumberOfActiveStreams",o.TotalNumberOfClosedStreams="totalNumberOfClosedStreams",o.TotalOutflowRate="totalOutflowRate",o.TotalSubscriptionsWithUnits="totalSubscriptionsWithUnits",o.TransactionHash="transactionHash",o.TriggeredByEventName="triggeredByEventName",(r=eH||(eH={})).Account="account",r.AccountTokenSnapshotLogs="accountTokenSnapshotLogs",r.AccountCreatedAtBlockNumber="account__createdAtBlockNumber",r.AccountCreatedAtTimestamp="account__createdAtTimestamp",r.AccountId="account__id",r.AccountIsSuperApp="account__isSuperApp",r.AccountUpdatedAtBlockNumber="account__updatedAtBlockNumber",r.AccountUpdatedAtTimestamp="account__updatedAtTimestamp",r.ActiveIncomingStreamCount="activeIncomingStreamCount",r.ActiveOutgoingStreamCount="activeOutgoingStreamCount",r.BalanceUntilUpdatedAt="balanceUntilUpdatedAt",r.FlowOperators="flowOperators",r.Id="id",r.InactiveIncomingStreamCount="inactiveIncomingStreamCount",r.InactiveOutgoingStreamCount="inactiveOutgoingStreamCount",r.IsLiquidationEstimateOptimistic="isLiquidationEstimateOptimistic",r.MaybeCriticalAtTimestamp="maybeCriticalAtTimestamp",r.Token="token",r.TokenCreatedAtBlockNumber="token__createdAtBlockNumber",r.TokenCreatedAtTimestamp="token__createdAtTimestamp",r.TokenDecimals="token__decimals",r.TokenId="token__id",r.TokenIsListed="token__isListed",r.TokenIsNativeAssetSuperToken="token__isNativeAssetSuperToken",r.TokenIsSuperToken="token__isSuperToken",r.TokenName="token__name",r.TokenSymbol="token__symbol",r.TokenUnderlyingAddress="token__underlyingAddress",r.TotalAmountStreamedInUntilUpdatedAt="totalAmountStreamedInUntilUpdatedAt",r.TotalAmountStreamedOutUntilUpdatedAt="totalAmountStreamedOutUntilUpdatedAt",r.TotalAmountStreamedUntilUpdatedAt="totalAmountStreamedUntilUpdatedAt",r.TotalAmountTransferredUntilUpdatedAt="totalAmountTransferredUntilUpdatedAt",r.TotalApprovedSubscriptions="totalApprovedSubscriptions",r.TotalDeposit="totalDeposit",r.TotalInflowRate="totalInflowRate",r.TotalNetFlowRate="totalNetFlowRate",r.TotalNumberOfActiveStreams="totalNumberOfActiveStreams",r.TotalNumberOfClosedStreams="totalNumberOfClosedStreams",r.TotalOutflowRate="totalOutflowRate",r.TotalSubscriptionsWithUnits="totalSubscriptionsWithUnits",r.UpdatedAtBlockNumber="updatedAtBlockNumber",r.UpdatedAtTimestamp="updatedAtTimestamp",(a=eZ||(eZ={})).AccountTokenSnapshots="accountTokenSnapshots",a.CreatedAtBlockNumber="createdAtBlockNumber",a.CreatedAtTimestamp="createdAtTimestamp",a.Id="id",a.Inflows="inflows",a.IsSuperApp="isSuperApp",a.Outflows="outflows",a.PublishedIndexes="publishedIndexes",a.ReceivedTransferEvents="receivedTransferEvents",a.SentTransferEvents="sentTransferEvents",a.Subscriptions="subscriptions",a.TokenDowngradedEvents="tokenDowngradedEvents",a.TokenUpgradedEvents="tokenUpgradedEvents",a.UpdatedAtBlockNumber="updatedAtBlockNumber",a.UpdatedAtTimestamp="updatedAtTimestamp",(i=eV||(eV={})).Addresses="addresses",i.AgreementType="agreementType",i.BlockNumber="blockNumber",i.Code="code",i.GasPrice="gasPrice",i.GasUsed="gasUsed",i.Id="id",i.LogIndex="logIndex",i.Name="name",i.Order="order",i.Timestamp="timestamp",i.TransactionHash="transactionHash",(s=eW||(eW={})).Addresses="addresses",s.AgreementType="agreementType",s.BlockNumber="blockNumber",s.Code="code",s.GasPrice="gasPrice",s.GasUsed="gasUsed",s.Id="id",s.LogIndex="logIndex",s.Name="name",s.Order="order",s.Timestamp="timestamp",s.TransactionHash="transactionHash",(d=eY||(eY={})).Addresses="addresses",d.AgreementClass="agreementClass",d.AgreementId="agreementId",d.BailoutAmount="bailoutAmount",d.BlockNumber="blockNumber",d.BondAccount="bondAccount",d.Deposit="deposit",d.FlowRateAtLiquidation="flowRateAtLiquidation",d.GasPrice="gasPrice",d.GasUsed="gasUsed",d.Id="id",d.LiquidatorAccount="liquidatorAccount",d.LogIndex="logIndex",d.Name="name",d.Order="order",d.PenaltyAccount="penaltyAccount",d.RewardAmount="rewardAmount",d.Timestamp="timestamp",d.Token="token",d.TransactionHash="transactionHash",(l=eK||(eK={})).Addresses="addresses",l.AgreementClass="agreementClass",l.AgreementId="agreementId",l.BlockNumber="blockNumber",l.Deposit="deposit",l.FlowRateAtLiquidation="flowRateAtLiquidation",l.GasPrice="gasPrice",l.GasUsed="gasUsed",l.Id="id",l.LiquidationType="liquidationType",l.LiquidatorAccount="liquidatorAccount",l.LogIndex="logIndex",l.Name="name",l.Order="order",l.RewardAccount="rewardAccount",l.RewardAmount="rewardAmount",l.RewardAmountReceiver="rewardAmountReceiver",l.TargetAccount="targetAccount",l.TargetAccountBalanceDelta="targetAccountBalanceDelta",l.Timestamp="timestamp",l.Token="token",l.TransactionHash="transactionHash",l.Version="version",(u=eQ||(eQ={})).Addresses="addresses",u.App="app",u.BlockNumber="blockNumber",u.GasPrice="gasPrice",u.GasUsed="gasUsed",u.Id="id",u.LogIndex="logIndex",u.Name="name",u.Order="order",u.Timestamp="timestamp",u.TransactionHash="transactionHash",(c=eX||(eX={})).AdditionalBond="additionalBond",c.Addresses="addresses",c.BlockNumber="blockNumber",c.GasPrice="gasPrice",c.GasUsed="gasUsed",c.Id="id",c.LogIndex="logIndex",c.Name="name",c.Order="order",c.Timestamp="timestamp",c.Token="token",c.TransactionHash="transactionHash",(m=eJ||(eJ={})).Addresses="addresses",m.Amount="amount",m.BlockNumber="blockNumber",m.Data="data",m.From="from",m.GasPrice="gasPrice",m.GasUsed="gasUsed",m.Id="id",m.LogIndex="logIndex",m.Name="name",m.Operator="operator",m.OperatorData="operatorData",m.Order="order",m.Timestamp="timestamp",m.Token="token",m.TransactionHash="transactionHash",(p=ej||(ej={})).Addresses="addresses",p.BlockNumber="blockNumber",p.GasPrice="gasPrice",p.GasUsed="gasUsed",p.GovernanceAddress="governanceAddress",p.Host="host",p.Id="id",p.IsKeySet="isKeySet",p.LiquidationPeriod="liquidationPeriod",p.LogIndex="logIndex",p.Name="name",p.Order="order",p.SuperToken="superToken",p.Timestamp="timestamp",p.TransactionHash="transactionHash",(A=ez||(ez={})).AlreadyClaimed="ALREADY_CLAIMED",A.ClaimFailed="CLAIM_FAILED",A.NotClaimed="NOT_CLAIMED",(_=e0||(e0={})).AaveFeeCollectModule="AaveFeeCollectModule",_.Erc4626FeeCollectModule="ERC4626FeeCollectModule",_.FeeCollectModule="FeeCollectModule",_.FreeCollectModule="FreeCollectModule",_.LimitedFeeCollectModule="LimitedFeeCollectModule",_.LimitedTimedFeeCollectModule="LimitedTimedFeeCollectModule",_.MultirecipientFeeCollectModule="MultirecipientFeeCollectModule",_.RevertCollectModule="RevertCollectModule",_.SimpleCollectModule="SimpleCollectModule",_.TimedFeeCollectModule="TimedFeeCollectModule",_.UnknownCollectModule="UnknownCollectModule",(T=e1||(e1={})).Desc="DESC",T.Ranking="RANKING",(I=e2||(e2={})).NoneRelevant="NONE_RELEVANT",I.Relevant="RELEVANT",(S=e4||(e4={})).Addresses="addresses",S.BlockNumber="blockNumber",S.GasPrice="gasPrice",S.GasUsed="gasUsed",S.GovernanceAddress="governanceAddress",S.Host="host",S.Id="id",S.IsKeySet="isKeySet",S.Key="key",S.LogIndex="logIndex",S.Name="name",S.Order="order",S.SuperToken="superToken",S.Timestamp="timestamp",S.TransactionHash="transactionHash",S.Value="value",(b=e5||(e5={})).Erc20="ERC20",b.Erc721="ERC721",b.Erc1155="ERC1155",(e6||(e6={})).Gardeners="GARDENERS",(k=e3||(e3={})).Addresses="addresses",k.BlockNumber="blockNumber",k.GasPrice="gasPrice",k.GasUsed="gasUsed",k.Id="id",k.LogIndex="logIndex",k.Name="name",k.Order="order",k.Timestamp="timestamp",k.Token="token",k.TransactionHash="transactionHash",(f=e8||(e8={})).CanNotDecrypt="CAN_NOT_DECRYPT",f.CollectNotFinalisedOnChain="COLLECT_NOT_FINALISED_ON_CHAIN",f.DoesNotFollowProfile="DOES_NOT_FOLLOW_PROFILE",f.DoesNotOwnNft="DOES_NOT_OWN_NFT",f.DoesNotOwnProfile="DOES_NOT_OWN_PROFILE",f.FollowNotFinalisedOnChain="FOLLOW_NOT_FINALISED_ON_CHAIN",f.HasNotCollectedPublication="HAS_NOT_COLLECTED_PUBLICATION",f.MissingEncryptionParams="MISSING_ENCRYPTION_PARAMS",f.ProfileDoesNotExist="PROFILE_DOES_NOT_EXIST",f.UnauthorizedAddress="UNAUTHORIZED_ADDRESS",f.UnauthorizedBalance="UNAUTHORIZED_BALANCE",(e7||(e7={})).LitProtocol="LIT_PROTOCOL",(N=e9||(e9={})).Addresses="addresses",N.BlockNumber="blockNumber",N.GasPrice="gasPrice",N.GasUsed="gasUsed",N.Id="id",N.LogIndex="logIndex",N.Name="name",N.Order="order",N.Timestamp="timestamp",N.TransactionHash="transactionHash",(P=te||(te={})).Addresses="addresses",P.BlockNumber="blockNumber",P.ExitRate="exitRate",P.GasPrice="gasPrice",P.GasUsed="gasUsed",P.Id="id",P.LogIndex="logIndex",P.Name="name",P.Order="order",P.Timestamp="timestamp",P.Token="token",P.TransactionHash="transactionHash",(C=tt||(tt={})).CollectComment="COLLECT_COMMENT",C.CollectPost="COLLECT_POST",C.Comment="COMMENT",C.Mirror="MIRROR",C.Post="POST",C.ReactionComment="REACTION_COMMENT",C.ReactionPost="REACTION_POST",(U=tn||(tn={})).Addresses="addresses",U.BlockNumber="blockNumber",U.FlowOperator="flowOperator",U.FlowOperatorAllowance="flowOperator__allowance",U.FlowOperatorCreatedAtBlockNumber="flowOperator__createdAtBlockNumber",U.FlowOperatorCreatedAtTimestamp="flowOperator__createdAtTimestamp",U.FlowOperatorFlowOperator="flowOperator__flowOperator",U.FlowOperatorFlowRateAllowanceGranted="flowOperator__flowRateAllowanceGranted",U.FlowOperatorFlowRateAllowanceRemaining="flowOperator__flowRateAllowanceRemaining",U.FlowOperatorId="flowOperator__id",U.FlowOperatorPermissions="flowOperator__permissions",U.FlowOperatorUpdatedAtBlockNumber="flowOperator__updatedAtBlockNumber",U.FlowOperatorUpdatedAtTimestamp="flowOperator__updatedAtTimestamp",U.FlowRateAllowance="flowRateAllowance",U.GasPrice="gasPrice",U.GasUsed="gasUsed",U.Id="id",U.LogIndex="logIndex",U.Name="name",U.Order="order",U.Permissions="permissions",U.Sender="sender",U.Timestamp="timestamp",U.Token="token",U.TransactionHash="transactionHash",(g=to||(to={})).AccountTokenSnapshot="accountTokenSnapshot",g.AccountTokenSnapshotActiveIncomingStreamCount="accountTokenSnapshot__activeIncomingStreamCount",g.AccountTokenSnapshotActiveOutgoingStreamCount="accountTokenSnapshot__activeOutgoingStreamCount",g.AccountTokenSnapshotBalanceUntilUpdatedAt="accountTokenSnapshot__balanceUntilUpdatedAt",g.AccountTokenSnapshotId="accountTokenSnapshot__id",g.AccountTokenSnapshotInactiveIncomingStreamCount="accountTokenSnapshot__inactiveIncomingStreamCount",g.AccountTokenSnapshotInactiveOutgoingStreamCount="accountTokenSnapshot__inactiveOutgoingStreamCount",g.AccountTokenSnapshotIsLiquidationEstimateOptimistic="accountTokenSnapshot__isLiquidationEstimateOptimistic",g.AccountTokenSnapshotMaybeCriticalAtTimestamp="accountTokenSnapshot__maybeCriticalAtTimestamp",g.AccountTokenSnapshotTotalAmountStreamedInUntilUpdatedAt="accountTokenSnapshot__totalAmountStreamedInUntilUpdatedAt",g.AccountTokenSnapshotTotalAmountStreamedOutUntilUpdatedAt="accountTokenSnapshot__totalAmountStreamedOutUntilUpdatedAt",g.AccountTokenSnapshotTotalAmountStreamedUntilUpdatedAt="accountTokenSnapshot__totalAmountStreamedUntilUpdatedAt",g.AccountTokenSnapshotTotalAmountTransferredUntilUpdatedAt="accountTokenSnapshot__totalAmountTransferredUntilUpdatedAt",g.AccountTokenSnapshotTotalApprovedSubscriptions="accountTokenSnapshot__totalApprovedSubscriptions",g.AccountTokenSnapshotTotalDeposit="accountTokenSnapshot__totalDeposit",g.AccountTokenSnapshotTotalInflowRate="accountTokenSnapshot__totalInflowRate",g.AccountTokenSnapshotTotalNetFlowRate="accountTokenSnapshot__totalNetFlowRate",g.AccountTokenSnapshotTotalNumberOfActiveStreams="accountTokenSnapshot__totalNumberOfActiveStreams",g.AccountTokenSnapshotTotalNumberOfClosedStreams="accountTokenSnapshot__totalNumberOfClosedStreams",g.AccountTokenSnapshotTotalOutflowRate="accountTokenSnapshot__totalOutflowRate",g.AccountTokenSnapshotTotalSubscriptionsWithUnits="accountTokenSnapshot__totalSubscriptionsWithUnits",g.AccountTokenSnapshotUpdatedAtBlockNumber="accountTokenSnapshot__updatedAtBlockNumber",g.AccountTokenSnapshotUpdatedAtTimestamp="accountTokenSnapshot__updatedAtTimestamp",g.Allowance="allowance",g.CreatedAtBlockNumber="createdAtBlockNumber",g.CreatedAtTimestamp="createdAtTimestamp",g.FlowOperator="flowOperator",g.FlowOperatorUpdatedEvents="flowOperatorUpdatedEvents",g.FlowRateAllowanceGranted="flowRateAllowanceGranted",g.FlowRateAllowanceRemaining="flowRateAllowanceRemaining",g.Id="id",g.Permissions="permissions",g.Sender="sender",g.SenderCreatedAtBlockNumber="sender__createdAtBlockNumber",g.SenderCreatedAtTimestamp="sender__createdAtTimestamp",g.SenderId="sender__id",g.SenderIsSuperApp="sender__isSuperApp",g.SenderUpdatedAtBlockNumber="sender__updatedAtBlockNumber",g.SenderUpdatedAtTimestamp="sender__updatedAtTimestamp",g.Token="token",g.TokenCreatedAtBlockNumber="token__createdAtBlockNumber",g.TokenCreatedAtTimestamp="token__createdAtTimestamp",g.TokenDecimals="token__decimals",g.TokenId="token__id",g.TokenIsListed="token__isListed",g.TokenIsNativeAssetSuperToken="token__isNativeAssetSuperToken",g.TokenIsSuperToken="token__isSuperToken",g.TokenName="token__name",g.TokenSymbol="token__symbol",g.TokenUnderlyingAddress="token__underlyingAddress",g.UpdatedAtBlockNumber="updatedAtBlockNumber",g.UpdatedAtTimestamp="updatedAtTimestamp",(v=tr||(tr={})).Addresses="addresses",v.BlockNumber="blockNumber",v.Deposit="deposit",v.FlowOperator="flowOperator",v.FlowRate="flowRate",v.GasPrice="gasPrice",v.GasUsed="gasUsed",v.Id="id",v.LogIndex="logIndex",v.Name="name",v.OldFlowRate="oldFlowRate",v.Order="order",v.Receiver="receiver",v.Sender="sender",v.Stream="stream",v.StreamCreatedAtBlockNumber="stream__createdAtBlockNumber",v.StreamCreatedAtTimestamp="stream__createdAtTimestamp",v.StreamCurrentFlowRate="stream__currentFlowRate",v.StreamDeposit="stream__deposit",v.StreamId="stream__id",v.StreamStreamedUntilUpdatedAt="stream__streamedUntilUpdatedAt",v.StreamUpdatedAtBlockNumber="stream__updatedAtBlockNumber",v.StreamUpdatedAtTimestamp="stream__updatedAtTimestamp",v.StreamUserData="stream__userData",v.Timestamp="timestamp",v.Token="token",v.TotalAmountStreamedUntilTimestamp="totalAmountStreamedUntilTimestamp",v.TotalReceiverFlowRate="totalReceiverFlowRate",v.TotalSenderFlowRate="totalSenderFlowRate",v.TransactionHash="transactionHash",v.Type="type",v.UserData="userData",(R=ta||(ta={})).FeeFollowModule="FeeFollowModule",R.ProfileFollowModule="ProfileFollowModule",R.RevertFollowModule="RevertFollowModule",R.UnknownFollowModule="UnknownFollowModule",(O=ti||(ti={})).Addresses="addresses",O.BlockNumber="blockNumber",O.GasPrice="gasPrice",O.GasUsed="gasUsed",O.Id="id",O.LogIndex="logIndex",O.Name="name",O.NewGovernance="newGovernance",O.OldGovernance="oldGovernance",O.Order="order",O.Timestamp="timestamp",O.TransactionHash="transactionHash",(y=ts||(ts={})).AlreadyVerified="ALREADY_VERIFIED",y.Success="SUCCESS",(x=td||(td={})).Addresses="addresses",x.BlockNumber="blockNumber",x.GasPrice="gasPrice",x.GasUsed="gasUsed",x.Id="id",x.Index="index",x.IndexId="indexId",x.IndexCreatedAtBlockNumber="index__createdAtBlockNumber",x.IndexCreatedAtTimestamp="index__createdAtTimestamp",x.IndexIndexId="index__indexId",x.IndexIndexValue="index__indexValue",x.IndexTotalAmountDistributedUntilUpdatedAt="index__totalAmountDistributedUntilUpdatedAt",x.IndexTotalSubscriptionsWithUnits="index__totalSubscriptionsWithUnits",x.IndexTotalUnits="index__totalUnits",x.IndexTotalUnitsApproved="index__totalUnitsApproved",x.IndexTotalUnitsPending="index__totalUnitsPending",x.IndexUpdatedAtBlockNumber="index__updatedAtBlockNumber",x.IndexUpdatedAtTimestamp="index__updatedAtTimestamp",x.LogIndex="logIndex",x.Name="name",x.Order="order",x.Publisher="publisher",x.Timestamp="timestamp",x.Token="token",x.TransactionHash="transactionHash",x.UserData="userData",(h=tl||(tl={})).Addresses="addresses",h.Amount="amount",h.BlockNumber="blockNumber",h.GasPrice="gasPrice",h.GasUsed="gasUsed",h.Id="id",h.Index="index",h.IndexId="indexId",h.IndexCreatedAtBlockNumber="index__createdAtBlockNumber",h.IndexCreatedAtTimestamp="index__createdAtTimestamp",h.IndexIndexId="index__indexId",h.IndexIndexValue="index__indexValue",h.IndexTotalAmountDistributedUntilUpdatedAt="index__totalAmountDistributedUntilUpdatedAt",h.IndexTotalSubscriptionsWithUnits="index__totalSubscriptionsWithUnits",h.IndexTotalUnits="index__totalUnits",h.IndexTotalUnitsApproved="index__totalUnitsApproved",h.IndexTotalUnitsPending="index__totalUnitsPending",h.IndexUpdatedAtBlockNumber="index__updatedAtBlockNumber",h.IndexUpdatedAtTimestamp="index__updatedAtTimestamp",h.LogIndex="logIndex",h.Name="name",h.Order="order",h.Publisher="publisher",h.Subscriber="subscriber",h.Timestamp="timestamp",h.Token="token",h.TransactionHash="transactionHash",(E=tu||(tu={})).Addresses="addresses",E.BlockNumber="blockNumber",E.GasPrice="gasPrice",E.GasUsed="gasUsed",E.Id="id",E.Index="index",E.IndexId="indexId",E.IndexCreatedAtBlockNumber="index__createdAtBlockNumber",E.IndexCreatedAtTimestamp="index__createdAtTimestamp",E.IndexIndexId="index__indexId",E.IndexIndexValue="index__indexValue",E.IndexTotalAmountDistributedUntilUpdatedAt="index__totalAmountDistributedUntilUpdatedAt",E.IndexTotalSubscriptionsWithUnits="index__totalSubscriptionsWithUnits",E.IndexTotalUnits="index__totalUnits",E.IndexTotalUnitsApproved="index__totalUnitsApproved",E.IndexTotalUnitsPending="index__totalUnitsPending",E.IndexUpdatedAtBlockNumber="index__updatedAtBlockNumber",E.IndexUpdatedAtTimestamp="index__updatedAtTimestamp",E.LogIndex="logIndex",E.Name="name",E.Order="order",E.Publisher="publisher",E.Subscriber="subscriber",E.Timestamp="timestamp",E.Token="token",E.TransactionHash="transactionHash",E.UserData="userData",(q=tc||(tc={})).Approved="approved",q.CreatedAtBlockNumber="createdAtBlockNumber",q.CreatedAtTimestamp="createdAtTimestamp",q.Id="id",q.Index="index",q.IndexValueUntilUpdatedAt="indexValueUntilUpdatedAt",q.IndexCreatedAtBlockNumber="index__createdAtBlockNumber",q.IndexCreatedAtTimestamp="index__createdAtTimestamp",q.IndexIndexId="index__indexId",q.IndexIndexValue="index__indexValue",q.IndexTotalAmountDistributedUntilUpdatedAt="index__totalAmountDistributedUntilUpdatedAt",q.IndexTotalSubscriptionsWithUnits="index__totalSubscriptionsWithUnits",q.IndexTotalUnits="index__totalUnits",q.IndexTotalUnitsApproved="index__totalUnitsApproved",q.IndexTotalUnitsPending="index__totalUnitsPending",q.IndexUpdatedAtBlockNumber="index__updatedAtBlockNumber",q.IndexUpdatedAtTimestamp="index__updatedAtTimestamp",q.Subscriber="subscriber",q.SubscriberCreatedAtBlockNumber="subscriber__createdAtBlockNumber",q.SubscriberCreatedAtTimestamp="subscriber__createdAtTimestamp",q.SubscriberId="subscriber__id",q.SubscriberIsSuperApp="subscriber__isSuperApp",q.SubscriberUpdatedAtBlockNumber="subscriber__updatedAtBlockNumber",q.SubscriberUpdatedAtTimestamp="subscriber__updatedAtTimestamp",q.SubscriptionApprovedEvents="subscriptionApprovedEvents",q.SubscriptionDistributionClaimedEvents="subscriptionDistributionClaimedEvents",q.SubscriptionRevokedEvents="subscriptionRevokedEvents",q.SubscriptionUnitsUpdatedEvents="subscriptionUnitsUpdatedEvents",q.TotalAmountReceivedUntilUpdatedAt="totalAmountReceivedUntilUpdatedAt",q.Units="units",q.UpdatedAtBlockNumber="updatedAtBlockNumber",q.UpdatedAtTimestamp="updatedAtTimestamp",(D=tm||(tm={})).Addresses="addresses",D.BlockNumber="blockNumber",D.GasPrice="gasPrice",D.GasUsed="gasUsed",D.Id="id",D.Index="index",D.IndexId="indexId",D.IndexCreatedAtBlockNumber="index__createdAtBlockNumber",D.IndexCreatedAtTimestamp="index__createdAtTimestamp",D.IndexIndexId="index__indexId",D.IndexIndexValue="index__indexValue",D.IndexTotalAmountDistributedUntilUpdatedAt="index__totalAmountDistributedUntilUpdatedAt",D.IndexTotalSubscriptionsWithUnits="index__totalSubscriptionsWithUnits",D.IndexTotalUnits="index__totalUnits",D.IndexTotalUnitsApproved="index__totalUnitsApproved",D.IndexTotalUnitsPending="index__totalUnitsPending",D.IndexUpdatedAtBlockNumber="index__updatedAtBlockNumber",D.IndexUpdatedAtTimestamp="index__updatedAtTimestamp",D.LogIndex="logIndex",D.Name="name",D.OldUnits="oldUnits",D.Order="order",D.Publisher="publisher",D.Subscriber="subscriber",D.Timestamp="timestamp",D.Token="token",D.TransactionHash="transactionHash",D.Units="units",D.UserData="userData",(F=tp||(tp={})).Addresses="addresses",F.BlockNumber="blockNumber",F.GasPrice="gasPrice",F.GasUsed="gasUsed",F.Id="id",F.Index="index",F.IndexId="indexId",F.IndexCreatedAtBlockNumber="index__createdAtBlockNumber",F.IndexCreatedAtTimestamp="index__createdAtTimestamp",F.IndexIndexId="index__indexId",F.IndexIndexValue="index__indexValue",F.IndexTotalAmountDistributedUntilUpdatedAt="index__totalAmountDistributedUntilUpdatedAt",F.IndexTotalSubscriptionsWithUnits="index__totalSubscriptionsWithUnits",F.IndexTotalUnits="index__totalUnits",F.IndexTotalUnitsApproved="index__totalUnitsApproved",F.IndexTotalUnitsPending="index__totalUnitsPending",F.IndexUpdatedAtBlockNumber="index__updatedAtBlockNumber",F.IndexUpdatedAtTimestamp="index__updatedAtTimestamp",F.LogIndex="logIndex",F.Name="name",F.Order="order",F.Publisher="publisher",F.Subscriber="subscriber",F.Timestamp="timestamp",F.Token="token",F.TransactionHash="transactionHash",F.UserData="userData",(M=tA||(tA={})).Addresses="addresses",M.BlockNumber="blockNumber",M.GasPrice="gasPrice",M.GasUsed="gasUsed",M.Id="id",M.Index="index",M.IndexId="indexId",M.IndexCreatedAtBlockNumber="index__createdAtBlockNumber",M.IndexCreatedAtTimestamp="index__createdAtTimestamp",M.IndexIndexId="index__indexId",M.IndexIndexValue="index__indexValue",M.IndexTotalAmountDistributedUntilUpdatedAt="index__totalAmountDistributedUntilUpdatedAt",M.IndexTotalSubscriptionsWithUnits="index__totalSubscriptionsWithUnits",M.IndexTotalUnits="index__totalUnits",M.IndexTotalUnitsApproved="index__totalUnitsApproved",M.IndexTotalUnitsPending="index__totalUnitsPending",M.IndexUpdatedAtBlockNumber="index__updatedAtBlockNumber",M.IndexUpdatedAtTimestamp="index__updatedAtTimestamp",M.LogIndex="logIndex",M.Name="name",M.NewIndexValue="newIndexValue",M.OldIndexValue="oldIndexValue",M.Order="order",M.Publisher="publisher",M.Timestamp="timestamp",M.Token="token",M.TotalUnitsApproved="totalUnitsApproved",M.TotalUnitsPending="totalUnitsPending",M.TransactionHash="transactionHash",M.UserData="userData",(B=t_||(t_={})).CreatedAtBlockNumber="createdAtBlockNumber",B.CreatedAtTimestamp="createdAtTimestamp",B.Id="id",B.IndexCreatedEvent="indexCreatedEvent",B.IndexCreatedEventBlockNumber="indexCreatedEvent__blockNumber",B.IndexCreatedEventGasPrice="indexCreatedEvent__gasPrice",B.IndexCreatedEventGasUsed="indexCreatedEvent__gasUsed",B.IndexCreatedEventId="indexCreatedEvent__id",B.IndexCreatedEventIndexId="indexCreatedEvent__indexId",B.IndexCreatedEventLogIndex="indexCreatedEvent__logIndex",B.IndexCreatedEventName="indexCreatedEvent__name",B.IndexCreatedEventOrder="indexCreatedEvent__order",B.IndexCreatedEventPublisher="indexCreatedEvent__publisher",B.IndexCreatedEventTimestamp="indexCreatedEvent__timestamp",B.IndexCreatedEventToken="indexCreatedEvent__token",B.IndexCreatedEventTransactionHash="indexCreatedEvent__transactionHash",B.IndexCreatedEventUserData="indexCreatedEvent__userData",B.IndexDistributionClaimedEvents="indexDistributionClaimedEvents",B.IndexId="indexId",B.IndexSubscribedEvents="indexSubscribedEvents",B.IndexUnitsUpdatedEvents="indexUnitsUpdatedEvents",B.IndexUnsubscribedEvents="indexUnsubscribedEvents",B.IndexUpdatedEvents="indexUpdatedEvents",B.IndexValue="indexValue",B.Publisher="publisher",B.PublisherCreatedAtBlockNumber="publisher__createdAtBlockNumber",B.PublisherCreatedAtTimestamp="publisher__createdAtTimestamp",B.PublisherId="publisher__id",B.PublisherIsSuperApp="publisher__isSuperApp",B.PublisherUpdatedAtBlockNumber="publisher__updatedAtBlockNumber",B.PublisherUpdatedAtTimestamp="publisher__updatedAtTimestamp",B.Subscriptions="subscriptions",B.Token="token",B.TokenCreatedAtBlockNumber="token__createdAtBlockNumber",B.TokenCreatedAtTimestamp="token__createdAtTimestamp",B.TokenDecimals="token__decimals",B.TokenId="token__id",B.TokenIsListed="token__isListed",B.TokenIsNativeAssetSuperToken="token__isNativeAssetSuperToken",B.TokenIsSuperToken="token__isSuperToken",B.TokenName="token__name",B.TokenSymbol="token__symbol",B.TokenUnderlyingAddress="token__underlyingAddress",B.TotalAmountDistributedUntilUpdatedAt="totalAmountDistributedUntilUpdatedAt",B.TotalSubscriptionsWithUnits="totalSubscriptionsWithUnits",B.TotalUnits="totalUnits",B.TotalUnitsApproved="totalUnitsApproved",B.TotalUnitsPending="totalUnitsPending",B.UpdatedAtBlockNumber="updatedAtBlockNumber",B.UpdatedAtTimestamp="updatedAtTimestamp",(w=tT||(tT={})).Addresses="addresses",w.App="app",w.BlockNumber="blockNumber",w.GasPrice="gasPrice",w.GasUsed="gasUsed",w.Id="id",w.LogIndex="logIndex",w.Name="name",w.Order="order",w.Reason="reason",w.Timestamp="timestamp",w.TransactionHash="transactionHash",(L=tI||(tI={})).Addresses="addresses",L.Amount="amount",L.BlockNumber="blockNumber",L.Data="data",L.GasPrice="gasPrice",L.GasUsed="gasUsed",L.Id="id",L.LogIndex="logIndex",L.Name="name",L.Operator="operator",L.OperatorData="operatorData",L.Order="order",L.Timestamp="timestamp",L.To="to",L.Token="token",L.TransactionHash="transactionHash",($=tS||(tS={})).BlockCantBeReadFromNode="BLOCK_CANT_BE_READ_FROM_NODE",$.BlockTooFar="BLOCK_TOO_FAR",$.CanNotConnectToBundlr="CAN_NOT_CONNECT_TO_BUNDLR",$.ChainSignatureAlreadyUsed="CHAIN_SIGNATURE_ALREADY_USED",$.DataCantBeReadFromNode="DATA_CANT_BE_READ_FROM_NODE",$.EventMismatch="EVENT_MISMATCH",$.GeneratedPublicationIdMismatch="GENERATED_PUBLICATION_ID_MISMATCH",$.InvalidEventTimestamp="INVALID_EVENT_TIMESTAMP",$.InvalidFormattedTypedData="INVALID_FORMATTED_TYPED_DATA",$.InvalidPointerSetNotNeeded="INVALID_POINTER_SET_NOT_NEEDED",$.InvalidSignatureSubmitter="INVALID_SIGNATURE_SUBMITTER",$.InvalidTxId="INVALID_TX_ID",$.InvalidTypedDataDeadlineTimestamp="INVALID_TYPED_DATA_DEADLINE_TIMESTAMP",$.NotClosestBlock="NOT_CLOSEST_BLOCK",$.NoSignatureSubmitter="NO_SIGNATURE_SUBMITTER",$.PointerFailedVerification="POINTER_FAILED_VERIFICATION",$.PotentialReorg="POTENTIAL_REORG",$.PublicationNonceInvalid="PUBLICATION_NONCE_INVALID",$.PublicationNoneDa="PUBLICATION_NONE_DA",$.PublicationNoPointer="PUBLICATION_NO_POINTER",$.PublicationSignerNotAllowed="PUBLICATION_SIGNER_NOT_ALLOWED",$.SimulationFailed="SIMULATION_FAILED",$.SimulationNodeCouldNotRun="SIMULATION_NODE_COULD_NOT_RUN",$.TimestampProofInvalidDaId="TIMESTAMP_PROOF_INVALID_DA_ID",$.TimestampProofInvalidSignature="TIMESTAMP_PROOF_INVALID_SIGNATURE",$.TimestampProofInvalidType="TIMESTAMP_PROOF_INVALID_TYPE",$.TimestampProofNotSubmitter="TIMESTAMP_PROOF_NOT_SUBMITTER",$.Unknown="UNKNOWN",(G=tb||(tb={})).Addresses="addresses",G.BlockNumber="blockNumber",G.Bond="bond",G.ExitRate="exitRate",G.GasPrice="gasPrice",G.GasUsed="gasUsed",G.Id="id",G.LogIndex="logIndex",G.Name="name",G.Order="order",G.Pic="pic",G.Timestamp="timestamp",G.Token="token",G.TransactionHash="transactionHash",(H=tk||(tk={})).CollectedComment="COLLECTED_COMMENT",H.CollectedPost="COLLECTED_POST",H.CommentedComment="COMMENTED_COMMENT",H.CommentedPost="COMMENTED_POST",H.Followed="FOLLOWED",H.MentionComment="MENTION_COMMENT",H.MentionPost="MENTION_POST",H.MirroredComment="MIRRORED_COMMENT",H.MirroredPost="MIRRORED_POST",H.ReactionComment="REACTION_COMMENT",H.ReactionPost="REACTION_POST",(Z=tf||(tf={})).Asc="asc",Z.Desc="desc",(V=tN||(tN={})).Addresses="addresses",V.BlockNumber="blockNumber",V.GasPrice="gasPrice",V.GasUsed="gasUsed",V.GovernanceAddress="governanceAddress",V.Host="host",V.Id="id",V.IsKeySet="isKeySet",V.LiquidationPeriod="liquidationPeriod",V.LogIndex="logIndex",V.Name="name",V.Order="order",V.PatricianPeriod="patricianPeriod",V.SuperToken="superToken",V.Timestamp="timestamp",V.TransactionHash="transactionHash",(W=tP||(tP={})).CreatedOn="CREATED_ON",W.LatestCreated="LATEST_CREATED",W.MostCollects="MOST_COLLECTS",W.MostComments="MOST_COMMENTS",W.MostFollowers="MOST_FOLLOWERS",W.MostMirrors="MOST_MIRRORS",W.MostPosts="MOST_POSTS",W.MostPublication="MOST_PUBLICATION",(Y=tC||(tC={})).Complete="COMPLETE",Y.Minting="MINTING",Y.Transferring="TRANSFERRING",(K=tU||(tU={})).Nsfw="NSFW",K.Sensitive="SENSITIVE",K.Spoiler="SPOILER",(Q=tg||(tg={})).Article="ARTICLE",Q.Audio="AUDIO",Q.Embed="EMBED",Q.Image="IMAGE",Q.Link="LINK",Q.TextOnly="TEXT_ONLY",Q.Video="VIDEO",(tv||(tv={})).Lens="LENS",(X=tR||(tR={})).Date="date",X.Number="number",X.String="string",(J=tO||(tO={})).MetadataValidationFailed="METADATA_VALIDATION_FAILED",J.NotFound="NOT_FOUND",J.Pending="PENDING",J.Success="SUCCESS",(j=ty||(ty={})).Impersonation="IMPERSONATION",j.Scam="SCAM",(z=tx||(tx={})).AnimalAbuse="ANIMAL_ABUSE",z.DirectThreat="DIRECT_THREAT",z.HumanAbuse="HUMAN_ABUSE",z.ThreatIndividual="THREAT_INDIVIDUAL",z.Violence="VIOLENCE",(ee=th||(th={})).Fraud="FRAUD",ee.Illegal="ILLEGAL",ee.Sensitive="SENSITIVE",ee.Spam="SPAM",(et=tE||(tE={})).Nsfw="NSFW",et.Offensive="OFFENSIVE",(en=tq||(tq={})).FakeEngagement="FAKE_ENGAGEMENT",en.LowSignal="LOW_SIGNAL",en.ManipulationAlgo="MANIPULATION_ALGO",en.Misleading="MISLEADING",en.MisuseHashtags="MISUSE_HASHTAGS",en.Repetitive="REPETITIVE",en.SomethingElse="SOMETHING_ELSE",en.Unrelated="UNRELATED",(eo=tD||(tD={})).CuratedProfiles="CURATED_PROFILES",eo.Latest="LATEST",eo.TopCollected="TOP_COLLECTED",eo.TopCommented="TOP_COMMENTED",eo.TopMirrored="TOP_MIRRORED",(er=tF||(tF={})).Comment="COMMENT",er.Mirror="MIRROR",er.Post="POST",(ea=tM||(tM={})).Downvote="DOWNVOTE",ea.Upvote="UPVOTE",(ei=tB||(tB={})).DegreesOfSeparationReferenceModule="DegreesOfSeparationReferenceModule",ei.FollowerOnlyReferenceModule="FollowerOnlyReferenceModule",ei.UnknownReferenceModule="UnknownReferenceModule",(es=tw||(tw={})).Expired="EXPIRED",es.HandleTaken="HANDLE_TAKEN",es.NotAllowed="NOT_ALLOWED",es.Rejected="REJECTED",es.WrongWalletSigned="WRONG_WALLET_SIGNED",(ed=tL||(tL={})).CreateProfile="CREATE_PROFILE",ed.Dispatcher_1="DISPATCHER_1",ed.Dispatcher_2="DISPATCHER_2",ed.Dispatcher_3="DISPATCHER_3",ed.Dispatcher_4="DISPATCHER_4",ed.Dispatcher_5="DISPATCHER_5",ed.Dispatcher_6="DISPATCHER_6",ed.Dispatcher_7="DISPATCHER_7",ed.Dispatcher_8="DISPATCHER_8",ed.Dispatcher_9="DISPATCHER_9",ed.Dispatcher_10="DISPATCHER_10",ed.ProxyActionCollect_1="PROXY_ACTION_COLLECT_1",ed.ProxyActionCollect_2="PROXY_ACTION_COLLECT_2",ed.ProxyActionCollect_3="PROXY_ACTION_COLLECT_3",ed.ProxyActionCollect_4="PROXY_ACTION_COLLECT_4",ed.ProxyActionCollect_5="PROXY_ACTION_COLLECT_5",ed.ProxyActionCollect_6="PROXY_ACTION_COLLECT_6",ed.ProxyActionFollow_1="PROXY_ACTION_FOLLOW_1",ed.ProxyActionFollow_2="PROXY_ACTION_FOLLOW_2",ed.ProxyActionFollow_3="PROXY_ACTION_FOLLOW_3",ed.ProxyActionFollow_4="PROXY_ACTION_FOLLOW_4",ed.ProxyActionFollow_5="PROXY_ACTION_FOLLOW_5",ed.ProxyActionFollow_6="PROXY_ACTION_FOLLOW_6",ed.ProxyActionFollow_7="PROXY_ACTION_FOLLOW_7",ed.ProxyActionFollow_8="PROXY_ACTION_FOLLOW_8",ed.ProxyActionFollow_9="PROXY_ACTION_FOLLOW_9",ed.ProxyActionFollow_10="PROXY_ACTION_FOLLOW_10",ed.WithSig_1="WITH_SIG_1",ed.WithSig_2="WITH_SIG_2",ed.WithSig_3="WITH_SIG_3",(el=t$||(t$={})).CreatedAtBlockNumber="createdAtBlockNumber",el.CreatedAtTimestamp="createdAtTimestamp",el.Id="id",el.IsListed="isListed",el.IsToken="isToken",el.SetEvents="setEvents",el.TargetAddress="targetAddress",el.UpdatedAtBlockNumber="updatedAtBlockNumber",el.UpdatedAtTimestamp="updatedAtTimestamp",(eu=tG||(tG={})).Addresses="addresses",eu.BlockNumber="blockNumber",eu.GasPrice="gasPrice",eu.GasUsed="gasUsed",eu.GovernanceAddress="governanceAddress",eu.Host="host",eu.Id="id",eu.IsKeySet="isKeySet",eu.LogIndex="logIndex",eu.Name="name",eu.Order="order",eu.RewardAddress="rewardAddress",eu.SuperToken="superToken",eu.Timestamp="timestamp",eu.TransactionHash="transactionHash",(ec=tH||(tH={})).Addresses="addresses",ec.BlockNumber="blockNumber",ec.GasPrice="gasPrice",ec.GasUsed="gasUsed",ec.Id="id",ec.LogIndex="logIndex",ec.Name="name",ec.NewAdminRole="newAdminRole",ec.Order="order",ec.PreviousAdminRole="previousAdminRole",ec.Role="role",ec.Timestamp="timestamp",ec.TransactionHash="transactionHash",(em=tZ||(tZ={})).Account="account",em.Addresses="addresses",em.BlockNumber="blockNumber",em.GasPrice="gasPrice",em.GasUsed="gasUsed",em.Id="id",em.LogIndex="logIndex",em.Name="name",em.Order="order",em.Role="role",em.Sender="sender",em.Timestamp="timestamp",em.TransactionHash="transactionHash",(ep=tV||(tV={})).Account="account",ep.Addresses="addresses",ep.BlockNumber="blockNumber",ep.GasPrice="gasPrice",ep.GasUsed="gasUsed",ep.Id="id",ep.LogIndex="logIndex",ep.Name="name",ep.Order="order",ep.Role="role",ep.Sender="sender",ep.Timestamp="timestamp",ep.TransactionHash="transactionHash",(eA=tW||(tW={})).BlockNumber="blockNumber",eA.Branch="branch",eA.Configuration="configuration",eA.Id="id",eA.Timestamp="timestamp",(e_=tY||(tY={})).Equal="EQUAL",e_.GreaterThan="GREATER_THAN",e_.GreaterThanOrEqual="GREATER_THAN_OR_EQUAL",e_.LessThan="LESS_THAN",e_.LessThanOrEqual="LESS_THAN_OR_EQUAL",e_.NotEqual="NOT_EQUAL",(eT=tK||(tK={})).Profile="PROFILE",eT.Publication="PUBLICATION",(eI=tQ||(tQ={})).Addresses="addresses",eI.Amount="amount",eI.BlockNumber="blockNumber",eI.Data="data",eI.From="from",eI.GasPrice="gasPrice",eI.GasUsed="gasUsed",eI.Id="id",eI.LogIndex="logIndex",eI.Name="name",eI.Operator="operator",eI.OperatorData="operatorData",eI.Order="order",eI.Timestamp="timestamp",eI.To="to",eI.Token="token",eI.TransactionHash="transactionHash",(eS=tX||(tX={})).Addresses="addresses",eS.BlockNumber="blockNumber",eS.GasPrice="gasPrice",eS.GasUsed="gasUsed",eS.HashedName="hashedName",eS.Id="id",eS.LogIndex="logIndex",eS.Name="name",eS.Order="order",eS.ResolverEntry="resolverEntry",eS.ResolverEntryCreatedAtBlockNumber="resolverEntry__createdAtBlockNumber",eS.ResolverEntryCreatedAtTimestamp="resolverEntry__createdAtTimestamp",eS.ResolverEntryId="resolverEntry__id",eS.ResolverEntryIsListed="resolverEntry__isListed",eS.ResolverEntryIsToken="resolverEntry__isToken",eS.ResolverEntryTargetAddress="resolverEntry__targetAddress",eS.ResolverEntryUpdatedAtBlockNumber="resolverEntry__updatedAtBlockNumber",eS.ResolverEntryUpdatedAtTimestamp="resolverEntry__updatedAtTimestamp",eS.Target="target",eS.Timestamp="timestamp",eS.TransactionHash="transactionHash",(eb=tJ||(tJ={})).Deposit="deposit",eb.FlowRate="flowRate",eb.Id="id",eb.Receiver="receiver",eb.ReceiverCreatedAtBlockNumber="receiver__createdAtBlockNumber",eb.ReceiverCreatedAtTimestamp="receiver__createdAtTimestamp",eb.ReceiverId="receiver__id",eb.ReceiverIsSuperApp="receiver__isSuperApp",eb.ReceiverUpdatedAtBlockNumber="receiver__updatedAtBlockNumber",eb.ReceiverUpdatedAtTimestamp="receiver__updatedAtTimestamp",eb.Sender="sender",eb.SenderCreatedAtBlockNumber="sender__createdAtBlockNumber",eb.SenderCreatedAtTimestamp="sender__createdAtTimestamp",eb.SenderId="sender__id",eb.SenderIsSuperApp="sender__isSuperApp",eb.SenderUpdatedAtBlockNumber="sender__updatedAtBlockNumber",eb.SenderUpdatedAtTimestamp="sender__updatedAtTimestamp",eb.StartedAtBlockNumber="startedAtBlockNumber",eb.StartedAtEvent="startedAtEvent",eb.StartedAtEventBlockNumber="startedAtEvent__blockNumber",eb.StartedAtEventDeposit="startedAtEvent__deposit",eb.StartedAtEventFlowOperator="startedAtEvent__flowOperator",eb.StartedAtEventFlowRate="startedAtEvent__flowRate",eb.StartedAtEventGasPrice="startedAtEvent__gasPrice",eb.StartedAtEventGasUsed="startedAtEvent__gasUsed",eb.StartedAtEventId="startedAtEvent__id",eb.StartedAtEventLogIndex="startedAtEvent__logIndex",eb.StartedAtEventName="startedAtEvent__name",eb.StartedAtEventOldFlowRate="startedAtEvent__oldFlowRate",eb.StartedAtEventOrder="startedAtEvent__order",eb.StartedAtEventReceiver="startedAtEvent__receiver",eb.StartedAtEventSender="startedAtEvent__sender",eb.StartedAtEventTimestamp="startedAtEvent__timestamp",eb.StartedAtEventToken="startedAtEvent__token",eb.StartedAtEventTotalAmountStreamedUntilTimestamp="startedAtEvent__totalAmountStreamedUntilTimestamp",eb.StartedAtEventTotalReceiverFlowRate="startedAtEvent__totalReceiverFlowRate",eb.StartedAtEventTotalSenderFlowRate="startedAtEvent__totalSenderFlowRate",eb.StartedAtEventTransactionHash="startedAtEvent__transactionHash",eb.StartedAtEventType="startedAtEvent__type",eb.StartedAtEventUserData="startedAtEvent__userData",eb.StartedAtTimestamp="startedAtTimestamp",eb.StoppedAtBlockNumber="stoppedAtBlockNumber",eb.StoppedAtEvent="stoppedAtEvent",eb.StoppedAtEventBlockNumber="stoppedAtEvent__blockNumber",eb.StoppedAtEventDeposit="stoppedAtEvent__deposit",eb.StoppedAtEventFlowOperator="stoppedAtEvent__flowOperator",eb.StoppedAtEventFlowRate="stoppedAtEvent__flowRate",eb.StoppedAtEventGasPrice="stoppedAtEvent__gasPrice",eb.StoppedAtEventGasUsed="stoppedAtEvent__gasUsed",eb.StoppedAtEventId="stoppedAtEvent__id",eb.StoppedAtEventLogIndex="stoppedAtEvent__logIndex",eb.StoppedAtEventName="stoppedAtEvent__name",eb.StoppedAtEventOldFlowRate="stoppedAtEvent__oldFlowRate",eb.StoppedAtEventOrder="stoppedAtEvent__order",eb.StoppedAtEventReceiver="stoppedAtEvent__receiver",eb.StoppedAtEventSender="stoppedAtEvent__sender",eb.StoppedAtEventTimestamp="stoppedAtEvent__timestamp",eb.StoppedAtEventToken="stoppedAtEvent__token",eb.StoppedAtEventTotalAmountStreamedUntilTimestamp="stoppedAtEvent__totalAmountStreamedUntilTimestamp",eb.StoppedAtEventTotalReceiverFlowRate="stoppedAtEvent__totalReceiverFlowRate",eb.StoppedAtEventTotalSenderFlowRate="stoppedAtEvent__totalSenderFlowRate",eb.StoppedAtEventTransactionHash="stoppedAtEvent__transactionHash",eb.StoppedAtEventType="stoppedAtEvent__type",eb.StoppedAtEventUserData="stoppedAtEvent__userData",eb.StoppedAtTimestamp="stoppedAtTimestamp",eb.Stream="stream",eb.StreamCreatedAtBlockNumber="stream__createdAtBlockNumber",eb.StreamCreatedAtTimestamp="stream__createdAtTimestamp",eb.StreamCurrentFlowRate="stream__currentFlowRate",eb.StreamDeposit="stream__deposit",eb.StreamId="stream__id",eb.StreamStreamedUntilUpdatedAt="stream__streamedUntilUpdatedAt",eb.StreamUpdatedAtBlockNumber="stream__updatedAtBlockNumber",eb.StreamUpdatedAtTimestamp="stream__updatedAtTimestamp",eb.StreamUserData="stream__userData",eb.Token="token",eb.TokenCreatedAtBlockNumber="token__createdAtBlockNumber",eb.TokenCreatedAtTimestamp="token__createdAtTimestamp",eb.TokenDecimals="token__decimals",eb.TokenId="token__id",eb.TokenIsListed="token__isListed",eb.TokenIsNativeAssetSuperToken="token__isNativeAssetSuperToken",eb.TokenIsSuperToken="token__isSuperToken",eb.TokenName="token__name",eb.TokenSymbol="token__symbol",eb.TokenUnderlyingAddress="token__underlyingAddress",eb.TotalAmountStreamed="totalAmountStreamed",(ek=tj||(tj={})).Id="id",ek.MostRecentStream="mostRecentStream",ek.MostRecentStreamCreatedAtBlockNumber="mostRecentStream__createdAtBlockNumber",ek.MostRecentStreamCreatedAtTimestamp="mostRecentStream__createdAtTimestamp",ek.MostRecentStreamCurrentFlowRate="mostRecentStream__currentFlowRate",ek.MostRecentStreamDeposit="mostRecentStream__deposit",ek.MostRecentStreamId="mostRecentStream__id",ek.MostRecentStreamStreamedUntilUpdatedAt="mostRecentStream__streamedUntilUpdatedAt",ek.MostRecentStreamUpdatedAtBlockNumber="mostRecentStream__updatedAtBlockNumber",ek.MostRecentStreamUpdatedAtTimestamp="mostRecentStream__updatedAtTimestamp",ek.MostRecentStreamUserData="mostRecentStream__userData",ek.PeriodRevisionIndex="periodRevisionIndex",ek.RevisionIndex="revisionIndex",(ef=tz||(tz={})).CreatedAtBlockNumber="createdAtBlockNumber",ef.CreatedAtTimestamp="createdAtTimestamp",ef.CurrentFlowRate="currentFlowRate",ef.Deposit="deposit",ef.FlowUpdatedEvents="flowUpdatedEvents",ef.Id="id",ef.Receiver="receiver",ef.ReceiverCreatedAtBlockNumber="receiver__createdAtBlockNumber",ef.ReceiverCreatedAtTimestamp="receiver__createdAtTimestamp",ef.ReceiverId="receiver__id",ef.ReceiverIsSuperApp="receiver__isSuperApp",ef.ReceiverUpdatedAtBlockNumber="receiver__updatedAtBlockNumber",ef.ReceiverUpdatedAtTimestamp="receiver__updatedAtTimestamp",ef.Sender="sender",ef.SenderCreatedAtBlockNumber="sender__createdAtBlockNumber",ef.SenderCreatedAtTimestamp="sender__createdAtTimestamp",ef.SenderId="sender__id",ef.SenderIsSuperApp="sender__isSuperApp",ef.SenderUpdatedAtBlockNumber="sender__updatedAtBlockNumber",ef.SenderUpdatedAtTimestamp="sender__updatedAtTimestamp",ef.StreamPeriods="streamPeriods",ef.StreamedUntilUpdatedAt="streamedUntilUpdatedAt",ef.Token="token",ef.TokenCreatedAtBlockNumber="token__createdAtBlockNumber",ef.TokenCreatedAtTimestamp="token__createdAtTimestamp",ef.TokenDecimals="token__decimals",ef.TokenId="token__id",ef.TokenIsListed="token__isListed",ef.TokenIsNativeAssetSuperToken="token__isNativeAssetSuperToken",ef.TokenIsSuperToken="token__isSuperToken",ef.TokenName="token__name",ef.TokenSymbol="token__symbol",ef.TokenUnderlyingAddress="token__underlyingAddress",ef.UpdatedAtBlockNumber="updatedAtBlockNumber",ef.UpdatedAtTimestamp="updatedAtTimestamp",ef.UserData="userData",(eN=t0||(t0={})).Addresses="addresses",eN.BlockNumber="blockNumber",eN.GasPrice="gasPrice",eN.GasUsed="gasUsed",eN.Id="id",eN.IndexId="indexId",eN.LogIndex="logIndex",eN.Name="name",eN.Order="order",eN.Publisher="publisher",eN.Subscriber="subscriber",eN.Subscription="subscription",eN.SubscriptionApproved="subscription__approved",eN.SubscriptionCreatedAtBlockNumber="subscription__createdAtBlockNumber",eN.SubscriptionCreatedAtTimestamp="subscription__createdAtTimestamp",eN.SubscriptionId="subscription__id",eN.SubscriptionIndexValueUntilUpdatedAt="subscription__indexValueUntilUpdatedAt",eN.SubscriptionTotalAmountReceivedUntilUpdatedAt="subscription__totalAmountReceivedUntilUpdatedAt",eN.SubscriptionUnits="subscription__units",eN.SubscriptionUpdatedAtBlockNumber="subscription__updatedAtBlockNumber",eN.SubscriptionUpdatedAtTimestamp="subscription__updatedAtTimestamp",eN.Timestamp="timestamp",eN.Token="token",eN.TransactionHash="transactionHash",eN.UserData="userData",(eP=t1||(t1={})).Addresses="addresses",eP.Amount="amount",eP.BlockNumber="blockNumber",eP.GasPrice="gasPrice",eP.GasUsed="gasUsed",eP.Id="id",eP.IndexId="indexId",eP.LogIndex="logIndex",eP.Name="name",eP.Order="order",eP.Publisher="publisher",eP.Subscriber="subscriber",eP.Subscription="subscription",eP.SubscriptionApproved="subscription__approved",eP.SubscriptionCreatedAtBlockNumber="subscription__createdAtBlockNumber",eP.SubscriptionCreatedAtTimestamp="subscription__createdAtTimestamp",eP.SubscriptionId="subscription__id",eP.SubscriptionIndexValueUntilUpdatedAt="subscription__indexValueUntilUpdatedAt",eP.SubscriptionTotalAmountReceivedUntilUpdatedAt="subscription__totalAmountReceivedUntilUpdatedAt",eP.SubscriptionUnits="subscription__units",eP.SubscriptionUpdatedAtBlockNumber="subscription__updatedAtBlockNumber",eP.SubscriptionUpdatedAtTimestamp="subscription__updatedAtTimestamp",eP.Timestamp="timestamp",eP.Token="token",eP.TransactionHash="transactionHash",(eC=t2||(t2={})).Addresses="addresses",eC.BlockNumber="blockNumber",eC.GasPrice="gasPrice",eC.GasUsed="gasUsed",eC.Id="id",eC.IndexId="indexId",eC.LogIndex="logIndex",eC.Name="name",eC.Order="order",eC.Publisher="publisher",eC.Subscriber="subscriber",eC.Subscription="subscription",eC.SubscriptionApproved="subscription__approved",eC.SubscriptionCreatedAtBlockNumber="subscription__createdAtBlockNumber",eC.SubscriptionCreatedAtTimestamp="subscription__createdAtTimestamp",eC.SubscriptionId="subscription__id",eC.SubscriptionIndexValueUntilUpdatedAt="subscription__indexValueUntilUpdatedAt",eC.SubscriptionTotalAmountReceivedUntilUpdatedAt="subscription__totalAmountReceivedUntilUpdatedAt",eC.SubscriptionUnits="subscription__units",eC.SubscriptionUpdatedAtBlockNumber="subscription__updatedAtBlockNumber",eC.SubscriptionUpdatedAtTimestamp="subscription__updatedAtTimestamp",eC.Timestamp="timestamp",eC.Token="token",eC.TransactionHash="transactionHash",eC.UserData="userData",(eU=t4||(t4={})).Addresses="addresses",eU.BlockNumber="blockNumber",eU.GasPrice="gasPrice",eU.GasUsed="gasUsed",eU.Id="id",eU.IndexId="indexId",eU.LogIndex="logIndex",eU.Name="name",eU.OldUnits="oldUnits",eU.Order="order",eU.Publisher="publisher",eU.Subscriber="subscriber",eU.Subscription="subscription",eU.SubscriptionApproved="subscription__approved",eU.SubscriptionCreatedAtBlockNumber="subscription__createdAtBlockNumber",eU.SubscriptionCreatedAtTimestamp="subscription__createdAtTimestamp",eU.SubscriptionId="subscription__id",eU.SubscriptionIndexValueUntilUpdatedAt="subscription__indexValueUntilUpdatedAt",eU.SubscriptionTotalAmountReceivedUntilUpdatedAt="subscription__totalAmountReceivedUntilUpdatedAt",eU.SubscriptionUnits="subscription__units",eU.SubscriptionUpdatedAtBlockNumber="subscription__updatedAtBlockNumber",eU.SubscriptionUpdatedAtTimestamp="subscription__updatedAtTimestamp",eU.Timestamp="timestamp",eU.Token="token",eU.TransactionHash="transactionHash",eU.Units="units",eU.UserData="userData",(eg=t5||(t5={})).Addresses="addresses",eg.BlockNumber="blockNumber",eg.GasPrice="gasPrice",eg.GasUsed="gasUsed",eg.Id="id",eg.LogIndex="logIndex",eg.Name="name",eg.Order="order",eg.Timestamp="timestamp",eg.Token="token",eg.TransactionHash="transactionHash",(ev=t6||(t6={})).Addresses="addresses",ev.BlockNumber="blockNumber",ev.GasPrice="gasPrice",ev.GasUsed="gasUsed",ev.Id="id",ev.LogIndex="logIndex",ev.Name="name",ev.NewFactory="newFactory",ev.Order="order",ev.Timestamp="timestamp",ev.TransactionHash="transactionHash",(eR=t3||(t3={})).Addresses="addresses",eR.BlockNumber="blockNumber",eR.GasPrice="gasPrice",eR.GasUsed="gasUsed",eR.Id="id",eR.LogIndex="logIndex",eR.Name="name",eR.Order="order",eR.Timestamp="timestamp",eR.TokenLogic="tokenLogic",eR.TransactionHash="transactionHash",(eO=t8||(t8={})).Addresses="addresses",eO.BlockNumber="blockNumber",eO.Code="code",eO.GasPrice="gasPrice",eO.GasUsed="gasUsed",eO.Id="id",eO.LogIndex="logIndex",eO.Name="name",eO.Order="order",eO.Timestamp="timestamp",eO.Token="token",eO.TransactionHash="transactionHash",(ey=t7||(t7={})).Addresses="addresses",ey.BlockNumber="blockNumber",ey.GasPrice="gasPrice",ey.GasUsed="gasUsed",ey.GovernanceAddress="governanceAddress",ey.Host="host",ey.Id="id",ey.IsKeySet="isKeySet",ey.LogIndex="logIndex",ey.MinimumDeposit="minimumDeposit",ey.Name="name",ey.Order="order",ey.SuperToken="superToken",ey.Timestamp="timestamp",ey.TransactionHash="transactionHash",(ex=t9||(t9={})).Alphabetical="ALPHABETICAL",ex.MostPopular="MOST_POPULAR",(eh=ne||(ne={})).Account="account",eh.AccountCreatedAtBlockNumber="account__createdAtBlockNumber",eh.AccountCreatedAtTimestamp="account__createdAtTimestamp",eh.AccountId="account__id",eh.AccountIsSuperApp="account__isSuperApp",eh.AccountUpdatedAtBlockNumber="account__updatedAtBlockNumber",eh.AccountUpdatedAtTimestamp="account__updatedAtTimestamp",eh.Addresses="addresses",eh.Amount="amount",eh.BlockNumber="blockNumber",eh.GasPrice="gasPrice",eh.GasUsed="gasUsed",eh.Id="id",eh.LogIndex="logIndex",eh.Name="name",eh.Order="order",eh.Timestamp="timestamp",eh.Token="token",eh.TransactionHash="transactionHash",(eE=nt||(nt={})).CreatedAtBlockNumber="createdAtBlockNumber",eE.CreatedAtTimestamp="createdAtTimestamp",eE.Id="id",eE.IsDefault="isDefault",eE.LiquidationPeriod="liquidationPeriod",eE.MinimumDeposit="minimumDeposit",eE.PatricianPeriod="patricianPeriod",eE.RewardAddress="rewardAddress",eE.Token="token",eE.TokenCreatedAtBlockNumber="token__createdAtBlockNumber",eE.TokenCreatedAtTimestamp="token__createdAtTimestamp",eE.TokenDecimals="token__decimals",eE.TokenId="token__id",eE.TokenIsListed="token__isListed",eE.TokenIsNativeAssetSuperToken="token__isNativeAssetSuperToken",eE.TokenIsSuperToken="token__isSuperToken",eE.TokenName="token__name",eE.TokenSymbol="token__symbol",eE.TokenUnderlyingAddress="token__underlyingAddress",eE.UpdatedAtBlockNumber="updatedAtBlockNumber",eE.UpdatedAtTimestamp="updatedAtTimestamp",(eq=nn||(nn={})).BlockNumber="blockNumber",eq.Id="id",eq.LogIndex="logIndex",eq.Order="order",eq.Timestamp="timestamp",eq.Token="token",eq.TokenStatistic="tokenStatistic",eq.TokenStatisticId="tokenStatistic__id",eq.TokenStatisticTotalAmountDistributedUntilUpdatedAt="tokenStatistic__totalAmountDistributedUntilUpdatedAt",eq.TokenStatisticTotalAmountStreamedUntilUpdatedAt="tokenStatistic__totalAmountStreamedUntilUpdatedAt",eq.TokenStatisticTotalAmountTransferredUntilUpdatedAt="tokenStatistic__totalAmountTransferredUntilUpdatedAt",eq.TokenStatisticTotalApprovedSubscriptions="tokenStatistic__totalApprovedSubscriptions",eq.TokenStatisticTotalDeposit="tokenStatistic__totalDeposit",eq.TokenStatisticTotalNumberOfActiveIndexes="tokenStatistic__totalNumberOfActiveIndexes",eq.TokenStatisticTotalNumberOfActiveStreams="tokenStatistic__totalNumberOfActiveStreams",eq.TokenStatisticTotalNumberOfClosedStreams="tokenStatistic__totalNumberOfClosedStreams",eq.TokenStatisticTotalNumberOfIndexes="tokenStatistic__totalNumberOfIndexes",eq.TokenStatisticTotalOutflowRate="tokenStatistic__totalOutflowRate",eq.TokenStatisticTotalSubscriptionsWithUnits="tokenStatistic__totalSubscriptionsWithUnits",eq.TokenStatisticTotalSupply="tokenStatistic__totalSupply",eq.TokenStatisticUpdatedAtBlockNumber="tokenStatistic__updatedAtBlockNumber",eq.TokenStatisticUpdatedAtTimestamp="tokenStatistic__updatedAtTimestamp",eq.TokenCreatedAtBlockNumber="token__createdAtBlockNumber",eq.TokenCreatedAtTimestamp="token__createdAtTimestamp",eq.TokenDecimals="token__decimals",eq.TokenId="token__id",eq.TokenIsListed="token__isListed",eq.TokenIsNativeAssetSuperToken="token__isNativeAssetSuperToken",eq.TokenIsSuperToken="token__isSuperToken",eq.TokenName="token__name",eq.TokenSymbol="token__symbol",eq.TokenUnderlyingAddress="token__underlyingAddress",eq.TotalAmountDistributed="totalAmountDistributed",eq.TotalAmountStreamed="totalAmountStreamed",eq.TotalAmountTransferred="totalAmountTransferred",eq.TotalApprovedSubscriptions="totalApprovedSubscriptions",eq.TotalDeposit="totalDeposit",eq.TotalNumberOfActiveIndexes="totalNumberOfActiveIndexes",eq.TotalNumberOfActiveStreams="totalNumberOfActiveStreams",eq.TotalNumberOfClosedStreams="totalNumberOfClosedStreams",eq.TotalNumberOfIndexes="totalNumberOfIndexes",eq.TotalOutflowRate="totalOutflowRate",eq.TotalSubscriptionsWithUnits="totalSubscriptionsWithUnits",eq.TotalSupply="totalSupply",eq.TransactionHash="transactionHash",eq.TriggeredByEventName="triggeredByEventName",(eD=no||(no={})).Id="id",eD.Token="token",eD.TokenStatisticLogs="tokenStatisticLogs",eD.TokenCreatedAtBlockNumber="token__createdAtBlockNumber",eD.TokenCreatedAtTimestamp="token__createdAtTimestamp",eD.TokenDecimals="token__decimals",eD.TokenId="token__id",eD.TokenIsListed="token__isListed",eD.TokenIsNativeAssetSuperToken="token__isNativeAssetSuperToken",eD.TokenIsSuperToken="token__isSuperToken",eD.TokenName="token__name",eD.TokenSymbol="token__symbol",eD.TokenUnderlyingAddress="token__underlyingAddress",eD.TotalAmountDistributedUntilUpdatedAt="totalAmountDistributedUntilUpdatedAt",eD.TotalAmountStreamedUntilUpdatedAt="totalAmountStreamedUntilUpdatedAt",eD.TotalAmountTransferredUntilUpdatedAt="totalAmountTransferredUntilUpdatedAt",eD.TotalApprovedSubscriptions="totalApprovedSubscriptions",eD.TotalDeposit="totalDeposit",eD.TotalNumberOfActiveIndexes="totalNumberOfActiveIndexes",eD.TotalNumberOfActiveStreams="totalNumberOfActiveStreams",eD.TotalNumberOfClosedStreams="totalNumberOfClosedStreams",eD.TotalNumberOfIndexes="totalNumberOfIndexes",eD.TotalOutflowRate="totalOutflowRate",eD.TotalSubscriptionsWithUnits="totalSubscriptionsWithUnits",eD.TotalSupply="totalSupply",eD.UpdatedAtBlockNumber="updatedAtBlockNumber",eD.UpdatedAtTimestamp="updatedAtTimestamp",(eF=nr||(nr={})).Account="account",eF.AccountCreatedAtBlockNumber="account__createdAtBlockNumber",eF.AccountCreatedAtTimestamp="account__createdAtTimestamp",eF.AccountId="account__id",eF.AccountIsSuperApp="account__isSuperApp",eF.AccountUpdatedAtBlockNumber="account__updatedAtBlockNumber",eF.AccountUpdatedAtTimestamp="account__updatedAtTimestamp",eF.Addresses="addresses",eF.Amount="amount",eF.BlockNumber="blockNumber",eF.GasPrice="gasPrice",eF.GasUsed="gasUsed",eF.Id="id",eF.LogIndex="logIndex",eF.Name="name",eF.Order="order",eF.Timestamp="timestamp",eF.Token="token",eF.TransactionHash="transactionHash",(eM=na||(na={})).CreatedAtBlockNumber="createdAtBlockNumber",eM.CreatedAtTimestamp="createdAtTimestamp",eM.Decimals="decimals",eM.GovernanceConfig="governanceConfig",eM.GovernanceConfigCreatedAtBlockNumber="governanceConfig__createdAtBlockNumber",eM.GovernanceConfigCreatedAtTimestamp="governanceConfig__createdAtTimestamp",eM.GovernanceConfigId="governanceConfig__id",eM.GovernanceConfigIsDefault="governanceConfig__isDefault",eM.GovernanceConfigLiquidationPeriod="governanceConfig__liquidationPeriod",eM.GovernanceConfigMinimumDeposit="governanceConfig__minimumDeposit",eM.GovernanceConfigPatricianPeriod="governanceConfig__patricianPeriod",eM.GovernanceConfigRewardAddress="governanceConfig__rewardAddress",eM.GovernanceConfigUpdatedAtBlockNumber="governanceConfig__updatedAtBlockNumber",eM.GovernanceConfigUpdatedAtTimestamp="governanceConfig__updatedAtTimestamp",eM.Id="id",eM.IsListed="isListed",eM.IsNativeAssetSuperToken="isNativeAssetSuperToken",eM.IsSuperToken="isSuperToken",eM.Name="name",eM.Symbol="symbol",eM.UnderlyingAddress="underlyingAddress",eM.UnderlyingToken="underlyingToken",eM.UnderlyingTokenCreatedAtBlockNumber="underlyingToken__createdAtBlockNumber",eM.UnderlyingTokenCreatedAtTimestamp="underlyingToken__createdAtTimestamp",eM.UnderlyingTokenDecimals="underlyingToken__decimals",eM.UnderlyingTokenId="underlyingToken__id",eM.UnderlyingTokenIsListed="underlyingToken__isListed",eM.UnderlyingTokenIsNativeAssetSuperToken="underlyingToken__isNativeAssetSuperToken",eM.UnderlyingTokenIsSuperToken="underlyingToken__isSuperToken",eM.UnderlyingTokenName="underlyingToken__name",eM.UnderlyingTokenSymbol="underlyingToken__symbol",eM.UnderlyingTokenUnderlyingAddress="underlyingToken__underlyingAddress",(ni||(ni={})).Reverted="REVERTED",(eB=ns||(ns={})).Addresses="addresses",eB.BlockNumber="blockNumber",eB.From="from",eB.FromCreatedAtBlockNumber="from__createdAtBlockNumber",eB.FromCreatedAtTimestamp="from__createdAtTimestamp",eB.FromId="from__id",eB.FromIsSuperApp="from__isSuperApp",eB.FromUpdatedAtBlockNumber="from__updatedAtBlockNumber",eB.FromUpdatedAtTimestamp="from__updatedAtTimestamp",eB.GasPrice="gasPrice",eB.GasUsed="gasUsed",eB.Id="id",eB.LogIndex="logIndex",eB.Name="name",eB.Order="order",eB.Timestamp="timestamp",eB.To="to",eB.ToCreatedAtBlockNumber="to__createdAtBlockNumber",eB.ToCreatedAtTimestamp="to__createdAtTimestamp",eB.ToId="to__id",eB.ToIsSuperApp="to__isSuperApp",eB.ToUpdatedAtBlockNumber="to__updatedAtBlockNumber",eB.ToUpdatedAtTimestamp="to__updatedAtTimestamp",eB.Token="token",eB.TransactionHash="transactionHash",eB.Value="value",(ew=nd||(nd={})).Addresses="addresses",ew.BlockNumber="blockNumber",ew.Enabled="enabled",ew.Forwarder="forwarder",ew.GasPrice="gasPrice",ew.GasUsed="gasUsed",ew.GovernanceAddress="governanceAddress",ew.Host="host",ew.Id="id",ew.IsKeySet="isKeySet",ew.LogIndex="logIndex",ew.Name="name",ew.Order="order",ew.SuperToken="superToken",ew.Timestamp="timestamp",ew.TransactionHash="transactionHash",(eL=nl||(nl={})).Orb="ORB",eL.Phone="PHONE",(e$=nu||(nu={})).Allow="allow",e$.Deny="deny";let ow=(0,nm.Ps)(np()),oL=(0,nm.Ps)(nA()),o$=(0,nm.Ps)(n_(),oL),oG=(0,nm.Ps)(nT()),oH=(0,nm.Ps)(nI()),oZ=(0,nm.Ps)(nS(),oH),oV=(0,nm.Ps)(nb(),ow,o$,oG,oZ),oW=(0,nm.Ps)(nk(),ow,o$,oG,oZ,oV),oY=(0,nm.Ps)(nf(),ow,o$,oG,oZ,oV,oW),oK=(0,nm.Ps)(nN());(0,nm.Ps)(nP()),(0,nm.Ps)(nC()),(0,nm.Ps)(nU()),(0,nm.Ps)(ng()),(0,nm.Ps)(nv()),(0,nm.Ps)(nR()),(0,nm.Ps)(nO()),(0,nm.Ps)(ny()),(0,nm.Ps)(nx(),oK),(0,nm.Ps)(nh()),(0,nm.Ps)(nE()),(0,nm.Ps)(nq()),(0,nm.Ps)(nD()),(0,nm.Ps)(nF()),(0,nm.Ps)(nM()),(0,nm.Ps)(nB()),(0,nm.Ps)(nw(),oK),(0,nm.Ps)(nL()),(0,nm.Ps)(n$()),(0,nm.Ps)(nG(),oK),(0,nm.Ps)(nH(),oK),(0,nm.Ps)(nZ()),(0,nm.Ps)(nV()),(0,nm.Ps)(nW()),(0,nm.Ps)(nY()),(0,nm.Ps)(nK(),oK),(0,nm.Ps)(nQ()),(0,nm.Ps)(nX(),oK),(0,nm.Ps)(nJ()),(0,nm.Ps)(nj()),(0,nm.Ps)(nz()),(0,nm.Ps)(n0()),(0,nm.Ps)(n1()),(0,nm.Ps)(n2()),(0,nm.Ps)(n4()),(0,nm.Ps)(n5()),(0,nm.Ps)(n6()),(0,nm.Ps)(n3()),(0,nm.Ps)(n8()),(0,nm.Ps)(n7()),(0,nm.Ps)(n9()),(0,nm.Ps)(oe()),(0,nm.Ps)(ot(),o$),(0,nm.Ps)(on(),ow),(0,nm.Ps)(oo(),oY),(0,nm.Ps)(or()),(0,nm.Ps)(oa(),oV,oY,oW),(0,nm.Ps)(oi(),oV,oY,oW),(0,nm.Ps)(os(),ow),(0,nm.Ps)(od(),ow),(0,nm.Ps)(ol(),oV,oY,oW),(0,nm.Ps)(ou()),(0,nm.Ps)(oc()),(0,nm.Ps)(om()),(0,nm.Ps)(op(),ow),(0,nm.Ps)(oA(),ow),(0,nm.Ps)(o_()),(0,nm.Ps)(oT()),(0,nm.Ps)(oI()),(0,nm.Ps)(oS()),(0,nm.Ps)(ob(),ow,o$),(0,nm.Ps)(ok(),ow),(0,nm.Ps)(of(),oV,oY,oW),(0,nm.Ps)(oN()),(0,nm.Ps)(oP(),ow),(0,nm.Ps)(oC(),ow),(0,nm.Ps)(oU(),oV,oY,oW),(0,nm.Ps)(og()),(0,nm.Ps)(ov(),ow),(0,nm.Ps)(oR()),(0,nm.Ps)(oO(),ow),(0,nm.Ps)(oy(),oV,oY),(0,nm.Ps)(ox(),ow),(0,nm.Ps)(oh());let oQ=(0,nm.Ps)(oE());(0,nm.Ps)(oq(),oV,oY,ow),(0,nm.Ps)(oD()),(0,nm.Ps)(oF(),ow),(0,nm.Ps)(oM()),(0,nm.Ps)(oB())}}]);