"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[7025],{5397:function(e,t,i){var r,s,n,a,o=Object.create,l=Object.defineProperty,u=Object.getOwnPropertyDescriptor,c=Object.getOwnPropertyNames,d=Object.getPrototypeOf,p=Object.prototype.hasOwnProperty,h=(e,t)=>{for(var i in t)l(e,i,{get:t[i],enumerable:!0})},y=(e,t,i,r)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let s of c(t))p.call(e,s)||s===i||l(e,s,{get:()=>t[s],enumerable:!(r=u(t,s))||r.enumerable});return e},g=(e,t,i)=>(i=null!=e?o(d(e)):{},y(!t&&e&&e.__esModule?i:l(i,"default",{value:e,enumerable:!0}),e)),f=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?u(t,i):t,a=e.length-1;a>=0;a--)(s=e[a])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&l(t,i,n),n},m={};h(m,{ApiError:()=>se,AptosAccount:()=>tw,AptosClient:()=>r7,AptosToken:()=>s_,BCS:()=>V,CoinClient:()=>sv,FailedTransactionError:()=>si,FaucetClient:()=>sT,HexString:()=>P,IndexerClient:()=>tH,Network:()=>O,Provider:()=>ss,TokenClient:()=>sf,TokenTypes:()=>sh,TransactionBuilder:()=>r8,TransactionBuilderABI:()=>r3,TransactionBuilderEd25519:()=>r5,TransactionBuilderMultiEd25519:()=>r6,TransactionBuilderRemoteABI:()=>r4,TxnBuilderTypes:()=>W,TypeTagParser:()=>eF,Types:()=>tD,WaitForTransactionError:()=>st,derivePath:()=>x,deserializePropertyMap:()=>sd,deserializeValueBasedOnTypeTag:()=>sp,getAddressFromAccountOrAddress:()=>tS,getPropertyValueRaw:()=>su}),e.exports=y(l({},"__esModule",{value:!0}),m);var _=g(i(50780)),v=g(i(7286)),T=i(92185),b=i(83941);g(i(50780));var w=i(82583),S=i(61111),A=i(92185),E=/^m(\/[0-9]+')+$/,R=e=>e.replace("'",""),q=e=>{let t=w.hmac.create(S.sha512,"ed25519 seed"),i=t.update((0,A.hexToBytes)(e)).digest(),r=i.slice(0,32),s=i.slice(32);return{key:r,chainCode:s}},U=({key:e,chainCode:t},i)=>{let r=new ArrayBuffer(4);new DataView(r).setUint32(0,i);let s=new Uint8Array(r),n=new Uint8Array([0]),a=new Uint8Array([...n,...e,...s]),o=w.hmac.create(S.sha512,t).update(a).digest(),l=o.slice(0,32),u=o.slice(32);return{key:l,chainCode:u}},z=e=>!!E.test(e)&&!e.split("/").slice(1).map(R).some(Number.isNaN),x=(e,t,i=2147483648)=>{if(!z(e))throw Error("Invalid derivation path");let{key:r,chainCode:s}=q(t),n=e.split("/").slice(1).map(R).map(e=>parseInt(e,10));return n.reduce((e,t)=>U(e,t+i),{key:r,chainCode:s})};async function B(e){return new Promise(t=>{setTimeout(t,e)})}var k="0x1::aptos_coin::AptosCoin";function C(e){let t,i,r;return"object"==typeof e?(t=e.hashFunction,i=e.ttlMs,r=e.tags):t=e,(e,s,n)=>{if(null!=n.value)n.value=$(n.value,t,i,r);else if(null!=n.get)n.get=$(n.get,t,i,r);else throw Error("Only put a Memoize() decorator on a method or get accessor.")}}var I=new Map;function $(e,t,i=0,r){let s=Symbol("__memoized_map__");return function(...n){let a;this.hasOwnProperty(s)||Object.defineProperty(this,s,{configurable:!1,enumerable:!1,writable:!1,value:new Map});let o=this[s];if(Array.isArray(r))for(let l of r)I.has(l)?I.get(l).push(o):I.set(l,[o]);if(t||n.length>0||i>0){let u;u=!0===t?n.map(e=>e.toString()).join("!"):t?t.apply(this,n):n[0];let c=`${u}__timestamp`,d=!1;if(i>0){if(o.has(c)){let p=o.get(c);d=Date.now()-p>i}else d=!0}o.has(u)&&!d?a=o.get(u):(a=e.apply(this,n),o.set(u,a),i>0&&o.set(c,Date.now()))}else o.has(this)?a=o.get(this):(a=e.apply(this,n),o.set(this,a));return a}}var M=i(92185),P=class{static fromBuffer(e){return P.fromUint8Array(e)}static fromUint8Array(e){return new P((0,M.bytesToHex)(e))}static ensure(e){return"string"==typeof e?new P(e):e}constructor(e){e.startsWith("0x")?this.hexString=e:this.hexString=`0x${e}`}hex(){return this.hexString}noPrefix(){return this.hexString.slice(2)}toString(){return this.hex()}toShortString(){let e=this.hexString.replace(/^0x0*/,"");return`0x${e}`}toUint8Array(){return Uint8Array.from((0,M.hexToBytes)(this.noPrefix()))}};async function N(e,t,i,r){var s;let n;let a=[];for(;;){let o=await e(P.ensure(t).hex(),null==(s=null==r?void 0:r.ledgerVersion)?void 0:s.toString(),n,i);if(n=o.__headers["x-aptos-cursor"],delete o.__headers,a.push(...o),null==n)break}return a}var H={mainnet:"https://indexer.mainnet.aptoslabs.com/v1/graphql",testnet:"https://indexer-testnet.staging.gcp.aptosdev.com/v1/graphql",devnet:"https://indexer-devnet.staging.gcp.aptosdev.com/v1/graphql"},D={mainnet:"https://fullnode.mainnet.aptoslabs.com/v1",testnet:"https://fullnode.testnet.aptoslabs.com/v1",devnet:"https://fullnode.devnet.aptoslabs.com/v1"},O=((r=O||{}).MAINNET="mainnet",r.TESTNET="testnet",r.DEVNET="devnet",r),W={};h(W,{AccountAddress:()=>ep,AccountAuthenticator:()=>eA,AccountAuthenticatorEd25519:()=>eE,AccountAuthenticatorMultiEd25519:()=>eR,ArgumentABI:()=>th,AuthenticationKey:()=>tv,ChainId:()=>e7,ChangeSet:()=>e0,Ed25519PublicKey:()=>ey,Ed25519Signature:()=>ef,EntryFunction:()=>eJ,EntryFunctionABI:()=>tf,Identifier:()=>eq,Module:()=>eQ,ModuleId:()=>eY,MultiAgentRawTransaction:()=>e5,MultiEd25519PublicKey:()=>em,MultiEd25519Signature:()=>ev,MultiSig:()=>eX,MultiSigTransactionPayload:()=>eZ,RawTransaction:()=>ej,RawTransactionWithData:()=>e8,RotationProofChallenge:()=>tT,Script:()=>eK,ScriptABI:()=>ty,SignedTransaction:()=>e2,StructTag:()=>eD,Transaction:()=>tc,TransactionArgument:()=>te,TransactionArgumentAddress:()=>to,TransactionArgumentBool:()=>tu,TransactionArgumentU128:()=>tn,TransactionArgumentU16:()=>ti,TransactionArgumentU256:()=>ta,TransactionArgumentU32:()=>tr,TransactionArgumentU64:()=>ts,TransactionArgumentU8:()=>tt,TransactionArgumentU8Vector:()=>tl,TransactionAuthenticator:()=>eT,TransactionAuthenticatorEd25519:()=>eb,TransactionAuthenticatorMultiAgent:()=>eS,TransactionAuthenticatorMultiEd25519:()=>ew,TransactionPayload:()=>e6,TransactionPayloadEntryFunction:()=>e4,TransactionPayloadMultisig:()=>e9,TransactionPayloadScript:()=>e3,TransactionScriptABI:()=>tg,TypeArgumentABI:()=>tp,TypeTag:()=>eU,TypeTagAddress:()=>eM,TypeTagBool:()=>ez,TypeTagParser:()=>eF,TypeTagParserError:()=>eG,TypeTagSigner:()=>eP,TypeTagStruct:()=>eH,TypeTagU128:()=>eI,TypeTagU16:()=>eB,TypeTagU256:()=>e$,TypeTagU32:()=>ek,TypeTagU64:()=>eC,TypeTagU8:()=>ex,TypeTagVector:()=>eN,UserTransaction:()=>td,WriteSet:()=>e1,stringStructTag:()=>eO});var V={};h(V,{Deserializer:()=>Z,Serializer:()=>K,bcsSerializeBool:()=>ea,bcsSerializeBytes:()=>el,bcsSerializeFixedBytes:()=>eu,bcsSerializeStr:()=>eo,bcsSerializeU128:()=>en,bcsSerializeU16:()=>er,bcsSerializeU32:()=>es,bcsSerializeU8:()=>ei,bcsSerializeUint64:()=>et,bcsToBytes:()=>ee,deserializeVector:()=>Y,serializeVector:()=>X,serializeVectorWithFunc:()=>Q});var L=4294967296-1,F=BigInt(18446744073709552e3)-BigInt(1),G=BigInt(3402823669209385e23)-BigInt(1),j=BigInt(1157920892373162e62)-BigInt(1),K=class{constructor(){this.buffer=new ArrayBuffer(64),this.offset=0}ensureBufferWillHandleSize(e){for(;this.buffer.byteLength<this.offset+e;){let t=new ArrayBuffer(2*this.buffer.byteLength);new Uint8Array(t).set(new Uint8Array(this.buffer)),this.buffer=t}}serialize(e){this.ensureBufferWillHandleSize(e.length),new Uint8Array(this.buffer,this.offset).set(e),this.offset+=e.length}serializeWithFunction(e,t,i){this.ensureBufferWillHandleSize(t);let r=new DataView(this.buffer,this.offset);e.apply(r,[0,i,!0]),this.offset+=t}serializeStr(e){let t=new TextEncoder;this.serializeBytes(t.encode(e))}serializeBytes(e){this.serializeU32AsUleb128(e.length),this.serialize(e)}serializeFixedBytes(e){this.serialize(e)}serializeBool(e){if("boolean"!=typeof e)throw Error("Value needs to be a boolean");this.serialize(new Uint8Array([e?1:0]))}serializeU8(e){this.serialize(new Uint8Array([e]))}serializeU16(e){this.serializeWithFunction(DataView.prototype.setUint16,2,e)}serializeU32(e){this.serializeWithFunction(DataView.prototype.setUint32,4,e)}serializeU64(e){let t=BigInt(e.toString())&BigInt(L),i=BigInt(e.toString())>>BigInt(32);this.serializeU32(Number(t)),this.serializeU32(Number(i))}serializeU128(e){let t=BigInt(e.toString())&F,i=BigInt(e.toString())>>BigInt(64);this.serializeU64(t),this.serializeU64(i)}serializeU256(e){let t=BigInt(e.toString())&G,i=BigInt(e.toString())>>BigInt(128);this.serializeU128(t),this.serializeU128(i)}serializeU32AsUleb128(e){let t=e,i=[];for(;t>>>7!=0;)i.push(127&t|128),t>>>=7;i.push(t),this.serialize(new Uint8Array(i))}getBytes(){return new Uint8Array(this.buffer).slice(0,this.offset)}};function J(e,t,i){return(r,s,n)=>{let a=n.value;return n.value=function(r){let s=BigInt(r.toString());if(s>BigInt(t.toString())||s<BigInt(e.toString()))throw Error(i||"Value is out of range");a.apply(this,[r])},n}}f([J(0,255)],K.prototype,"serializeU8",1),f([J(0,65535)],K.prototype,"serializeU16",1),f([J(0,L)],K.prototype,"serializeU32",1),f([J(BigInt(0),F)],K.prototype,"serializeU64",1),f([J(BigInt(0),G)],K.prototype,"serializeU128",1),f([J(BigInt(0),j)],K.prototype,"serializeU256",1),f([J(0,L)],K.prototype,"serializeU32AsUleb128",1);var Z=class{constructor(e){this.buffer=new ArrayBuffer(e.length),new Uint8Array(this.buffer).set(e,0),this.offset=0}read(e){if(this.offset+e>this.buffer.byteLength)throw Error("Reached to the end of buffer");let t=this.buffer.slice(this.offset,this.offset+e);return this.offset+=e,t}deserializeStr(){let e=this.deserializeBytes(),t=new TextDecoder;return t.decode(e)}deserializeBytes(){let e=this.deserializeUleb128AsU32();return new Uint8Array(this.read(e))}deserializeFixedBytes(e){return new Uint8Array(this.read(e))}deserializeBool(){let e=new Uint8Array(this.read(1))[0];if(1!==e&&0!==e)throw Error("Invalid boolean value");return 1===e}deserializeU8(){return new DataView(this.read(1)).getUint8(0)}deserializeU16(){return new DataView(this.read(2)).getUint16(0,!0)}deserializeU32(){return new DataView(this.read(4)).getUint32(0,!0)}deserializeU64(){let e=this.deserializeU32(),t=this.deserializeU32();return BigInt(BigInt(t)<<BigInt(32)|BigInt(e))}deserializeU128(){let e=this.deserializeU64(),t=this.deserializeU64();return BigInt(t<<BigInt(64)|e)}deserializeU256(){let e=this.deserializeU128(),t=this.deserializeU128();return BigInt(t<<BigInt(128)|e)}deserializeUleb128AsU32(){let e=BigInt(0),t=0;for(;e<L;){let i=this.deserializeU8();if(e|=BigInt(127&i)<<BigInt(t),(128&i)==0)break;t+=7}if(e>L)throw Error("Overflow while parsing uleb128-encoded uint32 value");return Number(e)}};function X(e,t){t.serializeU32AsUleb128(e.length),e.forEach(e=>{e.serialize(t)})}function Q(e,t){let i=new K;i.serializeU32AsUleb128(e.length);let r=i[t];return e.forEach(e=>{r.call(i,e)}),i.getBytes()}function Y(e,t){let i=e.deserializeUleb128AsU32(),r=[];for(let s=0;s<i;s+=1)r.push(t.deserialize(e));return r}function ee(e){let t=new K;return e.serialize(t),t.getBytes()}function et(e){let t=new K;return t.serializeU64(e),t.getBytes()}function ei(e){let t=new K;return t.serializeU8(e),t.getBytes()}function er(e){let t=new K;return t.serializeU16(e),t.getBytes()}function es(e){let t=new K;return t.serializeU32(e),t.getBytes()}function en(e){let t=new K;return t.serializeU128(e),t.getBytes()}function ea(e){let t=new K;return t.serializeBool(e),t.getBytes()}function eo(e){let t=new K;return t.serializeStr(e),t.getBytes()}function el(e){let t=new K;return t.serializeBytes(e),t.getBytes()}function eu(e){let t=new K;return t.serializeFixedBytes(e),t.getBytes()}var ec=i(83941),ed=class{constructor(e){if(e.length!==ed.LENGTH)throw Error("Expected address of length 32");this.address=e}static fromHex(e){let t=P.ensure(e);t.noPrefix().length%2!=0&&(t=new P(`0${t.noPrefix()}`));let i=t.toUint8Array();if(i.length>ed.LENGTH)throw Error("Hex string is too long. Address's length is 32 bytes.");if(i.length===ed.LENGTH)return new ed(i);let r=new Uint8Array(ed.LENGTH);return r.set(i,ed.LENGTH-i.length),new ed(r)}static isValid(e){if(""===e)return!1;let t=P.ensure(e);t.noPrefix().length%2!=0&&(t=new P(`0${t.noPrefix()}`));let i=t.toUint8Array();return i.length<=ed.LENGTH}toHexString(){return P.fromUint8Array(this.address).hex()}serialize(e){e.serializeFixedBytes(this.address)}static deserialize(e){return new ed(e.deserializeFixedBytes(ed.LENGTH))}},ep=ed;ep.LENGTH=32,ep.CORE_CODE_ADDRESS=ed.fromHex("0x1");var eh=class{constructor(e){if(e.length!==eh.LENGTH)throw Error(`Ed25519PublicKey length should be ${eh.LENGTH}`);this.value=e}toBytes(){return this.value}serialize(e){e.serializeBytes(this.value)}static deserialize(e){let t=e.deserializeBytes();return new eh(t)}},ey=eh;ey.LENGTH=32;var eg=class{constructor(e){if(this.value=e,e.length!==eg.LENGTH)throw Error(`Ed25519Signature length should be ${eg.LENGTH}`)}serialize(e){e.serializeBytes(this.value)}static deserialize(e){let t=e.deserializeBytes();return new eg(t)}},ef=eg;ef.LENGTH=64;var em=class{constructor(e,t){if(this.public_keys=e,this.threshold=t,t>32)throw Error('"threshold" cannot be larger than 32')}toBytes(){let e=new Uint8Array(this.public_keys.length*ey.LENGTH+1);return this.public_keys.forEach((t,i)=>{e.set(t.value,i*ey.LENGTH)}),e[this.public_keys.length*ey.LENGTH]=this.threshold,e}serialize(e){e.serializeBytes(this.toBytes())}static deserialize(e){let t=e.deserializeBytes(),i=t[t.length-1],r=[];for(let s=0;s<t.length-1;s+=ey.LENGTH){let n=s;r.push(new ey(t.subarray(n,n+ey.LENGTH)))}return new em(r,i)}},e_=class{constructor(e,t){if(this.signatures=e,this.bitmap=t,t.length!==e_.BITMAP_LEN)throw Error(`"bitmap" length should be ${e_.BITMAP_LEN}`)}toBytes(){let e=new Uint8Array(this.signatures.length*ef.LENGTH+e_.BITMAP_LEN);return this.signatures.forEach((t,i)=>{e.set(t.value,i*ef.LENGTH)}),e.set(this.bitmap,this.signatures.length*ef.LENGTH),e}static createBitmap(e){let t=new Uint8Array([0,0,0,0]),i=new Set;return e.forEach(e=>{if(e>=32)throw Error(`Invalid bit value ${e}.`);if(i.has(e))throw Error("Duplicated bits detected.");i.add(e);let r=Math.floor(e/8),s=t[r];s|=128>>e%8,t[r]=s}),t}serialize(e){e.serializeBytes(this.toBytes())}static deserialize(e){let t=e.deserializeBytes(),i=t.subarray(t.length-4),r=[];for(let s=0;s<t.length-i.length;s+=ef.LENGTH){let n=s;r.push(new ef(t.subarray(n,n+ef.LENGTH)))}return new e_(r,i)}},ev=e_;ev.BITMAP_LEN=4;var eT=class{static deserialize(e){let t=e.deserializeUleb128AsU32();switch(t){case 0:return eb.load(e);case 1:return ew.load(e);case 2:return eS.load(e);default:throw Error(`Unknown variant index for TransactionAuthenticator: ${t}`)}}},eb=class extends eT{constructor(e,t){super(),this.public_key=e,this.signature=t}serialize(e){e.serializeU32AsUleb128(0),this.public_key.serialize(e),this.signature.serialize(e)}static load(e){let t=ey.deserialize(e),i=ef.deserialize(e);return new eb(t,i)}},ew=class extends eT{constructor(e,t){super(),this.public_key=e,this.signature=t}serialize(e){e.serializeU32AsUleb128(1),this.public_key.serialize(e),this.signature.serialize(e)}static load(e){let t=em.deserialize(e),i=ev.deserialize(e);return new ew(t,i)}},eS=class extends eT{constructor(e,t,i){super(),this.sender=e,this.secondary_signer_addresses=t,this.secondary_signers=i}serialize(e){e.serializeU32AsUleb128(2),this.sender.serialize(e),X(this.secondary_signer_addresses,e),X(this.secondary_signers,e)}static load(e){let t=eA.deserialize(e),i=Y(e,ep),r=Y(e,eA);return new eS(t,i,r)}},eA=class{static deserialize(e){let t=e.deserializeUleb128AsU32();switch(t){case 0:return eE.load(e);case 1:return eR.load(e);default:throw Error(`Unknown variant index for AccountAuthenticator: ${t}`)}}},eE=class extends eA{constructor(e,t){super(),this.public_key=e,this.signature=t}serialize(e){e.serializeU32AsUleb128(0),this.public_key.serialize(e),this.signature.serialize(e)}static load(e){let t=ey.deserialize(e),i=ef.deserialize(e);return new eE(t,i)}},eR=class extends eA{constructor(e,t){super(),this.public_key=e,this.signature=t}serialize(e){e.serializeU32AsUleb128(1),this.public_key.serialize(e),this.signature.serialize(e)}static load(e){let t=em.deserialize(e),i=ev.deserialize(e);return new eR(t,i)}},eq=class{constructor(e){this.value=e}serialize(e){e.serializeStr(this.value)}static deserialize(e){let t=e.deserializeStr();return new eq(t)}},eU=class{static deserialize(e){let t=e.deserializeUleb128AsU32();switch(t){case 0:return ez.load(e);case 1:return ex.load(e);case 2:return eC.load(e);case 3:return eI.load(e);case 4:return eM.load(e);case 5:return eP.load(e);case 6:return eN.load(e);case 7:return eH.load(e);case 8:return eB.load(e);case 9:return ek.load(e);case 10:return e$.load(e);default:throw Error(`Unknown variant index for TypeTag: ${t}`)}}},ez=class extends eU{serialize(e){e.serializeU32AsUleb128(0)}static load(e){return new ez}},ex=class extends eU{serialize(e){e.serializeU32AsUleb128(1)}static load(e){return new ex}},eB=class extends eU{serialize(e){e.serializeU32AsUleb128(1)}static load(e){return new eB}},ek=class extends eU{serialize(e){e.serializeU32AsUleb128(1)}static load(e){return new ek}},eC=class extends eU{serialize(e){e.serializeU32AsUleb128(2)}static load(e){return new eC}},eI=class extends eU{serialize(e){e.serializeU32AsUleb128(3)}static load(e){return new eI}},e$=class extends eU{serialize(e){e.serializeU32AsUleb128(1)}static load(e){return new e$}},eM=class extends eU{serialize(e){e.serializeU32AsUleb128(4)}static load(e){return new eM}},eP=class extends eU{serialize(e){e.serializeU32AsUleb128(5)}static load(e){return new eP}},eN=class extends eU{constructor(e){super(),this.value=e}serialize(e){e.serializeU32AsUleb128(6),this.value.serialize(e)}static load(e){let t=eU.deserialize(e);return new eN(t)}},eH=class extends eU{constructor(e){super(),this.value=e}serialize(e){e.serializeU32AsUleb128(7),this.value.serialize(e)}static load(e){let t=eD.deserialize(e);return new eH(t)}isStringTypeTag(){return"string"===this.value.module_name.value&&"String"===this.value.name.value&&this.value.address.toHexString()===ep.fromHex("0x1").toHexString()}},eD=class{constructor(e,t,i,r){this.address=e,this.module_name=t,this.name=i,this.type_args=r}static fromString(e){let t=new eF(e).parseTypeTag();return new eD(t.value.address,t.value.module_name,t.value.name,t.value.type_args)}serialize(e){this.address.serialize(e),this.module_name.serialize(e),this.name.serialize(e),X(this.type_args,e)}static deserialize(e){let t=ep.deserialize(e),i=eq.deserialize(e),r=eq.deserialize(e),s=Y(e,eU);return new eD(t,i,r,s)}},eO=new eD(ep.fromHex("0x1"),new eq("string"),new eq("String"),[]);function eW(e){throw new eG(e)}function eV(e){return!!e.match(/\s/)}function eL(e){return!!e.match(/[_A-Za-z0-9]/g)}var eF=class{constructor(e,t){this.typeTags=[],this.tokens=function(e){let t=0,i=[];for(;t<e.length;){let[r,s]=function(e,t){let i=e[t];if(":"===i){if("::"===e.slice(t,t+2))return[["COLON","::"],2];eW("Unrecognized token.")}else if("<"===i)return[["LT","<"],1];else if(">"===i)return[["GT",">"],1];else if(","===i)return[["COMMA",","],1];else if(eV(i)){let r="";for(let s=t;s<e.length;s+=1){let n=e[s];if(eV(n))r=`${r}${n}`;else break}return[["SPACE",r],r.length]}else if(eL(i)){let a="";for(let o=t;o<e.length;o+=1){let l=e[o];if(eL(l))a=`${a}${l}`;else break}return a.match(/T\d+/g)?[["GENERIC",a],a.length]:[["IDENT",a],a.length]}throw Error("Unrecognized token.")}(e,t);"SPACE"!==r[0]&&i.push(r),t+=s}return i}(e),this.typeTags=t||[]}consume(e){let t=this.tokens.shift();t&&t[1]===e||eW("Invalid type tag.")}parseCommaList(e,t){let i=[];for(this.tokens.length<=0&&eW("Invalid type tag.");this.tokens[0][1]!==e&&(i.push(this.parseTypeTag()),!(this.tokens.length>0)||this.tokens[0][1]!==e)&&(this.consume(","),!(this.tokens.length>0)||this.tokens[0][1]!==e||!t);)this.tokens.length<=0&&eW("Invalid type tag.");return i}parseTypeTag(){0===this.tokens.length&&eW("Invalid type tag.");let[e,t]=this.tokens.shift();if("u8"===t)return new ex;if("u16"===t)return new eB;if("u32"===t)return new ek;if("u64"===t)return new eC;if("u128"===t)return new eI;if("u256"===t)return new e$;if("bool"===t)return new ez;if("address"===t)return new eM;if("vector"===t){this.consume("<");let i=this.parseTypeTag();return this.consume(">"),new eN(i)}if("string"===t)return new eD(ep.fromHex("0x1"),new eq("string"),new eq("String"),[]);if("IDENT"===e&&(t.startsWith("0x")||t.startsWith("0X"))){this.consume("::");let[r,s]=this.tokens.shift();"IDENT"!==r&&eW("Invalid type tag."),this.consume("::");let[n,a]=this.tokens.shift();if("IDENT"!==n&&eW("Invalid type tag."),"object"===s&&"Object"===a)return this.tokens.splice(0,3),new eM;let o=[];this.tokens.length>0&&"<"===this.tokens[0][1]&&(this.consume("<"),o=this.parseCommaList(">",!0),this.consume(">"));let l=new eD(ep.fromHex(t),new eq(s),new eq(a),o);return new eH(l)}if("GENERIC"===e){0===this.typeTags.length&&eW("Can't convert generic type since no typeTags were specified.");let u=parseInt(t.substring(1),10);return new eF(this.typeTags[u]).parseTypeTag()}throw Error("Invalid type tag.")}},eG=class extends Error{constructor(e){super(e),this.name="TypeTagParserError"}},ej=class{constructor(e,t,i,r,s,n,a){this.sender=e,this.sequence_number=t,this.payload=i,this.max_gas_amount=r,this.gas_unit_price=s,this.expiration_timestamp_secs=n,this.chain_id=a}serialize(e){this.sender.serialize(e),e.serializeU64(this.sequence_number),this.payload.serialize(e),e.serializeU64(this.max_gas_amount),e.serializeU64(this.gas_unit_price),e.serializeU64(this.expiration_timestamp_secs),this.chain_id.serialize(e)}static deserialize(e){let t=ep.deserialize(e),i=e.deserializeU64(),r=e6.deserialize(e),s=e.deserializeU64(),n=e.deserializeU64(),a=e.deserializeU64(),o=e7.deserialize(e);return new ej(t,i,r,s,n,a,o)}},eK=class{constructor(e,t,i){this.code=e,this.ty_args=t,this.args=i}serialize(e){e.serializeBytes(this.code),X(this.ty_args,e),X(this.args,e)}static deserialize(e){let t=e.deserializeBytes(),i=Y(e,eU),r=Y(e,te);return new eK(t,i,r)}},eJ=class{constructor(e,t,i,r){this.module_name=e,this.function_name=t,this.ty_args=i,this.args=r}static natural(e,t,i,r){return new eJ(eY.fromStr(e),new eq(t),i,r)}static natual(e,t,i,r){return eJ.natural(e,t,i,r)}serialize(e){this.module_name.serialize(e),this.function_name.serialize(e),X(this.ty_args,e),e.serializeU32AsUleb128(this.args.length),this.args.forEach(t=>{e.serializeBytes(t)})}static deserialize(e){let t=eY.deserialize(e),i=eq.deserialize(e),r=Y(e,eU),s=e.deserializeUleb128AsU32(),n=[];for(let a=0;a<s;a+=1)n.push(e.deserializeBytes());return new eJ(t,i,r,n)}},eZ=class{constructor(e){this.transaction_payload=e}serialize(e){e.serializeU32AsUleb128(0),this.transaction_payload.serialize(e)}static deserialize(e){return e.deserializeUleb128AsU32(),new eZ(eJ.deserialize(e))}},eX=class{constructor(e,t){this.multisig_address=e,this.transaction_payload=t}serialize(e){this.multisig_address.serialize(e),void 0===this.transaction_payload?e.serializeBool(!1):(e.serializeBool(!0),this.transaction_payload.serialize(e))}static deserialize(e){let t;let i=ep.deserialize(e),r=e.deserializeBool();return r&&(t=eZ.deserialize(e)),new eX(i,t)}},eQ=class{constructor(e){this.code=e}serialize(e){e.serializeBytes(this.code)}static deserialize(e){let t=e.deserializeBytes();return new eQ(t)}},eY=class{constructor(e,t){this.address=e,this.name=t}static fromStr(e){let t=e.split("::");if(2!==t.length)throw Error("Invalid module id.");return new eY(ep.fromHex(new P(t[0])),new eq(t[1]))}serialize(e){this.address.serialize(e),this.name.serialize(e)}static deserialize(e){let t=ep.deserialize(e),i=eq.deserialize(e);return new eY(t,i)}},e0=class{serialize(e){throw Error("Not implemented.")}static deserialize(e){throw Error("Not implemented.")}},e1=class{serialize(e){throw Error("Not implmented.")}static deserialize(e){throw Error("Not implmented.")}},e2=class{constructor(e,t){this.raw_txn=e,this.authenticator=t}serialize(e){this.raw_txn.serialize(e),this.authenticator.serialize(e)}static deserialize(e){let t=ej.deserialize(e),i=eT.deserialize(e);return new e2(t,i)}},e8=class{static deserialize(e){let t=e.deserializeUleb128AsU32();if(0===t)return e5.load(e);throw Error(`Unknown variant index for RawTransactionWithData: ${t}`)}},e5=class extends e8{constructor(e,t){super(),this.raw_txn=e,this.secondary_signer_addresses=t}serialize(e){e.serializeU32AsUleb128(0),this.raw_txn.serialize(e),X(this.secondary_signer_addresses,e)}static load(e){let t=ej.deserialize(e),i=Y(e,ep);return new e5(t,i)}},e6=class{static deserialize(e){let t=e.deserializeUleb128AsU32();switch(t){case 0:return e3.load(e);case 2:return e4.load(e);case 3:return e9.load(e);default:throw Error(`Unknown variant index for TransactionPayload: ${t}`)}}},e3=class extends e6{constructor(e){super(),this.value=e}serialize(e){e.serializeU32AsUleb128(0),this.value.serialize(e)}static load(e){let t=eK.deserialize(e);return new e3(t)}},e4=class extends e6{constructor(e){super(),this.value=e}serialize(e){e.serializeU32AsUleb128(2),this.value.serialize(e)}static load(e){let t=eJ.deserialize(e);return new e4(t)}},e9=class extends e6{constructor(e){super(),this.value=e}serialize(e){e.serializeU32AsUleb128(3),this.value.serialize(e)}static load(e){let t=eX.deserialize(e);return new e9(t)}},e7=class{constructor(e){this.value=e}serialize(e){e.serializeU8(this.value)}static deserialize(e){let t=e.deserializeU8();return new e7(t)}},te=class{static deserialize(e){let t=e.deserializeUleb128AsU32();switch(t){case 0:return tt.load(e);case 1:return ts.load(e);case 2:return tn.load(e);case 3:return to.load(e);case 4:return tl.load(e);case 5:return tu.load(e);case 6:return ti.load(e);case 7:return tr.load(e);case 8:return ta.load(e);default:throw Error(`Unknown variant index for TransactionArgument: ${t}`)}}},tt=class extends te{constructor(e){super(),this.value=e}serialize(e){e.serializeU32AsUleb128(0),e.serializeU8(this.value)}static load(e){let t=e.deserializeU8();return new tt(t)}},ti=class extends te{constructor(e){super(),this.value=e}serialize(e){e.serializeU32AsUleb128(6),e.serializeU16(this.value)}static load(e){let t=e.deserializeU16();return new ti(t)}},tr=class extends te{constructor(e){super(),this.value=e}serialize(e){e.serializeU32AsUleb128(7),e.serializeU32(this.value)}static load(e){let t=e.deserializeU32();return new tr(t)}},ts=class extends te{constructor(e){super(),this.value=e}serialize(e){e.serializeU32AsUleb128(1),e.serializeU64(this.value)}static load(e){let t=e.deserializeU64();return new ts(t)}},tn=class extends te{constructor(e){super(),this.value=e}serialize(e){e.serializeU32AsUleb128(2),e.serializeU128(this.value)}static load(e){let t=e.deserializeU128();return new tn(t)}},ta=class extends te{constructor(e){super(),this.value=e}serialize(e){e.serializeU32AsUleb128(8),e.serializeU256(this.value)}static load(e){let t=e.deserializeU256();return new ta(t)}},to=class extends te{constructor(e){super(),this.value=e}serialize(e){e.serializeU32AsUleb128(3),this.value.serialize(e)}static load(e){let t=ep.deserialize(e);return new to(t)}},tl=class extends te{constructor(e){super(),this.value=e}serialize(e){e.serializeU32AsUleb128(4),e.serializeBytes(this.value)}static load(e){let t=e.deserializeBytes();return new tl(t)}},tu=class extends te{constructor(e){super(),this.value=e}serialize(e){e.serializeU32AsUleb128(5),e.serializeBool(this.value)}static load(e){let t=e.deserializeBool();return new tu(t)}},tc=class{getHashSalt(){let e=ec.sha3_256.create();return e.update("APTOS::Transaction"),e.digest()}static deserialize(e){let t=e.deserializeUleb128AsU32();if(0===t)return td.load(e);throw Error(`Unknown variant index for Transaction: ${t}`)}},td=class extends tc{constructor(e){super(),this.value=e}hash(){let e=ec.sha3_256.create();return e.update(this.getHashSalt()),e.update(ee(this)),e.digest()}serialize(e){e.serializeU32AsUleb128(0),this.value.serialize(e)}static load(e){return new td(e2.deserialize(e))}},tp=class{constructor(e){this.name=e}serialize(e){e.serializeStr(this.name)}static deserialize(e){let t=e.deserializeStr();return new tp(t)}},th=class{constructor(e,t){this.name=e,this.type_tag=t}serialize(e){e.serializeStr(this.name),this.type_tag.serialize(e)}static deserialize(e){let t=e.deserializeStr(),i=eU.deserialize(e);return new th(t,i)}},ty=class{static deserialize(e){let t=e.deserializeUleb128AsU32();switch(t){case 0:return tg.load(e);case 1:return tf.load(e);default:throw Error(`Unknown variant index for TransactionPayload: ${t}`)}}},tg=class extends ty{constructor(e,t,i,r,s){super(),this.name=e,this.doc=t,this.code=i,this.ty_args=r,this.args=s}serialize(e){e.serializeU32AsUleb128(0),e.serializeStr(this.name),e.serializeStr(this.doc),e.serializeBytes(this.code),X(this.ty_args,e),X(this.args,e)}static load(e){let t=e.deserializeStr(),i=e.deserializeStr(),r=e.deserializeBytes(),s=Y(e,tp),n=Y(e,th);return new tg(t,i,r,s,n)}},tf=class extends ty{constructor(e,t,i,r,s){super(),this.name=e,this.module_name=t,this.doc=i,this.ty_args=r,this.args=s}serialize(e){e.serializeU32AsUleb128(1),e.serializeStr(this.name),this.module_name.serialize(e),e.serializeStr(this.doc),X(this.ty_args,e),X(this.args,e)}static load(e){let t=e.deserializeStr(),i=eY.deserialize(e),r=e.deserializeStr(),s=Y(e,tp),n=Y(e,th);return new tf(t,i,r,s,n)}},tm=i(83941),t_=class{constructor(e){if(e.length!==t_.LENGTH)throw Error("Expected a byte array of length 32");this.bytes=e}static fromMultiEd25519PublicKey(e){let t=e.toBytes(),i=new Uint8Array(t.length+1);i.set(t),i.set([t_.MULTI_ED25519_SCHEME],t.length);let r=tm.sha3_256.create();return r.update(i),new t_(r.digest())}static fromEd25519PublicKey(e){let t=e.value,i=new Uint8Array(t.length+1);i.set(t),i.set([t_.ED25519_SCHEME],t.length);let r=tm.sha3_256.create();return r.update(i),new t_(r.digest())}derivedAddress(){return P.fromUint8Array(this.bytes)}},tv=t_;tv.LENGTH=32,tv.MULTI_ED25519_SCHEME=1,tv.ED25519_SCHEME=0,tv.DERIVE_RESOURCE_ACCOUNT_SCHEME=255;var tT=class{constructor(e,t,i,r,s,n,a){this.accountAddress=e,this.moduleName=t,this.structName=i,this.sequenceNumber=r,this.originator=s,this.currentAuthKey=n,this.newPublicKey=a}serialize(e){this.accountAddress.serialize(e),e.serializeStr(this.moduleName),e.serializeStr(this.structName),e.serializeU64(this.sequenceNumber),this.originator.serialize(e),this.currentAuthKey.serialize(e),e.serializeBytes(this.newPublicKey)}},tb=class{static fromAptosAccountObject(e){return new tb(P.ensure(e.privateKeyHex).toUint8Array(),e.address)}static isValidPath(e){return/^m\/44'\/637'\/[0-9]+'\/[0-9]+'\/[0-9]+'+$/.test(e)}static fromDerivePath(e,t){if(!tb.isValidPath(e))throw Error("Invalid derivation path");let i=t.trim().split(/\s+/).map(e=>e.toLowerCase()).join(" "),{key:r}=x(e,(0,T.bytesToHex)(v.mnemonicToSeedSync(i)));return new tb(r)}constructor(e,t){e?this.signingKey=_.default.sign.keyPair.fromSeed(e.slice(0,32)):this.signingKey=_.default.sign.keyPair(),this.accountAddress=P.ensure(t||this.authKey().hex())}address(){return this.accountAddress}authKey(){let e=new ey(this.signingKey.publicKey),t=tv.fromEd25519PublicKey(e);return t.derivedAddress()}static getResourceAccountAddress(e,t){let i=ee(ep.fromHex(e)),r=new Uint8Array([...i,...t,tv.DERIVE_RESOURCE_ACCOUNT_SCHEME]),s=b.sha3_256.create();return s.update(r),P.fromUint8Array(s.digest())}pubKey(){return P.fromUint8Array(this.signingKey.publicKey)}signBuffer(e){let t=_.default.sign.detached(e,this.signingKey.secretKey);return P.fromUint8Array(t)}signHexString(e){let t=P.ensure(e).toUint8Array();return this.signBuffer(t)}verifySignature(e,t){let i=P.ensure(e).toUint8Array(),r=P.ensure(t).toUint8Array();return _.default.sign.detached.verify(i,r,this.signingKey.publicKey)}toPrivateKeyObject(){return{address:this.address().hex(),publicKeyHex:this.pubKey().hex(),privateKeyHex:P.fromUint8Array(this.signingKey.secretKey.slice(0,32)).hex()}}},tw=tb;function tS(e){return e instanceof tw?e.address():P.ensure(e)}f([C()],tw.prototype,"authKey",1);var tA=g(i(93026)),tE=`
    query getAccountCoinsData($owner_address: String, $offset: Int, $limit: Int) {
  current_coin_balances(
    where: {owner_address: {_eq: $owner_address}}
    offset: $offset
    limit: $limit
  ) {
    amount
    coin_type
    coin_info {
      name
      decimals
      symbol
    }
  }
}
    `,tR=`
    query getAccountCurrentTokens($address: String!, $offset: Int, $limit: Int) {
  current_token_ownerships(
    where: {owner_address: {_eq: $address}, amount: {_gt: 0}}
    order_by: [{last_transaction_version: desc}, {creator_address: asc}, {collection_name: asc}, {name: asc}]
    offset: $offset
    limit: $limit
  ) {
    amount
    current_token_data {
      ...TokenDataFields
    }
    current_collection_data {
      ...CollectionDataFields
    }
    last_transaction_version
    property_version
  }
}
    
    fragment TokenDataFields on current_token_datas {
  creator_address
  collection_name
  description
  metadata_uri
  name
  token_data_id_hash
  collection_data_id_hash
}
    

    fragment CollectionDataFields on current_collection_datas {
  metadata_uri
  supply
  description
  collection_name
  collection_data_id_hash
  table_handle
  creator_address
}
    `,tq=`
    query getAccountTokensCount($owner_address: String) {
  current_token_ownerships_aggregate(
    where: {owner_address: {_eq: $owner_address}, amount: {_gt: "0"}}
  ) {
    aggregate {
      count
    }
  }
}
    `,tU=`
    query getAccountTransactionsCount($address: String) {
  move_resources_aggregate(
    where: {address: {_eq: $address}}
    distinct_on: transaction_version
  ) {
    aggregate {
      count
    }
  }
}
    `,tz=`
    query getAccountTransactionsData($address: String, $limit: Int, $offset: Int) {
  move_resources(
    where: {address: {_eq: $address}}
    order_by: {transaction_version: desc}
    distinct_on: transaction_version
    limit: $limit
    offset: $offset
  ) {
    transaction_version
  }
}
    `,tx=`
    query getCurrentDelegatorBalancesCount($poolAddress: String) {
  current_delegator_balances_aggregate(
    where: {pool_type: {_eq: "active_shares"}, pool_address: {_eq: $poolAddress}, amount: {_gt: "0"}}
    distinct_on: delegator_address
  ) {
    aggregate {
      count
    }
  }
}
    `,tB=`
    query getDelegatedStakingActivities($delegatorAddress: String, $poolAddress: String) {
  delegated_staking_activities(
    where: {delegator_address: {_eq: $delegatorAddress}, pool_address: {_eq: $poolAddress}}
  ) {
    amount
    delegator_address
    event_index
    event_type
    pool_address
    transaction_version
  }
}
    `,tk=`
    query getIndexerLedgerInfo {
  ledger_infos {
    chain_id
  }
}
    `,tC=`
    query getTokenActivities($idHash: String!, $offset: Int, $limit: Int) {
  token_activities(
    where: {token_data_id_hash: {_eq: $idHash}}
    order_by: {transaction_version: desc}
    offset: $offset
    limit: $limit
  ) {
    creator_address
    collection_name
    name
    token_data_id_hash
    collection_data_id_hash
    from_address
    to_address
    transaction_version
    transaction_timestamp
    property_version
    transfer_type
    event_sequence_number
    token_amount
  }
}
    `,tI=`
    query getTokenActivitiesCount($token_id: String) {
  token_activities_aggregate(where: {token_data_id_hash: {_eq: $token_id}}) {
    aggregate {
      count
    }
  }
}
    `,t$=`
    query getTokenData($token_id: String) {
  current_token_datas(where: {token_data_id_hash: {_eq: $token_id}}) {
    token_data_id_hash
    name
    collection_name
    creator_address
    default_properties
    largest_property_version
    maximum
    metadata_uri
    payee_address
    royalty_points_denominator
    royalty_points_numerator
    supply
  }
}
    `,tM=`
    query getTokenOwnersData($token_id: String, $property_version: numeric) {
  current_token_ownerships(
    where: {token_data_id_hash: {_eq: $token_id}, property_version: {_eq: $property_version}}
  ) {
    owner_address
  }
}
    `,tP=`
    query getTopUserTransactions($limit: Int) {
  user_transactions(limit: $limit, order_by: {version: desc}) {
    version
  }
}
    `,tN=`
    query getUserTransactions($limit: Int, $start_version: bigint, $offset: Int) {
  user_transactions(
    limit: $limit
    order_by: {version: desc}
    where: {version: {_lte: $start_version}}
    offset: $offset
  ) {
    version
  }
}
    `,tH=class{constructor(e){this.endpoint=e}static validateAddress(e){if(e.length<66)throw Error("Address needs to be 66 chars long.")}async queryIndexer(e){let{data:t}=await tA.default.post(this.endpoint,e);if(t.errors)throw Error(`Indexer data error ${JSON.stringify(t.errors,null," ")}`);return t.data}async getIndexerLedgerInfo(){return this.queryIndexer({query:tk})}async getAccountNFTs(e,t){let i=P.ensure(e).hex();tH.validateAddress(i);let r={query:tR,variables:{address:i,offset:null==t?void 0:t.offset,limit:null==t?void 0:t.limit}};return this.queryIndexer(r)}async getTokenActivities(e,t){let i={query:tC,variables:{idHash:e,offset:null==t?void 0:t.offset,limit:null==t?void 0:t.limit}};return this.queryIndexer(i)}async getAccountCoinsData(e,t){let i=P.ensure(e).hex();tH.validateAddress(i);let r={query:tE,variables:{owner_address:i,offset:null==t?void 0:t.offset,limit:null==t?void 0:t.limit}};return this.queryIndexer(r)}async getAccountTokensCount(e){let t=P.ensure(e).hex();return tH.validateAddress(t),this.queryIndexer({query:tq,variables:{owner_address:t}})}async getAccountTransactionsCount(e){let t=P.ensure(e).hex();return tH.validateAddress(t),this.queryIndexer({query:tU,variables:{address:t}})}async getAccountTransactionsData(e,t){let i=P.ensure(e).hex();tH.validateAddress(i);let r={query:tz,variables:{address:i,offset:null==t?void 0:t.offset,limit:null==t?void 0:t.limit}};return this.queryIndexer(r)}async getDelegatedStakingActivities(e,t){let i=P.ensure(e).hex(),r=P.ensure(t).hex();return tH.validateAddress(i),tH.validateAddress(r),this.queryIndexer({query:tB,variables:{delegatorAddress:i,poolAddress:r}})}async getTokenActivitiesCount(e){return this.queryIndexer({query:tI,variables:{token_id:e}})}async getTokenData(e){return this.queryIndexer({query:t$,variables:{token_id:e}})}async getTokenOwnersData(e,t){return this.queryIndexer({query:tM,variables:{token_id:e,property_version:t}})}async getTopUserTransactions(e){return this.queryIndexer({query:tP,variables:{limit:e}})}async getUserTransactions(e,t){let i={query:tN,variables:{start_version:e,offset:null==t?void 0:t.offset,limit:null==t?void 0:t.limit}};return this.queryIndexer(i)}async getCurrentDelegatorBalancesCount(e){let t=P.ensure(e).hex();return tH.validateAddress(t),this.queryIndexer({query:tx,variables:{poolAddress:t}})}},tD={};h(tD,{$AccountData:()=>i_,$AccountSignature:()=>iv,$AccountSignature_Ed25519Signature:()=>iT,$AccountSignature_MultiEd25519Signature:()=>ib,$Address:()=>iw,$AptosError:()=>iS,$AptosErrorCode:()=>iA,$Block:()=>iE,$BlockMetadataTransaction:()=>iR,$DecodedTableData:()=>iq,$DeleteModule:()=>iz,$DeleteResource:()=>ix,$DeleteTableItem:()=>iB,$DeletedTableData:()=>iU,$DirectWriteSet:()=>ik,$Ed25519Signature:()=>iC,$EncodeSubmissionRequest:()=>iI,$EntryFunctionId:()=>i$,$EntryFunctionPayload:()=>iM,$Event:()=>iP,$EventGuid:()=>iN,$GasEstimation:()=>iH,$GenesisPayload:()=>iD,$GenesisPayload_WriteSetPayload:()=>iO,$GenesisTransaction:()=>iW,$HashValue:()=>iV,$HealthCheckSuccess:()=>iL,$HexEncodedBytes:()=>iF,$IdentifierWrapper:()=>iG,$IndexResponse:()=>ij,$ModuleBundlePayload:()=>iK,$MoveAbility:()=>iJ,$MoveFunction:()=>iZ,$MoveFunctionGenericTypeParam:()=>iX,$MoveFunctionVisibility:()=>iQ,$MoveModule:()=>iY,$MoveModuleBytecode:()=>i0,$MoveModuleId:()=>i1,$MoveResource:()=>i2,$MoveScriptBytecode:()=>i8,$MoveStruct:()=>i5,$MoveStructField:()=>i6,$MoveStructGenericTypeParam:()=>i3,$MoveStructTag:()=>i4,$MoveStructValue:()=>i9,$MoveType:()=>i7,$MoveValue:()=>re,$MultiAgentSignature:()=>rt,$MultiEd25519Signature:()=>ri,$MultisigPayload:()=>rr,$MultisigTransactionPayload:()=>rs,$PendingTransaction:()=>rn,$RawTableItemRequest:()=>ra,$RoleType:()=>ro,$ScriptPayload:()=>rl,$ScriptWriteSet:()=>ru,$StateCheckpointTransaction:()=>rc,$StateKeyWrapper:()=>rd,$SubmitTransactionRequest:()=>rp,$TableItemRequest:()=>rh,$Transaction:()=>ry,$TransactionPayload:()=>rT,$TransactionPayload_EntryFunctionPayload:()=>rb,$TransactionPayload_ModuleBundlePayload:()=>rw,$TransactionPayload_MultisigPayload:()=>rS,$TransactionPayload_ScriptPayload:()=>rA,$TransactionSignature:()=>rq,$TransactionSignature_Ed25519Signature:()=>rU,$TransactionSignature_MultiAgentSignature:()=>rz,$TransactionSignature_MultiEd25519Signature:()=>rx,$Transaction_BlockMetadataTransaction:()=>rg,$Transaction_GenesisTransaction:()=>rf,$Transaction_PendingTransaction:()=>rm,$Transaction_StateCheckpointTransaction:()=>r_,$Transaction_UserTransaction:()=>rv,$TransactionsBatchSingleSubmissionFailure:()=>rE,$TransactionsBatchSubmissionResult:()=>rR,$U128:()=>rB,$U256:()=>rk,$U64:()=>rC,$UserTransaction:()=>rI,$VersionedEvent:()=>r$,$ViewRequest:()=>rM,$WriteModule:()=>rP,$WriteResource:()=>rN,$WriteSet:()=>rH,$WriteSetChange:()=>rW,$WriteSetChange_DeleteModule:()=>rV,$WriteSetChange_DeleteResource:()=>rL,$WriteSetChange_DeleteTableItem:()=>rF,$WriteSetChange_WriteModule:()=>rG,$WriteSetChange_WriteResource:()=>rj,$WriteSetChange_WriteTableItem:()=>rK,$WriteSetPayload:()=>rJ,$WriteSet_DirectWriteSet:()=>rD,$WriteSet_ScriptWriteSet:()=>rO,$WriteTableItem:()=>rZ,AccountsService:()=>is,ApiError:()=>tL,AptosErrorCode:()=>iy,AptosGeneratedClient:()=>ip,BaseHttpRequest:()=>tO,BlocksService:()=>ia,CancelError:()=>tF,CancelablePromise:()=>tG,EventsService:()=>io,GeneralService:()=>il,MoveFunctionVisibility:()=>ig,OpenAPI:()=>ih,RoleType:()=>im,TablesService:()=>iu,TransactionsService:()=>ic,ViewService:()=>id});var tO=class{constructor(e){this.config=e}},tW=g(i(93026)),tV=g(i(6230)),tL=class extends Error{constructor(e,t,i){super(i),this.name="ApiError",this.url=t.url,this.status=t.status,this.statusText=t.statusText,this.body=t.body,this.request=e}},tF=class extends Error{constructor(e){super(e),this.name="CancelError"}get isCancelled(){return!0}},tG=class{constructor(e){this._isResolved=!1,this._isRejected=!1,this._isCancelled=!1,this._cancelHandlers=[],this._promise=new Promise((t,i)=>{this._resolve=t,this._reject=i;let r=e=>{var t;this._isResolved||this._isRejected||this._isCancelled||(this._isResolved=!0,null==(t=this._resolve)||t.call(this,e))},s=e=>{var t;this._isResolved||this._isRejected||this._isCancelled||(this._isRejected=!0,null==(t=this._reject)||t.call(this,e))},n=e=>{this._isResolved||this._isRejected||this._isCancelled||this._cancelHandlers.push(e)};return Object.defineProperty(n,"isResolved",{get:()=>this._isResolved}),Object.defineProperty(n,"isRejected",{get:()=>this._isRejected}),Object.defineProperty(n,"isCancelled",{get:()=>this._isCancelled}),e(r,s,n)})}then(e,t){return this._promise.then(e,t)}catch(e){return this._promise.catch(e)}finally(e){return this._promise.finally(e)}cancel(){var e;if(!this._isResolved&&!this._isRejected&&!this._isCancelled){if(this._isCancelled=!0,this._cancelHandlers.length)try{for(let t of this._cancelHandlers)t()}catch(i){console.warn("Cancellation threw an error",i);return}this._cancelHandlers.length=0,null==(e=this._reject)||e.call(this,new tF("Request aborted"))}}get isCancelled(){return this._isCancelled}},tj=class{constructor(e=new Map){this.jar=e}setCookie(e,t){var i;let r=e.origin.toLowerCase();this.jar.has(r)||this.jar.set(r,[]);let s=tj.parse(t);this.jar.set(r,[...(null==(i=this.jar.get(r))?void 0:i.filter(e=>e.name!==s.name))||[],s])}getCookies(e){var t;let i=e.origin.toLowerCase();return this.jar.get(i)&&(null==(t=this.jar.get(i))?void 0:t.filter(e=>!e.expires||e.expires>new Date))||[]}static parse(e){let t;if("string"!=typeof e)throw Error("argument str must be a string");let i=e.split(";").map(e=>e.trim());if(i.length>0){let[r,s]=i[0].split("=");if(!r||!s)throw Error("Invalid cookie");t={name:r,value:s}}else throw Error("Invalid cookie");return i.slice(1).forEach(e=>{let[i,r]=e.split("=");if(!i.trim())throw Error("Invalid cookie");let s=i.toLowerCase(),n=(null==r?void 0:r.charAt(0))==="'"||(null==r?void 0:r.charAt(0))==='"'?null==r?void 0:r.slice(1,-1):r;if("expires"===s&&(t.expires=new Date(n)),"path"===s&&(t.path=n),"samesite"===s){if("Lax"!==n&&"None"!==n&&"Strict"!==n)throw Error("Invalid cookie SameSite value");t.sameSite=n}"secure"===s&&(t.secure=!0)}),t}},tK=new tj;tW.default.interceptors.response.use(e=>(Array.isArray(e.headers["set-cookie"])&&e.headers["set-cookie"].forEach(t=>{tK.setCookie(new URL(e.config.url),t)}),e)),tW.default.interceptors.request.use(function(e){let t=tK.getCookies(new URL(e.url));return(null==t?void 0:t.length)>0&&e.headers&&(e.headers.cookie=t.map(e=>`${e.name}=${e.value}`).join("; ")),e});var tJ=e=>null!=e,tZ=e=>"string"==typeof e,tX=e=>tZ(e)&&""!==e,tQ=e=>"object"==typeof e&&"string"==typeof e.type&&"function"==typeof e.stream&&"function"==typeof e.arrayBuffer&&"function"==typeof e.constructor&&"string"==typeof e.constructor.name&&/^(Blob|File)$/.test(e.constructor.name)&&/^(Blob|File)$/.test(e[Symbol.toStringTag]),tY=e=>e instanceof tV.default,t0=e=>e>=200&&e<300,t1=e=>btoa(e),t2=e=>{let t=[],i=(e,i)=>{t.push(`${encodeURIComponent(e)}=${encodeURIComponent(String(i))}`)},r=(e,t)=>{tJ(t)&&(Array.isArray(t)?t.forEach(t=>{r(e,t)}):"object"==typeof t?Object.entries(t).forEach(([t,i])=>{r(`${e}[${t}]`,i)}):i(e,t))};return(Object.entries(e).forEach(([e,t])=>{r(e,t)}),t.length>0)?`?${t.join("&")}`:""},t8=(e,t)=>{let i=e.ENCODE_PATH||encodeURI,r=t.url.replace("{api-version}",e.VERSION).replace(/{(.*?)}/g,(e,r)=>{var s;return(null==(s=t.path)?void 0:s.hasOwnProperty(r))?i(String(t.path[r])):e}),s=`${e.BASE}${r}`;return t.query?`${s}${t2(t.query)}`:s},t5=e=>{if(e.formData){let t=new tV.default,i=(e,i)=>{tZ(i)||tQ(i)?t.append(e,i):t.append(e,JSON.stringify(i))};return Object.entries(e.formData).filter(([e,t])=>tJ(t)).forEach(([e,t])=>{Array.isArray(t)?t.forEach(t=>i(e,t)):i(e,t)}),t}},t6=async(e,t)=>"function"==typeof t?t(e):t,t3=async(e,t,i)=>{let r=await t6(t,e.TOKEN),s=await t6(t,e.USERNAME),n=await t6(t,e.PASSWORD),a=await t6(t,e.HEADERS),o="function"==typeof(null==i?void 0:i.getHeaders)&&(null==i?void 0:i.getHeaders())||{},l=Object.entries({Accept:"application/json",...a,...t.headers,...o}).filter(([e,t])=>tJ(t)).reduce((e,[t,i])=>({...e,[t]:String(i)}),{});if(tX(r)&&(l.Authorization=`Bearer ${r}`),tX(s)&&tX(n)){let u=t1(`${s}:${n}`);l.Authorization=`Basic ${u}`}return t.body&&(t.mediaType?l["Content-Type"]=t.mediaType:tQ(t.body)?l["Content-Type"]=t.body.type||"application/octet-stream":tZ(t.body)?l["Content-Type"]="text/plain":tY(t.body)||(l["Content-Type"]="application/json")),l},t4=e=>{if(e.body)return e.body},t9=async(e,t,i,r,s,n,a)=>{let o=tW.default.CancelToken.source(),l={url:i,headers:n,data:null!=r?r:s,method:t.method,withCredentials:e.WITH_CREDENTIALS,cancelToken:o.token},u=Object.keys(e.HEADERS||{}).filter(e=>"accept"===e.toLowerCase()).map(t=>e.HEADERS[t]).includes("application/x-bcs");u&&(l.responseType="arraybuffer"),a(()=>o.cancel("The user aborted a request."));try{return await tW.default.request(l)}catch(c){if(c.response)return c.response;throw c}},t7=(e,t)=>{if(t){let i=e.headers[t];if(tZ(i))return i}},ie=e=>{if(204!==e.status)return e.data},it=(e,t)=>{let i={400:"Bad Request",401:"Unauthorized",403:"Forbidden",404:"Not Found",429:"Too Many Requests",500:"Internal Server Error",502:"Bad Gateway",503:"Service Unavailable",...e.errors},r=i[t.status];if(r)throw new tL(e,t,r);if(!t.ok)throw new tL(e,t,"Generic Error")},ii=(e,t)=>new tG(async(i,r,s)=>{try{let n=t8(e,t),a=t5(t),o=t4(t),l=await t3(e,t,a);if(!s.isCancelled){let u=await t9(e,t,n,o,a,l,s),c=ie(u),d=t7(u,t.responseHeader),p={url:n,ok:t0(u.status),status:u.status,statusText:u.statusText,body:null!=d?d:c};it(t,p);let h=p.body;try{h.__headers=u.headers}catch(y){}i(h)}}catch(g){r(g)}}),ir=class extends tO{constructor(e){super(e)}request(e){return ii(this.config,e)}},is=class{constructor(e){this.httpRequest=e}getAccount(e,t){return this.httpRequest.request({method:"GET",url:"/accounts/{address}",path:{address:e},query:{ledger_version:t}})}getAccountResources(e,t,i,r){return this.httpRequest.request({method:"GET",url:"/accounts/{address}/resources",path:{address:e},query:{ledger_version:t,start:i,limit:r}})}getAccountModules(e,t,i,r){return this.httpRequest.request({method:"GET",url:"/accounts/{address}/modules",path:{address:e},query:{ledger_version:t,start:i,limit:r}})}getAccountResource(e,t,i){return this.httpRequest.request({method:"GET",url:"/accounts/{address}/resource/{resource_type}",path:{address:e,resource_type:t},query:{ledger_version:i}})}getAccountModule(e,t,i){return this.httpRequest.request({method:"GET",url:"/accounts/{address}/module/{module_name}",path:{address:e,module_name:t},query:{ledger_version:i}})}},ia=class{constructor(e){this.httpRequest=e}getBlockByHeight(e,t){return this.httpRequest.request({method:"GET",url:"/blocks/by_height/{block_height}",path:{block_height:e},query:{with_transactions:t}})}getBlockByVersion(e,t){return this.httpRequest.request({method:"GET",url:"/blocks/by_version/{version}",path:{version:e},query:{with_transactions:t}})}},io=class{constructor(e){this.httpRequest=e}getEventsByCreationNumber(e,t,i,r){return this.httpRequest.request({method:"GET",url:"/accounts/{address}/events/{creation_number}",path:{address:e,creation_number:t},query:{start:i,limit:r}})}getEventsByEventHandle(e,t,i,r,s){return this.httpRequest.request({method:"GET",url:"/accounts/{address}/events/{event_handle}/{field_name}",path:{address:e,event_handle:t,field_name:i},query:{start:r,limit:s}})}},il=class{constructor(e){this.httpRequest=e}spec(){return this.httpRequest.request({method:"GET",url:"/spec"})}healthy(e){return this.httpRequest.request({method:"GET",url:"/-/healthy",query:{duration_secs:e}})}getLedgerInfo(){return this.httpRequest.request({method:"GET",url:"/"})}},iu=class{constructor(e){this.httpRequest=e}getTableItem(e,t,i){return this.httpRequest.request({method:"POST",url:"/tables/{table_handle}/item",path:{table_handle:e},query:{ledger_version:i},body:t,mediaType:"application/json"})}getRawTableItem(e,t,i){return this.httpRequest.request({method:"POST",url:"/tables/{table_handle}/raw_item",path:{table_handle:e},query:{ledger_version:i},body:t,mediaType:"application/json"})}},ic=class{constructor(e){this.httpRequest=e}getTransactions(e,t){return this.httpRequest.request({method:"GET",url:"/transactions",query:{start:e,limit:t}})}submitTransaction(e){return this.httpRequest.request({method:"POST",url:"/transactions",body:e,mediaType:"application/json"})}getTransactionByHash(e){return this.httpRequest.request({method:"GET",url:"/transactions/by_hash/{txn_hash}",path:{txn_hash:e}})}getTransactionByVersion(e){return this.httpRequest.request({method:"GET",url:"/transactions/by_version/{txn_version}",path:{txn_version:e}})}getAccountTransactions(e,t,i){return this.httpRequest.request({method:"GET",url:"/accounts/{address}/transactions",path:{address:e},query:{start:t,limit:i}})}submitBatchTransactions(e){return this.httpRequest.request({method:"POST",url:"/transactions/batch",body:e,mediaType:"application/json"})}simulateTransaction(e,t,i,r){return this.httpRequest.request({method:"POST",url:"/transactions/simulate",query:{estimate_max_gas_amount:t,estimate_gas_unit_price:i,estimate_prioritized_gas_unit_price:r},body:e,mediaType:"application/json"})}encodeSubmission(e){return this.httpRequest.request({method:"POST",url:"/transactions/encode_submission",body:e,mediaType:"application/json"})}estimateGasPrice(){return this.httpRequest.request({method:"GET",url:"/estimate_gas_price"})}},id=class{constructor(e){this.httpRequest=e}view(e,t){return this.httpRequest.request({method:"POST",url:"/view",query:{ledger_version:t},body:e,mediaType:"application/json"})}},ip=class{constructor(e,t=ir){var i,r,s,n;this.request=new t({BASE:null!=(i=null==e?void 0:e.BASE)?i:"/v1",VERSION:null!=(r=null==e?void 0:e.VERSION)?r:"1.2.0",WITH_CREDENTIALS:null!=(s=null==e?void 0:e.WITH_CREDENTIALS)&&s,CREDENTIALS:null!=(n=null==e?void 0:e.CREDENTIALS)?n:"include",TOKEN:null==e?void 0:e.TOKEN,USERNAME:null==e?void 0:e.USERNAME,PASSWORD:null==e?void 0:e.PASSWORD,HEADERS:null==e?void 0:e.HEADERS,ENCODE_PATH:null==e?void 0:e.ENCODE_PATH}),this.accounts=new is(this.request),this.blocks=new ia(this.request),this.events=new io(this.request),this.general=new il(this.request),this.tables=new iu(this.request),this.transactions=new ic(this.request),this.view=new id(this.request)}},ih={BASE:"/v1",VERSION:"1.2.0",WITH_CREDENTIALS:!1,CREDENTIALS:"include",TOKEN:void 0,USERNAME:void 0,PASSWORD:void 0,HEADERS:void 0,ENCODE_PATH:void 0},iy=((s=iy||{}).ACCOUNT_NOT_FOUND="account_not_found",s.RESOURCE_NOT_FOUND="resource_not_found",s.MODULE_NOT_FOUND="module_not_found",s.STRUCT_FIELD_NOT_FOUND="struct_field_not_found",s.VERSION_NOT_FOUND="version_not_found",s.TRANSACTION_NOT_FOUND="transaction_not_found",s.TABLE_ITEM_NOT_FOUND="table_item_not_found",s.BLOCK_NOT_FOUND="block_not_found",s.VERSION_PRUNED="version_pruned",s.BLOCK_PRUNED="block_pruned",s.INVALID_INPUT="invalid_input",s.INVALID_TRANSACTION_UPDATE="invalid_transaction_update",s.SEQUENCE_NUMBER_TOO_OLD="sequence_number_too_old",s.VM_ERROR="vm_error",s.HEALTH_CHECK_FAILED="health_check_failed",s.MEMPOOL_IS_FULL="mempool_is_full",s.INTERNAL_ERROR="internal_error",s.WEB_FRAMEWORK_ERROR="web_framework_error",s.BCS_NOT_SUPPORTED="bcs_not_supported",s.API_DISABLED="api_disabled",s),ig=((n=ig||{}).PRIVATE="private",n.PUBLIC="public",n.FRIEND="friend",n),im=((a=im||{}).VALIDATOR="validator",a.FULL_NODE="full_node",a),i_={description:`Account data

    A simplified version of the onchain Account resource`,properties:{sequence_number:{type:"U64",isRequired:!0},authentication_key:{type:"HexEncodedBytes",isRequired:!0}}},iv={type:"one-of",description:`Account signature scheme

    The account signature scheme allows you to have two types of accounts:

    1. A single Ed25519 key account, one private key
    2. A k-of-n multi-Ed25519 key account, multiple private keys, such that k-of-n must sign a transaction.`,contains:[{type:"AccountSignature_Ed25519Signature"},{type:"AccountSignature_MultiEd25519Signature"}]},iT={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"Ed25519Signature"}]},ib={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"MultiEd25519Signature"}]},iw={type:"string",description:`A hex encoded 32 byte Aptos account address.

    This is represented in a string as a 64 character hex string, sometimes
    shortened by stripping leading 0s, and adding a 0x.

    For example, address 0x0000000000000000000000000000000000000000000000000000000000000001 is represented as 0x1.
    `,format:"hex"},iS={description:`This is the generic struct we use for all API errors, it contains a string
    message and an Aptos API specific error code.`,properties:{message:{type:"string",description:"A message describing the error",isRequired:!0},error_code:{type:"AptosErrorCode",isRequired:!0},vm_error_code:{type:"number",description:"A code providing VM error details when submitting transactions to the VM",format:"uint64"}}},iA={type:"Enum"},iE={description:`A Block with or without transactions

    This contains the information about a transactions along with
    associated transactions if requested`,properties:{block_height:{type:"U64",isRequired:!0},block_hash:{type:"HashValue",isRequired:!0},block_timestamp:{type:"U64",isRequired:!0},first_version:{type:"U64",isRequired:!0},last_version:{type:"U64",isRequired:!0},transactions:{type:"array",contains:{type:"Transaction"}}}},iR={description:`A block metadata transaction

    This signifies the beginning of a block, and contains information
    about the specific block`,properties:{version:{type:"U64",isRequired:!0},hash:{type:"HashValue",isRequired:!0},state_change_hash:{type:"HashValue",isRequired:!0},event_root_hash:{type:"HashValue",isRequired:!0},state_checkpoint_hash:{type:"HashValue"},gas_used:{type:"U64",isRequired:!0},success:{type:"boolean",description:"Whether the transaction was successful",isRequired:!0},vm_status:{type:"string",description:"The VM status of the transaction, can tell useful information in a failure",isRequired:!0},accumulator_root_hash:{type:"HashValue",isRequired:!0},changes:{type:"array",contains:{type:"WriteSetChange"},isRequired:!0},id:{type:"HashValue",isRequired:!0},epoch:{type:"U64",isRequired:!0},round:{type:"U64",isRequired:!0},events:{type:"array",contains:{type:"Event"},isRequired:!0},previous_block_votes_bitvec:{type:"array",contains:{type:"number",format:"uint8"},isRequired:!0},proposer:{type:"Address",isRequired:!0},failed_proposer_indices:{type:"array",contains:{type:"number",format:"uint32"},isRequired:!0},timestamp:{type:"U64",isRequired:!0}}},iq={description:"Decoded table data",properties:{key:{description:"Key of table in JSON",properties:{},isRequired:!0},key_type:{type:"string",description:"Type of key",isRequired:!0},value:{description:"Value of table in JSON",properties:{},isRequired:!0},value_type:{type:"string",description:"Type of value",isRequired:!0}}},iU={description:"Deleted table data",properties:{key:{description:"Deleted key",properties:{},isRequired:!0},key_type:{type:"string",description:"Deleted key type",isRequired:!0}}},iz={description:"Delete a module",properties:{address:{type:"Address",isRequired:!0},state_key_hash:{type:"string",description:"State key hash",isRequired:!0},module:{type:"MoveModuleId",isRequired:!0}}},ix={description:"Delete a resource",properties:{address:{type:"Address",isRequired:!0},state_key_hash:{type:"string",description:"State key hash",isRequired:!0},resource:{type:"MoveStructTag",isRequired:!0}}},iB={description:"Delete a table item",properties:{state_key_hash:{type:"string",isRequired:!0},handle:{type:"HexEncodedBytes",isRequired:!0},key:{type:"HexEncodedBytes",isRequired:!0},data:{type:"DeletedTableData"}}},ik={properties:{changes:{type:"array",contains:{type:"WriteSetChange"},isRequired:!0},events:{type:"array",contains:{type:"Event"},isRequired:!0}}},iC={description:"A single Ed25519 signature",properties:{public_key:{type:"HexEncodedBytes",isRequired:!0},signature:{type:"HexEncodedBytes",isRequired:!0}}},iI={description:"Request to encode a submission",properties:{sender:{type:"Address",isRequired:!0},sequence_number:{type:"U64",isRequired:!0},max_gas_amount:{type:"U64",isRequired:!0},gas_unit_price:{type:"U64",isRequired:!0},expiration_timestamp_secs:{type:"U64",isRequired:!0},payload:{type:"TransactionPayload",isRequired:!0},secondary_signers:{type:"array",contains:{type:"Address"}}}},i$={type:"string",description:`Entry function id is string representation of a entry function defined on-chain.

    Format: \`{address}::{module name}::{function name}\`

    Both \`module name\` and \`function name\` are case-sensitive.
    `},iM={description:"Payload which runs a single entry function",properties:{function:{type:"EntryFunctionId",isRequired:!0},type_arguments:{type:"array",contains:{type:"MoveType"},isRequired:!0},arguments:{type:"array",contains:{properties:{}},isRequired:!0}}},iP={description:"An event from a transaction",properties:{guid:{type:"EventGuid",isRequired:!0},sequence_number:{type:"U64",isRequired:!0},type:{type:"MoveType",isRequired:!0},data:{description:"The JSON representation of the event",properties:{},isRequired:!0}}},iN={properties:{creation_number:{type:"U64",isRequired:!0},account_address:{type:"Address",isRequired:!0}}},iH={description:"Struct holding the outputs of the estimate gas API",properties:{deprioritized_gas_estimate:{type:"number",description:"The deprioritized estimate for the gas unit price",format:"uint64"},gas_estimate:{type:"number",description:"The current estimate for the gas unit price",isRequired:!0,format:"uint64"},prioritized_gas_estimate:{type:"number",description:"The prioritized estimate for the gas unit price",format:"uint64"}}},iD={type:"one-of",description:"The writeset payload of the Genesis transaction",contains:[{type:"GenesisPayload_WriteSetPayload"}]},iO={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"WriteSetPayload"}]},iW={description:`The genesis transaction

    This only occurs at the genesis transaction (version 0)`,properties:{version:{type:"U64",isRequired:!0},hash:{type:"HashValue",isRequired:!0},state_change_hash:{type:"HashValue",isRequired:!0},event_root_hash:{type:"HashValue",isRequired:!0},state_checkpoint_hash:{type:"HashValue"},gas_used:{type:"U64",isRequired:!0},success:{type:"boolean",description:"Whether the transaction was successful",isRequired:!0},vm_status:{type:"string",description:"The VM status of the transaction, can tell useful information in a failure",isRequired:!0},accumulator_root_hash:{type:"HashValue",isRequired:!0},changes:{type:"array",contains:{type:"WriteSetChange"},isRequired:!0},payload:{type:"GenesisPayload",isRequired:!0},events:{type:"array",contains:{type:"Event"},isRequired:!0}}},iV={type:"string"},iL={description:"Representation of a successful healthcheck",properties:{message:{type:"string",isRequired:!0}}},iF={type:"string",description:`All bytes (Vec<u8>) data is represented as hex-encoded string prefixed with \`0x\` and fulfilled with
    two hex digits per byte.

    Unlike the \`Address\` type, HexEncodedBytes will not trim any zeros.
    `,format:"hex"},iG={type:"string"},ij={description:`The struct holding all data returned to the client by the
    index endpoint (i.e., GET "/").  Only for responding in JSON`,properties:{chain_id:{type:"number",description:"Chain ID of the current chain",isRequired:!0,format:"uint8"},epoch:{type:"U64",isRequired:!0},ledger_version:{type:"U64",isRequired:!0},oldest_ledger_version:{type:"U64",isRequired:!0},ledger_timestamp:{type:"U64",isRequired:!0},node_role:{type:"RoleType",isRequired:!0},oldest_block_height:{type:"U64",isRequired:!0},block_height:{type:"U64",isRequired:!0},git_hash:{type:"string",description:`Git hash of the build of the API endpoint.  Can be used to determine the exact
            software version used by the API endpoint.`}}},iK={properties:{modules:{type:"array",contains:{type:"MoveModuleBytecode"},isRequired:!0}}},iJ={type:"string"},iZ={description:"Move function",properties:{name:{type:"IdentifierWrapper",isRequired:!0},visibility:{type:"MoveFunctionVisibility",isRequired:!0},is_entry:{type:"boolean",description:"Whether the function can be called as an entry function directly in a transaction",isRequired:!0},is_view:{type:"boolean",description:"Whether the function is a view function or not",isRequired:!0},generic_type_params:{type:"array",contains:{type:"MoveFunctionGenericTypeParam"},isRequired:!0},params:{type:"array",contains:{type:"MoveType"},isRequired:!0},return:{type:"array",contains:{type:"MoveType"},isRequired:!0}}},iX={description:"Move function generic type param",properties:{constraints:{type:"array",contains:{type:"MoveAbility"},isRequired:!0}}},iQ={type:"Enum"},iY={description:"A Move module",properties:{address:{type:"Address",isRequired:!0},name:{type:"IdentifierWrapper",isRequired:!0},friends:{type:"array",contains:{type:"MoveModuleId"},isRequired:!0},exposed_functions:{type:"array",contains:{type:"MoveFunction"},isRequired:!0},structs:{type:"array",contains:{type:"MoveStruct"},isRequired:!0}}},i0={description:"Move module bytecode along with it's ABI",properties:{bytecode:{type:"HexEncodedBytes",isRequired:!0},abi:{type:"MoveModule"}}},i1={type:"string",description:`Move module id is a string representation of Move module.

    Format: \`{address}::{module name}\`

    \`address\` should be hex-encoded 32 byte account address that is prefixed with \`0x\`.

    Module name is case-sensitive.
    `},i2={description:"A parsed Move resource",properties:{type:{type:"MoveStructTag",isRequired:!0},data:{type:"MoveStructValue",isRequired:!0}}},i8={description:"Move script bytecode",properties:{bytecode:{type:"HexEncodedBytes",isRequired:!0},abi:{type:"MoveFunction"}}},i5={description:"A move struct",properties:{name:{type:"IdentifierWrapper",isRequired:!0},is_native:{type:"boolean",description:"Whether the struct is a native struct of Move",isRequired:!0},abilities:{type:"array",contains:{type:"MoveAbility"},isRequired:!0},generic_type_params:{type:"array",contains:{type:"MoveStructGenericTypeParam"},isRequired:!0},fields:{type:"array",contains:{type:"MoveStructField"},isRequired:!0}}},i6={description:"Move struct field",properties:{name:{type:"IdentifierWrapper",isRequired:!0},type:{type:"MoveType",isRequired:!0}}},i3={description:"Move generic type param",properties:{constraints:{type:"array",contains:{type:"MoveAbility"},isRequired:!0}}},i4={type:"string",description:`String representation of a MoveStructTag (on-chain Move struct type). This exists so you
    can specify MoveStructTags as path / query parameters, e.g. for get_events_by_event_handle.

    It is a combination of:
    1. \`move_module_address\`, \`module_name\` and \`struct_name\`, all joined by \`::\`
    2. \`struct generic type parameters\` joined by \`, \`

    Examples:
     * \`0x1::coin::CoinStore<0x1::aptos_coin::AptosCoin>\`
     * \`0x1::account::Account\`

    Note:
    1. Empty chars should be ignored when comparing 2 struct tag ids.
    2. When used in an URL path, should be encoded by url-encoding (AKA percent-encoding).

    See [doc](https://aptos.dev/concepts/accounts) for more details.
    `,pattern:"^0x[0-9a-zA-Z:_<>]+$"},i9={description:`This is a JSON representation of some data within an account resource. More specifically,
    it is a map of strings to arbitrary JSON values / objects, where the keys are top level
    fields within the given resource.

    To clarify, you might query for 0x1::account::Account and see the example data.

    Move \`bool\` type value is serialized into \`boolean\`.

    Move \`u8\`, \`u16\` and \`u32\` type value is serialized into \`integer\`.

    Move \`u64\`, \`u128\` and \`u256\` type value is serialized into \`string\`.

    Move \`address\` type value (32 byte Aptos account address) is serialized into a HexEncodedBytes string.
    For example:
    - \`0x1\`
    - \`0x1668f6be25668c1a17cd8caf6b8d2f25\`

    Move \`vector\` type value is serialized into \`array\`, except \`vector<u8>\` which is serialized into a
    HexEncodedBytes string with \`0x\` prefix.
    For example:
    - \`vector<u64>{255, 255}\` => \`["255", "255"]\`
    - \`vector<u8>{255, 255}\` => \`0xffff\`

    Move \`struct\` type value is serialized into \`object\` that looks like this (except some Move stdlib types, see the following section):
    \`\`\`json
    {
        field1_name: field1_value,
        field2_name: field2_value,
        ......
    }
    \`\`\`

    For example:
    \`{ "created": "0xa550c18", "role_id": "0" }\`

     **Special serialization for Move stdlib types**:
    - [0x1::string::String](https://github.com/aptos-labs/aptos-core/blob/main/language/move-stdlib/docs/ascii.md)
    is serialized into \`string\`. For example, struct value \`0x1::string::String{bytes: b"Hello World!"}\`
    is serialized as \`"Hello World!"\` in JSON.
    `,properties:{}},i7={type:"string",description:`String representation of an on-chain Move type tag that is exposed in transaction payload.
    Values:
    - bool
    - u8
    - u16
    - u32
    - u64
    - u128
    - u256
    - address
    - signer
    - vector: \`vector<{non-reference MoveTypeId}>\`
    - struct: \`{address}::{module_name}::{struct_name}::<{generic types}>\`

    Vector type value examples:
    - \`vector<u8>\`
    - \`vector<vector<u64>>\`
    - \`vector<0x1::coin::CoinStore<0x1::aptos_coin::AptosCoin>>\`

    Struct type value examples:
    - \`0x1::coin::CoinStore<0x1::aptos_coin::AptosCoin>
    - \`0x1::account::Account\`

    Note:
    1. Empty chars should be ignored when comparing 2 struct tag ids.
    2. When used in an URL path, should be encoded by url-encoding (AKA percent-encoding).
    `,pattern:"^(bool|u8|u64|u128|address|signer|vector<.+>|0x[0-9a-zA-Z:_<, >]+)$"},re={type:"any-of",description:"An enum of the possible Move value types",contains:[{type:"number",format:"uint8"},{type:"number",format:"uint16"},{type:"number",format:"uint32"},{type:"U64"},{type:"U128"},{type:"U256"},{type:"boolean"},{type:"Address"},{type:"array",contains:{type:"MoveValue"}},{type:"HexEncodedBytes"},{type:"MoveStructValue"},{type:"string"}]},rt={description:`Multi agent signature for multi agent transactions

    This allows you to have transactions across multiple accounts`,properties:{sender:{type:"AccountSignature",isRequired:!0},secondary_signer_addresses:{type:"array",contains:{type:"Address"},isRequired:!0},secondary_signers:{type:"array",contains:{type:"AccountSignature"},isRequired:!0}}},ri={description:`A Ed25519 multi-sig signature

    This allows k-of-n signing for a transaction`,properties:{public_keys:{type:"array",contains:{type:"HexEncodedBytes"},isRequired:!0},signatures:{type:"array",contains:{type:"HexEncodedBytes"},isRequired:!0},threshold:{type:"number",description:"The number of signatures required for a successful transaction",isRequired:!0,format:"uint8"},bitmap:{type:"HexEncodedBytes",isRequired:!0}}},rr={description:`A multisig transaction that allows an owner of a multisig account to execute a pre-approved
    transaction as the multisig account.`,properties:{multisig_address:{type:"Address",isRequired:!0},transaction_payload:{type:"MultisigTransactionPayload"}}},rs={type:"any-of",contains:[{type:"EntryFunctionPayload"}]},rn={description:"A transaction waiting in mempool",properties:{hash:{type:"HashValue",isRequired:!0},sender:{type:"Address",isRequired:!0},sequence_number:{type:"U64",isRequired:!0},max_gas_amount:{type:"U64",isRequired:!0},gas_unit_price:{type:"U64",isRequired:!0},expiration_timestamp_secs:{type:"U64",isRequired:!0},payload:{type:"TransactionPayload",isRequired:!0},signature:{type:"TransactionSignature"}}},ra={description:"Table Item request for the GetTableItemRaw API",properties:{key:{type:"HexEncodedBytes",isRequired:!0}}},ro={type:"Enum"},rl={description:"Payload which runs a script that can run multiple functions",properties:{code:{type:"MoveScriptBytecode",isRequired:!0},type_arguments:{type:"array",contains:{type:"MoveType"},isRequired:!0},arguments:{type:"array",contains:{properties:{}},isRequired:!0}}},ru={properties:{execute_as:{type:"Address",isRequired:!0},script:{type:"ScriptPayload",isRequired:!0}}},rc={description:"A state checkpoint transaction",properties:{version:{type:"U64",isRequired:!0},hash:{type:"HashValue",isRequired:!0},state_change_hash:{type:"HashValue",isRequired:!0},event_root_hash:{type:"HashValue",isRequired:!0},state_checkpoint_hash:{type:"HashValue"},gas_used:{type:"U64",isRequired:!0},success:{type:"boolean",description:"Whether the transaction was successful",isRequired:!0},vm_status:{type:"string",description:"The VM status of the transaction, can tell useful information in a failure",isRequired:!0},accumulator_root_hash:{type:"HashValue",isRequired:!0},changes:{type:"array",contains:{type:"WriteSetChange"},isRequired:!0},timestamp:{type:"U64",isRequired:!0}}},rd={type:"string",description:`Representation of a StateKey as a hex string. This is used for cursor based pagination.
    `},rp={description:`A request to submit a transaction

    This requires a transaction and a signature of it`,properties:{sender:{type:"Address",isRequired:!0},sequence_number:{type:"U64",isRequired:!0},max_gas_amount:{type:"U64",isRequired:!0},gas_unit_price:{type:"U64",isRequired:!0},expiration_timestamp_secs:{type:"U64",isRequired:!0},payload:{type:"TransactionPayload",isRequired:!0},signature:{type:"TransactionSignature",isRequired:!0}}},rh={description:"Table Item request for the GetTableItem API",properties:{key_type:{type:"MoveType",isRequired:!0},value_type:{type:"MoveType",isRequired:!0},key:{description:"The value of the table item's key",properties:{},isRequired:!0}}},ry={type:"one-of",description:"Enum of the different types of transactions in Aptos",contains:[{type:"Transaction_PendingTransaction"},{type:"Transaction_UserTransaction"},{type:"Transaction_GenesisTransaction"},{type:"Transaction_BlockMetadataTransaction"},{type:"Transaction_StateCheckpointTransaction"}]},rg={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"BlockMetadataTransaction"}]},rf={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"GenesisTransaction"}]},rm={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"PendingTransaction"}]},r_={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"StateCheckpointTransaction"}]},rv={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"UserTransaction"}]},rT={type:"one-of",description:"An enum of the possible transaction payloads",contains:[{type:"TransactionPayload_EntryFunctionPayload"},{type:"TransactionPayload_ScriptPayload"},{type:"TransactionPayload_ModuleBundlePayload"},{type:"TransactionPayload_MultisigPayload"}]},rb={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"EntryFunctionPayload"}]},rw={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"ModuleBundlePayload"}]},rS={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"MultisigPayload"}]},rA={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"ScriptPayload"}]},rE={description:"Information telling which batch submission transactions failed",properties:{error:{type:"AptosError",isRequired:!0},transaction_index:{type:"number",description:"The index of which transaction failed, same as submission order",isRequired:!0,format:"uint64"}}},rR={description:`Batch transaction submission result

    Tells which transactions failed`,properties:{transaction_failures:{type:"array",contains:{type:"TransactionsBatchSingleSubmissionFailure"},isRequired:!0}}},rq={type:"one-of",description:"An enum representing the different transaction signatures available",contains:[{type:"TransactionSignature_Ed25519Signature"},{type:"TransactionSignature_MultiEd25519Signature"},{type:"TransactionSignature_MultiAgentSignature"}]},rU={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"Ed25519Signature"}]},rz={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"MultiAgentSignature"}]},rx={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"MultiEd25519Signature"}]},rB={type:"string",description:`A string containing a 128-bit unsigned integer.

    We represent u128 values as a string to ensure compatibility with languages such
    as JavaScript that do not parse u128s in JSON natively.
    `,format:"uint128"},rk={type:"string",description:`A string containing a 256-bit unsigned integer.

    We represent u256 values as a string to ensure compatibility with languages such
    as JavaScript that do not parse u256s in JSON natively.
    `,format:"uint256"},rC={type:"string",description:`A string containing a 64-bit unsigned integer.

    We represent u64 values as a string to ensure compatibility with languages such
    as JavaScript that do not parse u64s in JSON natively.
    `,format:"uint64"},rI={description:"A transaction submitted by a user to change the state of the blockchain",properties:{version:{type:"U64",isRequired:!0},hash:{type:"HashValue",isRequired:!0},state_change_hash:{type:"HashValue",isRequired:!0},event_root_hash:{type:"HashValue",isRequired:!0},state_checkpoint_hash:{type:"HashValue"},gas_used:{type:"U64",isRequired:!0},success:{type:"boolean",description:"Whether the transaction was successful",isRequired:!0},vm_status:{type:"string",description:"The VM status of the transaction, can tell useful information in a failure",isRequired:!0},accumulator_root_hash:{type:"HashValue",isRequired:!0},changes:{type:"array",contains:{type:"WriteSetChange"},isRequired:!0},sender:{type:"Address",isRequired:!0},sequence_number:{type:"U64",isRequired:!0},max_gas_amount:{type:"U64",isRequired:!0},gas_unit_price:{type:"U64",isRequired:!0},expiration_timestamp_secs:{type:"U64",isRequired:!0},payload:{type:"TransactionPayload",isRequired:!0},signature:{type:"TransactionSignature"},events:{type:"array",contains:{type:"Event"},isRequired:!0},timestamp:{type:"U64",isRequired:!0}}},r$={description:"An event from a transaction with a version",properties:{version:{type:"U64",isRequired:!0},guid:{type:"EventGuid",isRequired:!0},sequence_number:{type:"U64",isRequired:!0},type:{type:"MoveType",isRequired:!0},data:{description:"The JSON representation of the event",properties:{},isRequired:!0}}},rM={description:"View request for the Move View Function API",properties:{function:{type:"EntryFunctionId",isRequired:!0},type_arguments:{type:"array",contains:{type:"MoveType"},isRequired:!0},arguments:{type:"array",contains:{properties:{}},isRequired:!0}}},rP={description:"Write a new module or update an existing one",properties:{address:{type:"Address",isRequired:!0},state_key_hash:{type:"string",description:"State key hash",isRequired:!0},data:{type:"MoveModuleBytecode",isRequired:!0}}},rN={description:"Write a resource or update an existing one",properties:{address:{type:"Address",isRequired:!0},state_key_hash:{type:"string",description:"State key hash",isRequired:!0},data:{type:"MoveResource",isRequired:!0}}},rH={type:"one-of",description:"The associated writeset with a payload",contains:[{type:"WriteSet_ScriptWriteSet"},{type:"WriteSet_DirectWriteSet"}]},rD={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"DirectWriteSet"}]},rO={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"ScriptWriteSet"}]},rW={type:"one-of",description:"A final state change of a transaction on a resource or module",contains:[{type:"WriteSetChange_DeleteModule"},{type:"WriteSetChange_DeleteResource"},{type:"WriteSetChange_DeleteTableItem"},{type:"WriteSetChange_WriteModule"},{type:"WriteSetChange_WriteResource"},{type:"WriteSetChange_WriteTableItem"}]},rV={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"DeleteModule"}]},rL={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"DeleteResource"}]},rF={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"DeleteTableItem"}]},rG={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"WriteModule"}]},rj={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"WriteResource"}]},rK={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"WriteTableItem"}]},rJ={description:"A writeset payload, used only for genesis",properties:{write_set:{type:"WriteSet",isRequired:!0}}},rZ={description:"Change set to write a table item",properties:{state_key_hash:{type:"string",isRequired:!0},handle:{type:"HexEncodedBytes",isRequired:!0},key:{type:"HexEncodedBytes",isRequired:!0},value:{type:"HexEncodedBytes",isRequired:!0},data:{type:"DecodedTableData"}}},rX=i(83941);function rQ(e,t,i){if(!(null==t?void 0:t.includes(typeof e)))throw Error(i||`Invalid arg: ${e} type should be ${t instanceof Array?t.join(" or "):t}`)}function rY(e){if(rQ(e,["boolean","string"]),"boolean"==typeof e)return e;if("true"===e)return!0;if("false"===e)return!1;throw Error("Invalid boolean string.")}function r0(e){if(rQ(e,["number","string"]),"number"==typeof e)return e;let t=Number.parseInt(e,10);if(Number.isNaN(t))throw Error("Invalid number string.");return t}function r1(e){return rQ(e,["number","bigint","string"]),BigInt(e)}function r2(e,t,i){if(t instanceof ez){i.serializeBool(rY(e));return}if(t instanceof ex){i.serializeU8(r0(e));return}if(t instanceof eB){i.serializeU16(r0(e));return}if(t instanceof ek){i.serializeU32(r0(e));return}if(t instanceof eC){i.serializeU64(r1(e));return}if(t instanceof eI){i.serializeU128(r1(e));return}if(t instanceof e$){i.serializeU256(r1(e));return}if(t instanceof eM){let r;if("string"==typeof e||e instanceof P)r=ep.fromHex(e);else if(e instanceof ep)r=e;else throw Error("Invalid account address.");r.serialize(i);return}if(t instanceof eN){if(t.value instanceof ex){if(e instanceof Uint8Array){i.serializeBytes(e);return}if("string"==typeof e){i.serializeStr(e);return}}if(!Array.isArray(e))throw Error("Invalid vector args.");i.serializeU32AsUleb128(e.length),e.forEach(e=>r2(e,t.value,i));return}if(t instanceof eH){let{address:s,module_name:n,name:a}=t.value;if("0x1::string::String"!=`${P.fromUint8Array(s.address).toShortString()}::${n.value}::${a.value}`)throw Error("The only supported struct arg is of type 0x1::string::String");rQ(e,["string"]),i.serializeStr(e);return}throw Error("Unsupported arg type.")}var r8=class{constructor(e,t){this.rawTxnBuilder=t,this.signingFunction=e}build(e,t,i){if(!this.rawTxnBuilder)throw Error("this.rawTxnBuilder doesn't exist.");return this.rawTxnBuilder.build(e,t,i)}static getSigningMessage(e){let t=rX.sha3_256.create();if(e instanceof ej)t.update("APTOS::RawTransaction");else if(e instanceof e5)t.update("APTOS::RawTransactionWithData");else throw Error("Unknown transaction type.");let i=t.digest(),r=ee(e),s=new Uint8Array(i.length+r.length);return s.set(i),s.set(r,i.length),s}},r5=class extends r8{constructor(e,t,i){super(e,i),this.publicKey=t}rawToSigned(e){let t=r8.getSigningMessage(e),i=this.signingFunction(t),r=new eb(new ey(this.publicKey),i);return new e2(e,r)}sign(e){return ee(this.rawToSigned(e))}},r6=class extends r8{constructor(e,t){super(e),this.publicKey=t}rawToSigned(e){let t=r8.getSigningMessage(e),i=this.signingFunction(t),r=new ew(this.publicKey,i);return new e2(e,r)}sign(e){return ee(this.rawToSigned(e))}},r3=class{constructor(e,t){this.abiMap=new Map,e.forEach(e=>{let t;let i=new Z(e),r=ty.deserialize(i);if(r instanceof tf){let{address:s,name:n}=r.module_name;t=`${P.fromUint8Array(s.address).toShortString()}::${n.value}::${r.name}`}else t=r.name;if(this.abiMap.has(t))throw Error("Found conflicting ABI interfaces");this.abiMap.set(t,r)}),this.builderConfig={maxGasAmount:BigInt(2e5),expSecFromNow:20,...t}}static toBCSArgs(e,t){if(e.length!==t.length)throw Error("Wrong number of args provided.");return t.map((t,i)=>{let r=new K;return r2(t,e[i].type_tag,r),r.getBytes()})}static toTransactionArguments(e,t){if(e.length!==t.length)throw Error("Wrong number of args provided.");return t.map((t,i)=>(function(e,t){if(t instanceof ez)return new tu(rY(e));if(t instanceof ex)return new tt(r0(e));if(t instanceof eB)return new ti(r0(e));if(t instanceof ek)return new tr(r0(e));if(t instanceof eC)return new ts(r1(e));if(t instanceof eI)return new tn(r1(e));if(t instanceof e$)return new ta(r1(e));if(t instanceof eM){let i;if("string"==typeof e||e instanceof P)i=ep.fromHex(e);else if(e instanceof ep)i=e;else throw Error("Invalid account address.");return new to(i)}if(t instanceof eN&&t.value instanceof ex){if(!(e instanceof Uint8Array))throw Error(`${e} should be an instance of Uint8Array`);return new tl(e)}throw Error("Unknown type for TransactionArgument.")})(t,e[i].type_tag))}setSequenceNumber(e){this.builderConfig.sequenceNumber=BigInt(e)}buildTransactionPayload(e,t,i){let r;let s=t.map(e=>new eF(e).parseTypeTag());if(!this.abiMap.has(e))throw Error(`Cannot find function: ${e}`);let n=this.abiMap.get(e);if(n instanceof tf){let a=r3.toBCSArgs(n.args,i);r=new e4(new eJ(n.module_name,new eq(n.name),s,a))}else if(n instanceof tg){let o=r3.toTransactionArguments(n.args,i);r=new e3(new eK(n.code,s,o))}else throw Error("Unknown ABI format.");return r}build(e,t,i){let{sender:r,sequenceNumber:s,gasUnitPrice:n,maxGasAmount:a,expSecFromNow:o,chainId:l}=this.builderConfig;if(!n)throw Error("No gasUnitPrice provided.");let u=r instanceof ep?r:ep.fromHex(r),c=BigInt(Math.floor(Date.now()/1e3)+Number(o)),d=this.buildTransactionPayload(e,t,i);if(d)return new ej(u,BigInt(s),d,BigInt(a),BigInt(n),c,new e7(Number(l)));throw Error("Invalid ABI.")}},r4=class{constructor(e,t){this.aptosClient=e,this.builderConfig=t}async fetchABI(e){let t=await this.aptosClient.getAccountModules(e),i=t.map(e=>e.abi).flatMap(e=>e.exposed_functions.filter(e=>e.is_entry).map(t=>({fullName:`${e.address}::${e.name}::${t.name}`,...t}))),r=new Map;return i.forEach(e=>{r.set(e.fullName,e)}),r}async build(e,t,i){e=e.replace(/^0[xX]0*/g,"0x");let r=e.split("::");if(3!==r.length)throw Error("'func' needs to be a fully qualified function name in format <address>::<module>::<function>, e.g. 0x1::coins::transfer");let[s,n]=e.split("::"),a=await this.fetchABI(s);if(!a.has(e))throw Error(`${e} doesn't exist.`);let o=a.get(e),l=o.params.filter(e=>"signer"!==e&&"&signer"!==e),u=l.map((e,i)=>new th(`var${i}`,new eF(e,t).parseTypeTag())),c=new tf(o.name,eY.fromStr(`${s}::${n}`),"",o.generic_type_params.map((e,t)=>new tp(`${t}`)),u),{sender:d,...p}=this.builderConfig,h=d instanceof ep?P.fromUint8Array(d.address):d,[{sequence_number:y},g,{gas_estimate:f}]=await Promise.all([(null==p?void 0:p.sequenceNumber)?Promise.resolve({sequence_number:null==p?void 0:p.sequenceNumber}):this.aptosClient.getAccount(h),(null==p?void 0:p.chainId)?Promise.resolve(null==p?void 0:p.chainId):this.aptosClient.getChainId(),(null==p?void 0:p.gasUnitPrice)?Promise.resolve({gas_estimate:null==p?void 0:p.gasUnitPrice}):this.aptosClient.estimateGasPrice()]),m=new r3([ee(c)],{sender:d,sequenceNumber:y,chainId:g,gasUnitPrice:BigInt(f),...p});return m.build(e,t,i)}};f([C({ttlMs:6e5,hashFunction:void 0})],r4.prototype,"fetchABI",1);var r9=class{constructor(e,t,i=!1){if(!e)throw Error("Node URL cannot be empty.");let r=null==t?{}:{...t};if(i)this.nodeUrl=e;else{let s;this.nodeUrl=((s=`${e}`).endsWith("/")&&(s=s.substring(0,s.length-1)),s.endsWith("/v1")||(s=`${s}/v1`),s)}r.BASE=this.nodeUrl,(null==t?void 0:t.WITH_CREDENTIALS)===!1?r.WITH_CREDENTIALS=!1:r.WITH_CREDENTIALS=!0,this.client=new ip(r)}async getAccount(e){return this.client.accounts.getAccount(P.ensure(e).hex())}async getAccountTransactions(e,t){var i;return this.client.transactions.getAccountTransactions(P.ensure(e).hex(),null==(i=null==t?void 0:t.start)?void 0:i.toString(),null==t?void 0:t.limit)}async getAccountModules(e,t){let i=this.client.accounts.getAccountModules.bind({httpRequest:this.client.request}),r=await N(i,e,1e3,t);return r}async getAccountModule(e,t,i){var r;return this.client.accounts.getAccountModule(P.ensure(e).hex(),t,null==(r=null==i?void 0:i.ledgerVersion)?void 0:r.toString())}async getAccountResources(e,t){let i=this.client.accounts.getAccountResources.bind({httpRequest:this.client.request}),r=await N(i,e,9999,t);return r}async getAccountResource(e,t,i){var r;return this.client.accounts.getAccountResource(P.ensure(e).hex(),t,null==(r=null==i?void 0:i.ledgerVersion)?void 0:r.toString())}static generateBCSTransaction(e,t){let i=new r5(t=>{let i=e.signBuffer(t);return new W.Ed25519Signature(i.toUint8Array())},e.pubKey().toUint8Array());return i.sign(t)}static generateBCSSimulation(e,t){let i=new r5(e=>{let t=new Uint8Array(64);return new W.Ed25519Signature(t)},e.pubKey().toUint8Array());return i.sign(t)}async generateTransaction(e,t,i){let r={sender:e};if((null==i?void 0:i.sequence_number)&&(r.sequenceNumber=i.sequence_number),(null==i?void 0:i.gas_unit_price)&&(r.gasUnitPrice=i.gas_unit_price),(null==i?void 0:i.max_gas_amount)&&(r.maxGasAmount=i.max_gas_amount),null==i?void 0:i.expiration_timestamp_secs){let s=Number.parseInt(i.expiration_timestamp_secs,10);r.expSecFromNow=s-Math.floor(Date.now()/1e3)}let n=new r4(this,r);return n.build(t.function,t.type_arguments,t.arguments)}async signTransaction(e,t){return Promise.resolve(r9.generateBCSTransaction(e,t))}async getEventsByCreationNumber(e,t,i){var r;return this.client.events.getEventsByCreationNumber(P.ensure(e).hex(),t.toString(),null==(r=null==i?void 0:i.start)?void 0:r.toString(),null==i?void 0:i.limit)}async getEventsByEventHandle(e,t,i,r){var s;return this.client.events.getEventsByEventHandle(P.ensure(e).hex(),t,i,null==(s=null==r?void 0:r.start)?void 0:s.toString(),null==r?void 0:r.limit)}async submitTransaction(e){return this.submitSignedBCSTransaction(e)}async simulateTransaction(e,t,i){let r;if(e instanceof tw)r=r9.generateBCSSimulation(e,t);else if(e instanceof em){let s=new r6(()=>{let{threshold:t}=e,i=[],r=[];for(let s=0;s<t;s+=1)i.push(s),r.push(new W.Ed25519Signature(new Uint8Array(64)));let n=W.MultiEd25519Signature.createBitmap(i);return new W.MultiEd25519Signature(r,n)},e);r=s.sign(t)}else{let n=new r5(()=>{let e=new Uint8Array(64);return new W.Ed25519Signature(e)},e.toBytes());r=n.sign(t)}return this.submitBCSSimulation(r,i)}async submitSignedBCSTransaction(e){return this.client.request.request({url:"/transactions",method:"POST",body:e,mediaType:"application/x.aptos.signed_transaction+bcs"})}async submitBCSSimulation(e,t){var i,r,s;let n={estimate_gas_unit_price:null!=(i=null==t?void 0:t.estimateGasUnitPrice)&&i,estimate_max_gas_amount:null!=(r=null==t?void 0:t.estimateMaxGasAmount)&&r,estimate_prioritized_gas_unit_price:null!=(s=null==t?void 0:t.estimatePrioritizedGasUnitPrice)&&s};return this.client.request.request({url:"/transactions/simulate",query:n,method:"POST",body:e,mediaType:"application/x.aptos.signed_transaction+bcs"})}async getTransactions(e){var t;return this.client.transactions.getTransactions(null==(t=null==e?void 0:e.start)?void 0:t.toString(),null==e?void 0:e.limit)}async getTransactionByHash(e){return this.client.transactions.getTransactionByHash(e)}async getTransactionByVersion(e){return this.client.transactions.getTransactionByVersion(e.toString())}async transactionPending(e){try{let t=await this.client.transactions.getTransactionByHash(e);return"pending_transaction"===t.type}catch(i){if((null==i?void 0:i.status)===404)return!0;throw i}}async waitForTransactionWithResult(e,t){var i,r;let s;let n=null!=(i=null==t?void 0:t.timeoutSecs)?i:20,a=null!=(r=null==t?void 0:t.checkSuccess)&&r,o=!0,l=0;for(;o&&!(l>=n);){try{if(s=await this.client.transactions.getTransactionByHash(e),!(o="pending_transaction"===s.type))break}catch(d){let u=d instanceof tL,c=u&&404!==d.status&&d.status>=400&&d.status<500;if(!u||c)throw d}await B(1e3),l+=1}if(void 0===s)throw Error(`Waiting for transaction ${e} failed`);if(o)throw new st(`Waiting for transaction ${e} timed out after ${n} seconds`,s);if(!a)return s;if(!(null==s?void 0:s.success))throw new si(`Transaction ${e} committed to the blockchain but execution failed`,s);return s}async waitForTransaction(e,t){await this.waitForTransactionWithResult(e,t)}async getLedgerInfo(){return this.client.general.getLedgerInfo()}async getChainId(){let e=await this.getLedgerInfo();return e.chain_id}async getTableItem(e,t,i){var r;let s=await this.client.tables.getTableItem(e,t,null==(r=null==i?void 0:i.ledgerVersion)?void 0:r.toString());return s}async generateRawTransaction(e,t,i){let[{sequence_number:r},s,{gas_estimate:n}]=await Promise.all([this.getAccount(e),this.getChainId(),(null==i?void 0:i.gasUnitPrice)?Promise.resolve({gas_estimate:i.gasUnitPrice}):this.estimateGasPrice()]),{maxGasAmount:a,gasUnitPrice:o,expireTimestamp:l}={maxGasAmount:BigInt(2e5),gasUnitPrice:BigInt(n),expireTimestamp:BigInt(Math.floor(Date.now()/1e3)+20),...i};return new W.RawTransaction(W.AccountAddress.fromHex(e),BigInt(r),t,a,o,l,new W.ChainId(s))}async generateSignSubmitTransaction(e,t,i){let r=await this.generateRawTransaction(e.address(),t,i),s=r9.generateBCSTransaction(e,r),n=await this.submitSignedBCSTransaction(s);return n.hash}async publishPackage(e,t,i,r){let s=new K;X(i,s);let n=new W.TransactionPayloadEntryFunction(W.EntryFunction.natural("0x1::code","publish_package_txn",[],[el(t),s.getBytes()]));return this.generateSignSubmitTransaction(e,n,r)}async generateSignSubmitWaitForTransaction(e,t,i){let r=await this.generateSignSubmitTransaction(e,t,i);return this.waitForTransactionWithResult(r,i)}async estimateGasPrice(){return this.client.transactions.estimateGasPrice()}async estimateMaxGasAmount(e){let t=`0x1::coin::CoinStore<${k}>`,[{gas_estimate:i},r]=await Promise.all([this.estimateGasPrice(),this.getAccountResources(e)]),s=r.find(e=>e.type===t),n=BigInt(s.data.coin.value);return n/BigInt(i)}async rotateAuthKeyEd25519(e,t,i){let{sequence_number:r,authentication_key:s}=await this.getAccount(e.address()),n=new tw(t),a=new W.RotationProofChallenge(W.AccountAddress.CORE_CODE_ADDRESS,"account","RotationProofChallenge",BigInt(r),W.AccountAddress.fromHex(e.address()),new W.AccountAddress(new P(s).toUint8Array()),n.pubKey().toUint8Array()),o=P.fromUint8Array(ee(a)),l=e.signHexString(o),u=n.signHexString(o),c=new W.TransactionPayloadEntryFunction(W.EntryFunction.natural("0x1::account","rotate_authentication_key",[],[ei(0),el(e.pubKey().toUint8Array()),ei(0),el(n.pubKey().toUint8Array()),el(l.toUint8Array()),el(u.toUint8Array())])),d=await this.generateRawTransaction(e.address(),c,i),p=r9.generateBCSTransaction(e,d);return this.submitSignedBCSTransaction(p)}async lookupOriginalAddress(e){let t=await this.getAccountResource("0x1","0x1::account::OriginatingAddress"),{address_map:{handle:i}}=t.data,r=await this.getTableItem(i,{key_type:"address",value_type:"address",key:P.ensure(e).hex()});return new P(r)}async getBlockByHeight(e,t){return this.client.blocks.getBlockByHeight(e,t)}async getBlockByVersion(e,t){return this.client.blocks.getBlockByVersion(e,t)}async view(e,t){return this.client.view.view(e,t)}clearCache(e){!function(e){let t=new Set;for(let i of e){let r=I.get(i);if(r)for(let s of r)t.has(s)||(s.clear(),t.add(s))}t.size}(e)}},r7=r9;f([sr],r7.prototype,"getAccount",1),f([sr],r7.prototype,"getAccountTransactions",1),f([sr],r7.prototype,"getAccountModules",1),f([sr],r7.prototype,"getAccountModule",1),f([sr],r7.prototype,"getAccountResources",1),f([sr],r7.prototype,"getAccountResource",1),f([sr],r7.prototype,"getEventsByCreationNumber",1),f([sr],r7.prototype,"getEventsByEventHandle",1),f([sr],r7.prototype,"submitSignedBCSTransaction",1),f([sr],r7.prototype,"submitBCSSimulation",1),f([sr],r7.prototype,"getTransactions",1),f([sr],r7.prototype,"getTransactionByHash",1),f([sr],r7.prototype,"getTransactionByVersion",1),f([sr],r7.prototype,"getLedgerInfo",1),f([C()],r7.prototype,"getChainId",1),f([sr],r7.prototype,"getTableItem",1),f([sr,C({ttlMs:3e5,tags:["gas_estimates"]})],r7.prototype,"estimateGasPrice",1),f([sr],r7.prototype,"estimateMaxGasAmount",1),f([sr],r7.prototype,"getBlockByHeight",1),f([sr],r7.prototype,"getBlockByVersion",1),f([sr],r7.prototype,"view",1);var se=class extends Error{constructor(e,t,i,r){super(t),this.status=e,this.message=t,this.errorCode=i,this.vmErrorCode=r}},st=class extends Error{constructor(e,t){super(e),this.lastSubmittedTransaction=t}},si=class extends Error{constructor(e,t){super(e),this.transaction=t}};function sr(e,t,i){let r=i.value;return i.value=async function(...e){var t,i;try{let s=await r.apply(this,[...e]);return s}catch(n){if(n instanceof tL)throw new se(n.status,JSON.stringify({message:n.message,...n.body}),null==(t=n.body)?void 0:t.error_code,null==(i=n.body)?void 0:i.vm_error_code);throw n}},i}var ss=class{constructor(e,t,i=!1){var r;let s=null,n=null;if("object"==typeof e&&void 0!==(r=e).fullnodeUrl&&"string"==typeof r.fullnodeUrl&&void 0!==r.indexerUrl&&"string"==typeof r.indexerUrl?(s=e.fullnodeUrl,n=e.indexerUrl,this.network="CUSTOM"):(s=D[e],n=H[e],this.network=e),!s||!n)throw Error("network is not provided");this.aptosClient=new r7(s,t,i),this.indexerClient=new tH(n)}};function sn(e,t,i){Object.getOwnPropertyNames(t.prototype).forEach(r=>{let s=Object.getOwnPropertyDescriptor(t.prototype,r);s&&(s.value=function(...e){return this[i][r](...e)},Object.defineProperty(e.prototype,r,s))})}sn(ss,r7,"aptosClient"),sn(ss,tH,"indexerClient");var sa=class{constructor(e,t){this.type=e,this.value=t}},so=class{constructor(){this.data={}}setProperty(e,t){this.data[e]=t}};function sl(e){return"string"===e||"String"===e?new eH(eO):new eF(e).parseTypeTag()}function su(e,t){if(e.length!==t.length)throw Error("Length of property values and types not match");let i=[];return t.forEach((t,r)=>{try{let s=sl(t),n=new K;r2(e[r],s,n),i.push(n.getBytes())}catch(a){i.push(new TextEncoder().encode(e[r]))}}),i}function sc(e,t){if(!e||!t)throw Error("value or type can not be empty");try{let i=sl(t),r=new K;return r2(e,i,r),r.getBytes()}catch(s){return new TextEncoder().encode(e)}}function sd(e){let t=e.map.data,i=new so;return t.forEach(e=>{let{key:t}=e,r=e.value.value,s=e.value.type,n=sl(s),a=sp(n,r),o=new sa(s,a);i.setProperty(t,o)}),i}function sp(e,t){let i=new Z(new P(t).toUint8Array());return e instanceof ex?i.deserializeU8().toString():e instanceof eC?i.deserializeU64().toString():e instanceof eI?i.deserializeU128().toString():e instanceof ez?i.deserializeBool()?"true":"false":e instanceof eM?P.fromUint8Array(i.deserializeFixedBytes(32)).hex():e instanceof eH&&e.isStringTypeTag()?i.deserializeStr():t}var sh={};h(sh,{PropertyMap:()=>so,PropertyValue:()=>sa,Token:()=>sg,TokenData:()=>sy});var sy=class{constructor(e,t,i,r,s,n,a,o){this.collection=e,this.description=t,this.name=i,this.maximum=r,this.supply=s,this.uri=n,this.default_properties=sd(a),this.mutability_config=o}},sg=class{constructor(e,t,i){this.id=e,this.amount=t,this.token_properties=sd(i)}},sf=class{constructor(e){this.aptosClient=e}async createCollection(e,t,i,r,s=F,n){let a=new r4(this.aptosClient,{sender:e.address(),...n}),o=await a.build("0x3::token::create_collection_script",[],[t,i,r,s,[!1,!1,!1]]),l=r7.generateBCSTransaction(e,o),u=await this.aptosClient.submitSignedBCSTransaction(l);return u.hash}async createToken(e,t,i,r,s,n,a=F,o=e.address(),l=0,u=0,c=[],d=[],p=[],h){let y=new r4(this.aptosClient,{sender:e.address(),...h}),g=await y.build("0x3::token::create_token_script",[],[t,i,r,s,a,n,o,l,u,[!1,!1,!1,!1,!1],c,su(d,p),p]),f=r7.generateBCSTransaction(e,g),m=await this.aptosClient.submitSignedBCSTransaction(f);return m.hash}async createTokenWithMutabilityConfig(e,t,i,r,s,n,a=F,o=e.address(),l=0,u=0,c=[],d=[],p=[],h=[!1,!1,!1,!1,!1],y){let g=new r4(this.aptosClient,{sender:e.address(),...y}),f=await g.build("0x3::token::create_token_script",[],[t,i,r,s,a,n,o,l,u,h,c,d,p]),m=r7.generateBCSTransaction(e,f),_=await this.aptosClient.submitSignedBCSTransaction(m);return _.hash}async offerToken(e,t,i,r,s,n,a=0,o){let l=new r4(this.aptosClient,{sender:e.address(),...o}),u=await l.build("0x3::token_transfers::offer_script",[],[t,i,r,s,a,n]),c=r7.generateBCSTransaction(e,u),d=await this.aptosClient.submitSignedBCSTransaction(c);return d.hash}async claimToken(e,t,i,r,s,n=0,a){let o=new r4(this.aptosClient,{sender:e.address(),...a}),l=await o.build("0x3::token_transfers::claim_script",[],[t,i,r,s,n]),u=r7.generateBCSTransaction(e,l),c=await this.aptosClient.submitSignedBCSTransaction(u);return c.hash}async cancelTokenOffer(e,t,i,r,s,n=0,a){let o=new r4(this.aptosClient,{sender:e.address(),...a}),l=await o.build("0x3::token_transfers::cancel_offer_script",[],[t,i,r,s,n]),u=r7.generateBCSTransaction(e,l),c=await this.aptosClient.submitSignedBCSTransaction(u);return c.hash}async directTransferToken(e,t,i,r,s,n,a=0,o){let l=new r4(this.aptosClient,{sender:e.address(),...o}),u=await l.build("0x3::token::direct_transfer_script",[],[i,r,s,a,n]),c=new W.MultiAgentRawTransaction(u,[W.AccountAddress.fromHex(t.address())]),d=new W.Ed25519Signature(e.signBuffer(r8.getSigningMessage(c)).toUint8Array()),p=new W.AccountAuthenticatorEd25519(new W.Ed25519PublicKey(e.signingKey.publicKey),d),h=new W.Ed25519Signature(t.signBuffer(r8.getSigningMessage(c)).toUint8Array()),y=new W.AccountAuthenticatorEd25519(new W.Ed25519PublicKey(t.signingKey.publicKey),h),g=new W.TransactionAuthenticatorMultiAgent(p,[W.AccountAddress.fromHex(t.address())],[y]),f=ee(new W.SignedTransaction(u,g)),m=await this.aptosClient.submitSignedBCSTransaction(f);return m.hash}async optInTokenTransfer(e,t,i){let r=new r4(this.aptosClient,{sender:e.address(),...i}),s=await r.build("0x3::token::opt_in_direct_transfer",[],[t]),n=r7.generateBCSTransaction(e,s),a=await this.aptosClient.submitSignedBCSTransaction(n);return a.hash}async transferWithOptIn(e,t,i,r,s,n,a,o){let l=new r4(this.aptosClient,{sender:e.address(),...o}),u=await l.build("0x3::token::transfer_with_opt_in",[],[t,i,r,s,n,a]),c=r7.generateBCSTransaction(e,u),d=await this.aptosClient.submitSignedBCSTransaction(c);return d.hash}async burnByCreator(e,t,i,r,s,n,a){let o=new r4(this.aptosClient,{sender:e.address(),...a}),l=await o.build("0x3::token::burn_by_creator",[],[t,i,r,s,n]),u=r7.generateBCSTransaction(e,l),c=await this.aptosClient.submitSignedBCSTransaction(u);return c.hash}async burnByOwner(e,t,i,r,s,n,a){let o=new r4(this.aptosClient,{sender:e.address(),...a}),l=await o.build("0x3::token::burn",[],[t,i,r,s,n]),u=r7.generateBCSTransaction(e,l),c=await this.aptosClient.submitSignedBCSTransaction(u);return c.hash}async mutateTokenProperties(e,t,i,r,s,n,a,o,l,u,c){let d=new r4(this.aptosClient,{sender:e.address(),...c}),p=await d.build("0x3::token::mutate_token_properties",[],[t,i,r,s,n,a,o,l,u]),h=r7.generateBCSTransaction(e,p),y=await this.aptosClient.submitSignedBCSTransaction(h);return y.hash}async getCollectionData(e,t){let i=await this.aptosClient.getAccountResources(e),r=i.find(e=>"0x3::token::Collections"===e.type),{handle:s}=r.data.collection_data,n=await this.aptosClient.getTableItem(s,{key_type:"0x1::string::String",value_type:"0x3::token::CollectionData",key:t});return n}async getTokenData(e,t,i){let r=e instanceof P?e.hex():e,s=await this.aptosClient.getAccountResource(r,"0x3::token::Collections"),{handle:n}=s.data.token_data,a=await this.aptosClient.getTableItem(n,{key_type:"0x3::token::TokenDataId",value_type:"0x3::token::TokenData",key:{creator:r,collection:t,name:i}});return new sy(a.collection,a.description,a.name,a.maximum,a.supply,a.uri,a.default_properties,a.mutability_config)}async getToken(e,t,i,r="0"){let s={creator:e instanceof P?e.hex():e,collection:t,name:i};return this.getTokenForAccount(e,{token_data_id:s,property_version:r})}async getTokenForAccount(e,t){let i=await this.aptosClient.getAccountResource(e instanceof P?e.hex():e,"0x3::token::TokenStore"),{handle:r}=i.data.tokens;try{let s=await this.aptosClient.getTableItem(r,{key_type:"0x3::token::TokenId",value_type:"0x3::token::Token",key:t});return new sg(s.id,s.amount,s.token_properties)}catch(n){if((null==n?void 0:n.status)===404)return{id:t,amount:"0",token_properties:new so};return n}}},sm={BOOLEAN:"bool",U8:"u8",U16:"u16",U32:"u32",U64:"u64",U128:"u128",U256:"u256",ADDRESS:"address",VECTOR:"vector<u8>",STRING:"string"},s_=class{constructor(e){this.tokenType="0x4::token::Token",this.provider=e}async submitTransaction(e,t,i,r,s){let n=new r4(this.provider,{sender:e.address(),...s}),a=await n.build(`0x4::aptos_token::${t}`,i,r),o=r7.generateBCSTransaction(e,a),l=await this.provider.submitSignedBCSTransaction(o);return l.hash}async createCollection(e,t,i,r,s=F,n,a){var o,l,u,c,d,p,h,y,g,f,m;return this.submitTransaction(e,"create_collection",[],[t,s,i,r,null==(o=null==n?void 0:n.mutableDescription)||o,null==(l=null==n?void 0:n.mutableRoyalty)||l,null==(u=null==n?void 0:n.mutableURI)||u,null==(c=null==n?void 0:n.mutableTokenDescription)||c,null==(d=null==n?void 0:n.mutableTokenName)||d,null==(p=null==n?void 0:n.mutableTokenProperties)||p,null==(h=null==n?void 0:n.mutableTokenURI)||h,null==(y=null==n?void 0:n.tokensBurnableByCreator)||y,null==(g=null==n?void 0:n.tokensFreezableByCreator)||g,null!=(f=null==n?void 0:n.royaltyNumerator)?f:0,null!=(m=null==n?void 0:n.royaltyDenominator)?m:0],a)}async mint(e,t,i,r,s,n=[],a=[],o=[],l){return this.submitTransaction(e,"mint",[],[t,i,r,s,n,a,su(o,a)],l)}async mintSoulBound(e,t,i,r,s,n,a=[],o=[],l=[],u){return this.submitTransaction(e,"mint_soul_bound",[],[t,i,r,s,a,o,su(l,o),n.address().hex()],u)}async burnToken(e,t,i,r){return this.submitTransaction(e,"burn",[i||this.tokenType],[P.ensure(t).hex()],r)}async freezeTokenTransafer(e,t,i,r){return this.submitTransaction(e,"freeze_transfer",[i||this.tokenType],[P.ensure(t).hex()],r)}async unfreezeTokenTransafer(e,t,i,r){return this.submitTransaction(e,"unfreeze_transfer",[i||this.tokenType],[P.ensure(t).hex()],r)}async setTokenDescription(e,t,i,r,s){return this.submitTransaction(e,"set_description",[r||this.tokenType],[P.ensure(t).hex(),i],s)}async setTokenName(e,t,i,r,s){return this.submitTransaction(e,"set_name",[r||this.tokenType],[P.ensure(t).hex(),i],s)}async setTokenURI(e,t,i,r,s){return this.submitTransaction(e,"set_uri",[r||this.tokenType],[P.ensure(t).hex(),i],s)}async addTokenProperty(e,t,i,r,s,n,a){return this.submitTransaction(e,"add_property",[n||this.tokenType],[P.ensure(t).hex(),i,sm[r],sc(s,sm[r])],a)}async removeTokenProperty(e,t,i,r,s){return this.submitTransaction(e,"remove_property",[r||this.tokenType],[P.ensure(t).hex(),i],s)}async updateTokenProperty(e,t,i,r,s,n,a){return this.submitTransaction(e,"update_property",[n||this.tokenType],[P.ensure(t).hex(),i,sm[r],sc(s,sm[r])],a)}async addTypedProperty(e,t,i,r,s,n,a){return this.submitTransaction(e,"add_typed_property",[n||this.tokenType,sm[r]],[P.ensure(t).hex(),i,s],a)}async updateTypedProperty(e,t,i,r,s,n,a){return this.submitTransaction(e,"update_typed_property",[n||this.tokenType,sm[r]],[P.ensure(t).hex(),i,s],a)}async transferTokenOwnership(e,t,i,r,s){let n=new r4(this.provider.aptosClient,{sender:e.address(),...s}),a=await n.build("0x1::object::transfer",[r||this.tokenType],[P.ensure(t).hex(),P.ensure(i).hex()]),o=r7.generateBCSTransaction(e,a),l=await this.provider.aptosClient.submitSignedBCSTransaction(o);return l.hash}},sv=class{constructor(e){this.aptosClient=e}async transfer(e,t,i,r){var s;let n=null!=(s=null==r?void 0:r.coinType)?s:k,a=(null==r?void 0:r.createReceiverIfMissing)?"0x1::aptos_account::transfer_coins":"0x1::coin::transfer",o=tS(t),l=new r4(this.aptosClient,{sender:e.address(),...r}),u=await l.build(a,[n],[o,i]),c=r7.generateBCSTransaction(e,u),d=await this.aptosClient.submitSignedBCSTransaction(c);return d.hash}async checkBalance(e,t){var i;let r=null!=(i=null==t?void 0:t.coinType)?i:k,s=`0x1::coin::CoinStore<${r}>`,n=tS(e),a=await this.aptosClient.getAccountResource(n,s);return BigInt(a.data.coin.value)}},sT=class extends r7{constructor(e,t,i){var r,s,n;if(super(e,i),!t)throw Error("Faucet URL cannot be empty.");this.faucetRequester=new ir({BASE:t,VERSION:null!=(r=null==i?void 0:i.VERSION)?r:"0.1.0",WITH_CREDENTIALS:null!=(s=null==i?void 0:i.WITH_CREDENTIALS)&&s,CREDENTIALS:null!=(n=null==i?void 0:i.CREDENTIALS)?n:"include",TOKEN:null==i?void 0:i.TOKEN,USERNAME:null==i?void 0:i.USERNAME,PASSWORD:null==i?void 0:i.PASSWORD,HEADERS:null==i?void 0:i.HEADERS,ENCODE_PATH:null==i?void 0:i.ENCODE_PATH})}async fundAccount(e,t,i=20){let r=await this.faucetRequester.request({method:"POST",url:"/mint",query:{address:P.ensure(e).noPrefix(),amount:t}}),s=[];for(let n=0;n<r.length;n+=1){let a=r[n];s.push(this.waitForTransaction(a,{timeoutSecs:i}))}return await Promise.all(s),r}}}}]);