"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[8766],{59917:function(e,t,r){let i,n;r.r(t),r.d(t,{Account:function(){return N},AddressLookupTableAccount:function(){return eM},AddressLookupTableInstruction:function(){return rb},AddressLookupTableProgram:function(){return rk},Authorized:function(){return rB},BLOCKHASH_CACHE_TIMEOUT_MS:function(){return eF},BPF_LOADER_DEPRECATED_PROGRAM_ID:function(){return z},BPF_LOADER_PROGRAM_ID:function(){return eB},BpfLoader:function(){return eT},COMPUTE_BUDGET_INSTRUCTION_LAYOUTS:function(){return rw},ComputeBudgetInstruction:function(){return rS},ComputeBudgetProgram:function(){return r_},Connection:function(){return ry},Ed25519Program:function(){return rA},Enum:function(){return T},EpochSchedule:function(){return eK},FeeCalculatorLayout:function(){return eS},Keypair:function(){return rm},LAMPORTS_PER_SOL:function(){return rY},LOOKUP_TABLE_INSTRUCTION_LAYOUTS:function(){return rf},Loader:function(){return eE},Lockup:function(){return rT},MAX_SEED_LENGTH:function(){return L},Message:function(){return Q},MessageAccountKeys:function(){return V},MessageV0:function(){return ee},NONCE_ACCOUNT_LENGTH:function(){return e_},NonceAccount:function(){return eI},PACKET_DATA_SIZE:function(){return U},PUBLIC_KEY_LENGTH:function(){return O},PublicKey:function(){return K},SIGNATURE_LENGTH_IN_BYTES:function(){return G},SOLANA_SCHEMA:function(){return C},STAKE_CONFIG_ID:function(){return rE},STAKE_INSTRUCTION_LAYOUTS:function(){return rL},SYSTEM_INSTRUCTION_LAYOUTS:function(){return eP},SYSVAR_CLOCK_PUBKEY:function(){return ea},SYSVAR_EPOCH_SCHEDULE_PUBKEY:function(){return ec},SYSVAR_INSTRUCTIONS_PUBKEY:function(){return eu},SYSVAR_RECENT_BLOCKHASHES_PUBKEY:function(){return el},SYSVAR_RENT_PUBKEY:function(){return ed},SYSVAR_REWARDS_PUBKEY:function(){return eh},SYSVAR_SLOT_HASHES_PUBKEY:function(){return eg},SYSVAR_SLOT_HISTORY_PUBKEY:function(){return ep},SYSVAR_STAKE_HISTORY_PUBKEY:function(){return ey},Secp256k1Program:function(){return rv},SendTransactionError:function(){return eN},SolanaJSONRPCError:function(){return eU},SolanaJSONRPCErrorCode:function(){return ez},StakeAuthorizationLayout:function(){return rO},StakeInstruction:function(){return rC},StakeProgram:function(){return rW},Struct:function(){return B},SystemInstruction:function(){return ex},SystemProgram:function(){return ev},Transaction:function(){return en},TransactionExpiredBlockheightExceededError:function(){return M},TransactionExpiredNonceInvalidError:function(){return J},TransactionExpiredTimeoutError:function(){return j},TransactionInstruction:function(){return ei},TransactionMessage:function(){return es},TransactionStatus:function(){return n},VALIDATOR_INFO_KEY:function(){return rG},VERSION_PREFIX_MASK:function(){return q},VOTE_PROGRAM_ID:function(){return rJ},ValidatorInfo:function(){return rj},VersionedMessage:function(){return et},VersionedTransaction:function(){return eo},VoteAccount:function(){return rD},VoteAuthorizationLayout:function(){return rU},VoteInit:function(){return rK},VoteInstruction:function(){return rN},VoteProgram:function(){return rq},clusterApiUrl:function(){return r$},sendAndConfirmRawTransaction:function(){return rX},sendAndConfirmTransaction:function(){return em}});var s,o=r(48764),a=r(75113),c=r(13550),u=r.n(c),l=r(77191),d=r.n(l),h=r(17748),g=r(11633),p=r(39386),y=r(40475),m=r(53471),f=r(31198),b=r.n(f),k=r(66855),S=r(89062),w=r(85609),_=r(95085);let I=a.UN.utils.randomPrivateKey,A=()=>{let e=a.UN.utils.randomPrivateKey(),t=R(e),r=new Uint8Array(64);return r.set(e),r.set(t,32),{publicKey:t,secretKey:r}},R=a.UN.getPublicKey;function x(e){try{return a.UN.ExtendedPoint.fromHex(e),!0}catch{return!1}}let P=(e,t)=>a.UN.sign(e,t.slice(0,32)),v=a.UN.verify,E=e=>o.Buffer.isBuffer(e)?e:e instanceof Uint8Array?o.Buffer.from(e.buffer,e.byteOffset,e.byteLength):o.Buffer.from(e);class B{constructor(e){Object.assign(this,e)}encode(){return o.Buffer.from((0,g.serialize)(C,this))}static decode(e){return(0,g.deserialize)(C,this,e)}static decodeUnchecked(e){return(0,g.deserializeUnchecked)(C,this,e)}}class T extends B{constructor(e){if(super(e),this.enum="",1!==Object.keys(e).length)throw Error("Enum can only take single value");Object.keys(e).map(e=>{this.enum=e})}}let C=new Map,L=32,O=32,W=1;i=Symbol.toStringTag;class K extends B{constructor(e){if(super({}),this._bn=void 0,void 0!==e._bn)this._bn=e._bn;else{if("string"==typeof e){let t=d().decode(e);if(t.length!=O)throw Error("Invalid public key input");this._bn=new(u())(t)}else this._bn=new(u())(e);if(this._bn.byteLength()>O)throw Error("Invalid public key input")}}static unique(){let e=new K(W);return W+=1,new K(e.toBuffer())}equals(e){return this._bn.eq(e._bn)}toBase58(){return d().encode(this.toBytes())}toJSON(){return this.toBase58()}toBytes(){let e=this.toBuffer();return new Uint8Array(e.buffer,e.byteOffset,e.byteLength)}toBuffer(){let e=this._bn.toArrayLike(o.Buffer);if(e.length===O)return e;let t=o.Buffer.alloc(32);return e.copy(t,32-e.length),t}get[i](){return`PublicKey(${this.toString()})`}toString(){return this.toBase58()}static async createWithSeed(e,t,r){let i=o.Buffer.concat([e.toBuffer(),o.Buffer.from(t),r.toBuffer()]),n=(0,h.J)(i);return new K(n)}static createProgramAddressSync(e,t){let r=o.Buffer.alloc(0);e.forEach(function(e){if(e.length>L)throw TypeError("Max seed length exceeded");r=o.Buffer.concat([r,E(e)])}),r=o.Buffer.concat([r,t.toBuffer(),o.Buffer.from("ProgramDerivedAddress")]);let i=(0,h.J)(r);if(x(i))throw Error("Invalid seeds, address must fall off the curve");return new K(i)}static async createProgramAddress(e,t){return this.createProgramAddressSync(e,t)}static findProgramAddressSync(e,t){let r,i=255;for(;0!=i;){try{let n=e.concat(o.Buffer.from([i]));r=this.createProgramAddressSync(n,t)}catch(s){if(s instanceof TypeError)throw s;i--;continue}return[r,i]}throw Error("Unable to find a viable program address nonce")}static async findProgramAddress(e,t){return this.findProgramAddressSync(e,t)}static isOnCurve(e){let t=new K(e);return x(t.toBytes())}}K.default=new K("11111111111111111111111111111111"),C.set(K,{kind:"struct",fields:[["_bn","u256"]]});class N{constructor(e){if(this._publicKey=void 0,this._secretKey=void 0,e){let t=E(e);if(64!==e.length)throw Error("bad secret key size");this._publicKey=t.slice(32,64),this._secretKey=t.slice(0,32)}else this._secretKey=E(I()),this._publicKey=E(R(this._secretKey))}get publicKey(){return new K(this._publicKey)}get secretKey(){return o.Buffer.concat([this._secretKey,this._publicKey],64)}}let z=new K("BPFLoader1111111111111111111111111111111111"),U=1232,q=127,G=64;class M extends Error{constructor(e){super(`Signature ${e} has expired: block height exceeded.`),this.signature=void 0,this.signature=e}}Object.defineProperty(M.prototype,"name",{value:"TransactionExpiredBlockheightExceededError"});class j extends Error{constructor(e,t){super(`Transaction was not confirmed in ${t.toFixed(2)} seconds. It is unknown if it succeeded or failed. Check signature ${e} using the Solana Explorer or CLI tools.`),this.signature=void 0,this.signature=e}}Object.defineProperty(j.prototype,"name",{value:"TransactionExpiredTimeoutError"});class J extends Error{constructor(e){super(`Signature ${e} has expired: the nonce is no longer valid.`),this.signature=void 0,this.signature=e}}Object.defineProperty(J.prototype,"name",{value:"TransactionExpiredNonceInvalidError"});class V{constructor(e,t){this.staticAccountKeys=void 0,this.accountKeysFromLookups=void 0,this.staticAccountKeys=e,this.accountKeysFromLookups=t}keySegments(){let e=[this.staticAccountKeys];return this.accountKeysFromLookups&&(e.push(this.accountKeysFromLookups.writable),e.push(this.accountKeysFromLookups.readonly)),e}get(e){for(let t of this.keySegments()){if(e<t.length)return t[e];e-=t.length}}get length(){return this.keySegments().flat().length}compileInstructions(e){if(this.length>256)throw Error("Account index overflow encountered during compilation");let t=new Map;this.keySegments().flat().forEach((e,r)=>{t.set(e.toBase58(),r)});let r=e=>{let r=t.get(e.toBase58());if(void 0===r)throw Error("Encountered an unknown instruction account key during compilation");return r};return e.map(e=>({programIdIndex:r(e.programId),accountKeyIndexes:e.keys.map(e=>r(e.pubkey)),data:e.data}))}}let D=(e="publicKey")=>p.Ik(32,e),H=(e="signature")=>p.Ik(64,e),F=(e="string")=>{let t=p.n_([p.Jq("length"),p.Jq("lengthPadding"),p.Ik(p.cv(p.Jq(),-8),"chars")],e),r=t.decode.bind(t),i=t.encode.bind(t),n=t;return n.decode=(e,t)=>{let i=r(e,t);return i.chars.toString()},n.encode=(e,t,r)=>{let n={chars:o.Buffer.from(e,"utf8")};return i(n,t,r)},n.alloc=e=>p.Jq().span+p.Jq().span+o.Buffer.from(e,"utf8").length,n};function Z(e){let t=0,r=0;for(;;){let i=e.shift();if(t|=(127&i)<<7*r,r+=1,(128&i)==0)break}return t}function $(e,t){let r=t;for(;;){let i=127&r;if(0==(r>>=7)){e.push(i);break}i|=128,e.push(i)}}function X(e,t){if(!e)throw Error(t||"Assertion failed")}class Y{constructor(e,t){this.payer=void 0,this.keyMetaMap=void 0,this.payer=e,this.keyMetaMap=t}static compile(e,t){let r=new Map,i=e=>{let t=e.toBase58(),i=r.get(t);return void 0===i&&(i={isSigner:!1,isWritable:!1,isInvoked:!1},r.set(t,i)),i},n=i(t);for(let s of(n.isSigner=!0,n.isWritable=!0,e))for(let o of(i(s.programId).isInvoked=!0,s.keys)){let a=i(o.pubkey);a.isSigner||=o.isSigner,a.isWritable||=o.isWritable}return new Y(t,r)}getMessageComponents(){let e=[...this.keyMetaMap.entries()];X(e.length<=256,"Max static account keys length exceeded");let t=e.filter(([,e])=>e.isSigner&&e.isWritable),r=e.filter(([,e])=>e.isSigner&&!e.isWritable),i=e.filter(([,e])=>!e.isSigner&&e.isWritable),n=e.filter(([,e])=>!e.isSigner&&!e.isWritable),s={numRequiredSignatures:t.length+r.length,numReadonlySignedAccounts:r.length,numReadonlyUnsignedAccounts:n.length};{X(t.length>0,"Expected at least one writable signer key");let[o]=t[0];X(o===this.payer.toBase58(),"Expected first writable signer key to be the fee payer")}let a=[...t.map(([e])=>new K(e)),...r.map(([e])=>new K(e)),...i.map(([e])=>new K(e)),...n.map(([e])=>new K(e))];return[s,a]}extractTableLookup(e){let[t,r]=this.drainKeysFoundInLookupTable(e.state.addresses,e=>!e.isSigner&&!e.isInvoked&&e.isWritable),[i,n]=this.drainKeysFoundInLookupTable(e.state.addresses,e=>!e.isSigner&&!e.isInvoked&&!e.isWritable);if(0!==t.length||0!==i.length)return[{accountKey:e.key,writableIndexes:t,readonlyIndexes:i},{writable:r,readonly:n}]}drainKeysFoundInLookupTable(e,t){let r=[],i=[];for(let[n,s]of this.keyMetaMap.entries())if(t(s)){let o=new K(n),a=e.findIndex(e=>e.equals(o));a>=0&&(X(a<256,"Max lookup table index exceeded"),r.push(a),i.push(o),this.keyMetaMap.delete(n))}return[r,i]}}class Q{constructor(e){this.header=void 0,this.accountKeys=void 0,this.recentBlockhash=void 0,this.instructions=void 0,this.indexToProgramIds=new Map,this.header=e.header,this.accountKeys=e.accountKeys.map(e=>new K(e)),this.recentBlockhash=e.recentBlockhash,this.instructions=e.instructions,this.instructions.forEach(e=>this.indexToProgramIds.set(e.programIdIndex,this.accountKeys[e.programIdIndex]))}get version(){return"legacy"}get staticAccountKeys(){return this.accountKeys}get compiledInstructions(){return this.instructions.map(e=>({programIdIndex:e.programIdIndex,accountKeyIndexes:e.accounts,data:d().decode(e.data)}))}get addressTableLookups(){return[]}getAccountKeys(){return new V(this.staticAccountKeys)}static compile(e){let t=Y.compile(e.instructions,e.payerKey),[r,i]=t.getMessageComponents(),n=new V(i),s=n.compileInstructions(e.instructions).map(e=>({programIdIndex:e.programIdIndex,accounts:e.accountKeyIndexes,data:d().encode(e.data)}));return new Q({header:r,accountKeys:i,recentBlockhash:e.recentBlockhash,instructions:s})}isAccountSigner(e){return e<this.header.numRequiredSignatures}isAccountWritable(e){let t=this.header.numRequiredSignatures;if(e>=this.header.numRequiredSignatures){let r=this.accountKeys.length-t,i=r-this.header.numReadonlyUnsignedAccounts;return e-t<i}{let n=t-this.header.numReadonlySignedAccounts;return e<n}}isProgramId(e){return this.indexToProgramIds.has(e)}programIds(){return[...this.indexToProgramIds.values()]}nonProgramIds(){return this.accountKeys.filter((e,t)=>!this.isProgramId(t))}serialize(){let e=this.accountKeys.length,t=[];$(t,e);let r=this.instructions.map(e=>{let{accounts:t,programIdIndex:r}=e,i=Array.from(d().decode(e.data)),n=[];$(n,t.length);let s=[];return $(s,i.length),{programIdIndex:r,keyIndicesCount:o.Buffer.from(n),keyIndices:t,dataLength:o.Buffer.from(s),data:i}}),i=[];$(i,r.length);let n=o.Buffer.alloc(U);o.Buffer.from(i).copy(n);let s=i.length;r.forEach(e=>{let t=p.n_([p.u8("programIdIndex"),p.Ik(e.keyIndicesCount.length,"keyIndicesCount"),p.A9(p.u8("keyIndex"),e.keyIndices.length,"keyIndices"),p.Ik(e.dataLength.length,"dataLength"),p.A9(p.u8("userdatum"),e.data.length,"data")]),r=t.encode(e,n,s);s+=r}),n=n.slice(0,s);let a=p.n_([p.Ik(1,"numRequiredSignatures"),p.Ik(1,"numReadonlySignedAccounts"),p.Ik(1,"numReadonlyUnsignedAccounts"),p.Ik(t.length,"keyCount"),p.A9(D("key"),e,"keys"),D("recentBlockhash")]),c={numRequiredSignatures:o.Buffer.from([this.header.numRequiredSignatures]),numReadonlySignedAccounts:o.Buffer.from([this.header.numReadonlySignedAccounts]),numReadonlyUnsignedAccounts:o.Buffer.from([this.header.numReadonlyUnsignedAccounts]),keyCount:o.Buffer.from(t),keys:this.accountKeys.map(e=>E(e.toBytes())),recentBlockhash:d().decode(this.recentBlockhash)},u=o.Buffer.alloc(2048),l=a.encode(c,u);return n.copy(u,l),u.slice(0,l+n.length)}static from(e){let t=[...e],r=t.shift();if(r!==(r&q))throw Error("Versioned messages must be deserialized with VersionedMessage.deserialize()");let i=t.shift(),n=t.shift(),s=Z(t),a=[];for(let c=0;c<s;c++){let u=t.slice(0,O);t=t.slice(O),a.push(new K(o.Buffer.from(u)))}let l=t.slice(0,O);t=t.slice(O);let h=Z(t),g=[];for(let p=0;p<h;p++){let y=t.shift(),m=Z(t),f=t.slice(0,m);t=t.slice(m);let b=Z(t),k=t.slice(0,b),S=d().encode(o.Buffer.from(k));t=t.slice(b),g.push({programIdIndex:y,accounts:f,data:S})}let w={header:{numRequiredSignatures:r,numReadonlySignedAccounts:i,numReadonlyUnsignedAccounts:n},recentBlockhash:d().encode(o.Buffer.from(l)),accountKeys:a,instructions:g};return new Q(w)}}class ee{constructor(e){this.header=void 0,this.staticAccountKeys=void 0,this.recentBlockhash=void 0,this.compiledInstructions=void 0,this.addressTableLookups=void 0,this.header=e.header,this.staticAccountKeys=e.staticAccountKeys,this.recentBlockhash=e.recentBlockhash,this.compiledInstructions=e.compiledInstructions,this.addressTableLookups=e.addressTableLookups}get version(){return 0}get numAccountKeysFromLookups(){let e=0;for(let t of this.addressTableLookups)e+=t.readonlyIndexes.length+t.writableIndexes.length;return e}getAccountKeys(e){let t;if(e&&"accountKeysFromLookups"in e&&e.accountKeysFromLookups){if(this.numAccountKeysFromLookups!=e.accountKeysFromLookups.writable.length+e.accountKeysFromLookups.readonly.length)throw Error("Failed to get account keys because of a mismatch in the number of account keys from lookups");t=e.accountKeysFromLookups}else if(e&&"addressLookupTableAccounts"in e&&e.addressLookupTableAccounts)t=this.resolveAddressTableLookups(e.addressLookupTableAccounts);else if(this.addressTableLookups.length>0)throw Error("Failed to get account keys because address table lookups were not resolved");return new V(this.staticAccountKeys,t)}isAccountSigner(e){return e<this.header.numRequiredSignatures}isAccountWritable(e){let t=this.header.numRequiredSignatures,r=this.staticAccountKeys.length;if(e>=r){let i=this.addressTableLookups.reduce((e,t)=>e+t.writableIndexes.length,0);return e-r<i}if(e>=this.header.numRequiredSignatures){let n=r-t-this.header.numReadonlyUnsignedAccounts;return e-t<n}{let s=t-this.header.numReadonlySignedAccounts;return e<s}}resolveAddressTableLookups(e){let t={writable:[],readonly:[]};for(let r of this.addressTableLookups){let i=e.find(e=>e.key.equals(r.accountKey));if(!i)throw Error(`Failed to find address lookup table account for table key ${r.accountKey.toBase58()}`);for(let n of r.writableIndexes)if(n<i.state.addresses.length)t.writable.push(i.state.addresses[n]);else throw Error(`Failed to find address for index ${n} in address lookup table ${r.accountKey.toBase58()}`);for(let s of r.readonlyIndexes)if(s<i.state.addresses.length)t.readonly.push(i.state.addresses[s]);else throw Error(`Failed to find address for index ${s} in address lookup table ${r.accountKey.toBase58()}`)}return t}static compile(e){let t=Y.compile(e.instructions,e.payerKey),r=[],i={writable:[],readonly:[]},n=e.addressLookupTableAccounts||[];for(let s of n){let o=t.extractTableLookup(s);if(void 0!==o){let[a,{writable:c,readonly:u}]=o;r.push(a),i.writable.push(...c),i.readonly.push(...u)}}let[l,d]=t.getMessageComponents(),h=new V(d,i),g=h.compileInstructions(e.instructions);return new ee({header:l,staticAccountKeys:d,recentBlockhash:e.recentBlockhash,compiledInstructions:g,addressTableLookups:r})}serialize(){let e=[];$(e,this.staticAccountKeys.length);let t=this.serializeInstructions(),r=[];$(r,this.compiledInstructions.length);let i=this.serializeAddressTableLookups(),n=[];$(n,this.addressTableLookups.length);let s=p.n_([p.u8("prefix"),p.n_([p.u8("numRequiredSignatures"),p.u8("numReadonlySignedAccounts"),p.u8("numReadonlyUnsignedAccounts")],"header"),p.Ik(e.length,"staticAccountKeysLength"),p.A9(D(),this.staticAccountKeys.length,"staticAccountKeys"),D("recentBlockhash"),p.Ik(r.length,"instructionsLength"),p.Ik(t.length,"serializedInstructions"),p.Ik(n.length,"addressTableLookupsLength"),p.Ik(i.length,"serializedAddressTableLookups")]),o=new Uint8Array(U),a=s.encode({prefix:128,header:this.header,staticAccountKeysLength:new Uint8Array(e),staticAccountKeys:this.staticAccountKeys.map(e=>e.toBytes()),recentBlockhash:d().decode(this.recentBlockhash),instructionsLength:new Uint8Array(r),serializedInstructions:t,addressTableLookupsLength:new Uint8Array(n),serializedAddressTableLookups:i},o);return o.slice(0,a)}serializeInstructions(){let e=0,t=new Uint8Array(U);for(let r of this.compiledInstructions){let i=[];$(i,r.accountKeyIndexes.length);let n=[];$(n,r.data.length);let s=p.n_([p.u8("programIdIndex"),p.Ik(i.length,"encodedAccountKeyIndexesLength"),p.A9(p.u8(),r.accountKeyIndexes.length,"accountKeyIndexes"),p.Ik(n.length,"encodedDataLength"),p.Ik(r.data.length,"data")]);e+=s.encode({programIdIndex:r.programIdIndex,encodedAccountKeyIndexesLength:new Uint8Array(i),accountKeyIndexes:r.accountKeyIndexes,encodedDataLength:new Uint8Array(n),data:r.data},t,e)}return t.slice(0,e)}serializeAddressTableLookups(){let e=0,t=new Uint8Array(U);for(let r of this.addressTableLookups){let i=[];$(i,r.writableIndexes.length);let n=[];$(n,r.readonlyIndexes.length);let s=p.n_([D("accountKey"),p.Ik(i.length,"encodedWritableIndexesLength"),p.A9(p.u8(),r.writableIndexes.length,"writableIndexes"),p.Ik(n.length,"encodedReadonlyIndexesLength"),p.A9(p.u8(),r.readonlyIndexes.length,"readonlyIndexes")]);e+=s.encode({accountKey:r.accountKey.toBytes(),encodedWritableIndexesLength:new Uint8Array(i),writableIndexes:r.writableIndexes,encodedReadonlyIndexesLength:new Uint8Array(n),readonlyIndexes:r.readonlyIndexes},t,e)}return t.slice(0,e)}static deserialize(e){let t=[...e],r=t.shift(),i=r&q;X(r!==i,"Expected versioned message but received legacy message"),X(0===i,`Expected versioned message with version 0 but found version ${i}`);let n={numRequiredSignatures:t.shift(),numReadonlySignedAccounts:t.shift(),numReadonlyUnsignedAccounts:t.shift()},s=[],o=Z(t);for(let a=0;a<o;a++)s.push(new K(t.splice(0,O)));let c=d().encode(t.splice(0,O)),u=Z(t),l=[];for(let h=0;h<u;h++){let g=t.shift(),p=Z(t),y=t.splice(0,p),m=Z(t),f=new Uint8Array(t.splice(0,m));l.push({programIdIndex:g,accountKeyIndexes:y,data:f})}let b=Z(t),k=[];for(let S=0;S<b;S++){let w=new K(t.splice(0,O)),_=Z(t),I=t.splice(0,_),A=Z(t),R=t.splice(0,A);k.push({accountKey:w,writableIndexes:I,readonlyIndexes:R})}return new ee({header:n,staticAccountKeys:s,recentBlockhash:c,compiledInstructions:l,addressTableLookups:k})}}let et={deserializeMessageVersion(e){let t=e[0],r=t&q;return r===t?"legacy":r},deserialize:e=>{let t=et.deserializeMessageVersion(e);if("legacy"===t)return Q.from(e);if(0===t)return ee.deserialize(e);throw Error(`Transaction message version ${t} deserialization is not supported`)}};(s=n||(n={}))[s.BLOCKHEIGHT_EXCEEDED=0]="BLOCKHEIGHT_EXCEEDED",s[s.PROCESSED=1]="PROCESSED",s[s.TIMED_OUT=2]="TIMED_OUT",s[s.NONCE_INVALID=3]="NONCE_INVALID";let er=o.Buffer.alloc(G).fill(0);class ei{constructor(e){this.keys=void 0,this.programId=void 0,this.data=o.Buffer.alloc(0),this.programId=e.programId,this.keys=e.keys,e.data&&(this.data=e.data)}toJSON(){return{keys:this.keys.map(({pubkey:e,isSigner:t,isWritable:r})=>({pubkey:e.toJSON(),isSigner:t,isWritable:r})),programId:this.programId.toJSON(),data:[...this.data]}}}class en{get signature(){return this.signatures.length>0?this.signatures[0].signature:null}constructor(e){if(this.signatures=[],this.feePayer=void 0,this.instructions=[],this.recentBlockhash=void 0,this.lastValidBlockHeight=void 0,this.nonceInfo=void 0,this.minNonceContextSlot=void 0,this._message=void 0,this._json=void 0,!e)return;if(e.feePayer&&(this.feePayer=e.feePayer),e.signatures&&(this.signatures=e.signatures),Object.prototype.hasOwnProperty.call(e,"nonceInfo")){let{minContextSlot:t,nonceInfo:r}=e;this.minNonceContextSlot=t,this.nonceInfo=r}else if(Object.prototype.hasOwnProperty.call(e,"lastValidBlockHeight")){let{blockhash:i,lastValidBlockHeight:n}=e;this.recentBlockhash=i,this.lastValidBlockHeight=n}else{let{recentBlockhash:s,nonceInfo:o}=e;o&&(this.nonceInfo=o),this.recentBlockhash=s}}toJSON(){return{recentBlockhash:this.recentBlockhash||null,feePayer:this.feePayer?this.feePayer.toJSON():null,nonceInfo:this.nonceInfo?{nonce:this.nonceInfo.nonce,nonceInstruction:this.nonceInfo.nonceInstruction.toJSON()}:null,instructions:this.instructions.map(e=>e.toJSON()),signers:this.signatures.map(({publicKey:e})=>e.toJSON())}}add(...e){if(0===e.length)throw Error("No instructions");return e.forEach(e=>{"instructions"in e?this.instructions=this.instructions.concat(e.instructions):"data"in e&&"programId"in e&&"keys"in e?this.instructions.push(e):this.instructions.push(new ei(e))}),this}compileMessage(){let e,t,r;if(this._message&&JSON.stringify(this.toJSON())===JSON.stringify(this._json))return this._message;if(this.nonceInfo?(e=this.nonceInfo.nonce,t=this.instructions[0]!=this.nonceInfo.nonceInstruction?[this.nonceInfo.nonceInstruction,...this.instructions]:this.instructions):(e=this.recentBlockhash,t=this.instructions),!e)throw Error("Transaction recentBlockhash required");if(t.length<1&&console.warn("No instructions provided"),this.feePayer)r=this.feePayer;else if(this.signatures.length>0&&this.signatures[0].publicKey)r=this.signatures[0].publicKey;else throw Error("Transaction fee payer required");for(let i=0;i<t.length;i++)if(void 0===t[i].programId)throw Error(`Transaction instruction index ${i} has undefined program id`);let n=[],s=[];t.forEach(e=>{e.keys.forEach(e=>{s.push({...e})});let t=e.programId.toString();n.includes(t)||n.push(t)}),n.forEach(e=>{s.push({pubkey:new K(e),isSigner:!1,isWritable:!1})});let o=[];s.forEach(e=>{let t=e.pubkey.toString(),r=o.findIndex(e=>e.pubkey.toString()===t);r>-1?(o[r].isWritable=o[r].isWritable||e.isWritable,o[r].isSigner=o[r].isSigner||e.isSigner):o.push(e)}),o.sort(function(e,t){return e.isSigner!==t.isSigner?e.isSigner?-1:1:e.isWritable!==t.isWritable?e.isWritable?-1:1:e.pubkey.toBase58().localeCompare(t.pubkey.toBase58())});let a=o.findIndex(e=>e.pubkey.equals(r));if(a>-1){let[c]=o.splice(a,1);c.isSigner=!0,c.isWritable=!0,o.unshift(c)}else o.unshift({pubkey:r,isSigner:!0,isWritable:!0});for(let u of this.signatures){let l=o.findIndex(e=>e.pubkey.equals(u.publicKey));if(l>-1)o[l].isSigner||(o[l].isSigner=!0,console.warn("Transaction references a signature that is unnecessary, only the fee payer and instruction signer accounts should sign a transaction. This behavior is deprecated and will throw an error in the next major version release."));else throw Error(`unknown signer: ${u.publicKey.toString()}`)}let h=0,g=0,p=0,y=[],m=[];o.forEach(({pubkey:e,isSigner:t,isWritable:r})=>{t?(y.push(e.toString()),h+=1,r||(g+=1)):(m.push(e.toString()),r||(p+=1))});let f=y.concat(m),b=t.map(e=>{let{data:t,programId:r}=e;return{programIdIndex:f.indexOf(r.toString()),accounts:e.keys.map(e=>f.indexOf(e.pubkey.toString())),data:d().encode(t)}});return b.forEach(e=>{X(e.programIdIndex>=0),e.accounts.forEach(e=>X(e>=0))}),new Q({header:{numRequiredSignatures:h,numReadonlySignedAccounts:g,numReadonlyUnsignedAccounts:p},accountKeys:f,recentBlockhash:e,instructions:b})}_compile(){let e=this.compileMessage(),t=e.accountKeys.slice(0,e.header.numRequiredSignatures);if(this.signatures.length===t.length){let r=this.signatures.every((e,r)=>t[r].equals(e.publicKey));if(r)return e}return this.signatures=t.map(e=>({signature:null,publicKey:e})),e}serializeMessage(){return this._compile().serialize()}async getEstimatedFee(e){return(await e.getFeeForMessage(this.compileMessage())).value}setSigners(...e){if(0===e.length)throw Error("No signers");let t=new Set;this.signatures=e.filter(e=>{let r=e.toString();return!t.has(r)&&(t.add(r),!0)}).map(e=>({signature:null,publicKey:e}))}sign(...e){if(0===e.length)throw Error("No signers");let t=new Set,r=[];for(let i of e){let n=i.publicKey.toString();t.has(n)||(t.add(n),r.push(i))}this.signatures=r.map(e=>({signature:null,publicKey:e.publicKey}));let s=this._compile();this._partialSign(s,...r)}partialSign(...e){if(0===e.length)throw Error("No signers");let t=new Set,r=[];for(let i of e){let n=i.publicKey.toString();t.has(n)||(t.add(n),r.push(i))}let s=this._compile();this._partialSign(s,...r)}_partialSign(e,...t){let r=e.serialize();t.forEach(e=>{let t=P(r,e.secretKey);this._addSignature(e.publicKey,E(t))})}addSignature(e,t){this._compile(),this._addSignature(e,t)}_addSignature(e,t){X(64===t.length);let r=this.signatures.findIndex(t=>e.equals(t.publicKey));if(r<0)throw Error(`unknown signer: ${e.toString()}`);this.signatures[r].signature=o.Buffer.from(t)}verifySignatures(e){return this._verifySignatures(this.serializeMessage(),void 0===e||e)}_verifySignatures(e,t){for(let{signature:r,publicKey:i}of this.signatures)if(null===r){if(t)return!1}else if(!v(r,e,i.toBytes()))return!1;return!0}serialize(e){let{requireAllSignatures:t,verifySignatures:r}=Object.assign({requireAllSignatures:!0,verifySignatures:!0},e),i=this.serializeMessage();if(r&&!this._verifySignatures(i,t))throw Error("Signature verification failed");return this._serialize(i)}_serialize(e){let{signatures:t}=this,r=[];$(r,t.length);let i=r.length+64*t.length+e.length,n=o.Buffer.alloc(i);return X(t.length<256),o.Buffer.from(r).copy(n,0),t.forEach(({signature:e},t)=>{null!==e&&(X(64===e.length,"signature has invalid length"),o.Buffer.from(e).copy(n,r.length+64*t))}),e.copy(n,r.length+64*t.length),X(n.length<=U,`Transaction too large: ${n.length} > ${U}`),n}get keys(){return X(1===this.instructions.length),this.instructions[0].keys.map(e=>e.pubkey)}get programId(){return X(1===this.instructions.length),this.instructions[0].programId}get data(){return X(1===this.instructions.length),this.instructions[0].data}static from(e){let t=[...e],r=Z(t),i=[];for(let n=0;n<r;n++){let s=t.slice(0,G);t=t.slice(G),i.push(d().encode(o.Buffer.from(s)))}return en.populate(Q.from(t),i)}static populate(e,t=[]){let r=new en;return r.recentBlockhash=e.recentBlockhash,e.header.numRequiredSignatures>0&&(r.feePayer=e.accountKeys[0]),t.forEach((t,i)=>{let n={signature:t==d().encode(er)?null:d().decode(t),publicKey:e.accountKeys[i]};r.signatures.push(n)}),e.instructions.forEach(t=>{let i=t.accounts.map(t=>{let i=e.accountKeys[t];return{pubkey:i,isSigner:r.signatures.some(e=>e.publicKey.toString()===i.toString())||e.isAccountSigner(t),isWritable:e.isAccountWritable(t)}});r.instructions.push(new ei({keys:i,programId:e.accountKeys[t.programIdIndex],data:d().decode(t.data)}))}),r._message=e,r._json=r.toJSON(),r}}class es{constructor(e){this.payerKey=void 0,this.instructions=void 0,this.recentBlockhash=void 0,this.payerKey=e.payerKey,this.instructions=e.instructions,this.recentBlockhash=e.recentBlockhash}static decompile(e,t){let{header:r,compiledInstructions:i,recentBlockhash:n}=e,{numRequiredSignatures:s,numReadonlySignedAccounts:o,numReadonlyUnsignedAccounts:a}=r,c=s-o;X(c>0,"Message header is invalid");let u=e.staticAccountKeys.length-s-a;X(u>=0,"Message header is invalid");let l=e.getAccountKeys(t),d=l.get(0);if(void 0===d)throw Error("Failed to decompile message because no account keys were found");let h=[];for(let g of i){let p=[];for(let y of g.accountKeyIndexes){let m;let f=l.get(y);if(void 0===f)throw Error(`Failed to find key for account key index ${y}`);let b=y<s;m=b?y<c:y<l.staticAccountKeys.length?y-s<u:y-l.staticAccountKeys.length<l.accountKeysFromLookups.writable.length,p.push({pubkey:f,isSigner:y<r.numRequiredSignatures,isWritable:m})}let k=l.get(g.programIdIndex);if(void 0===k)throw Error(`Failed to find program id for program id index ${g.programIdIndex}`);h.push(new ei({programId:k,data:E(g.data),keys:p}))}return new es({payerKey:d,instructions:h,recentBlockhash:n})}compileToLegacyMessage(){return Q.compile({payerKey:this.payerKey,recentBlockhash:this.recentBlockhash,instructions:this.instructions})}compileToV0Message(e){return ee.compile({payerKey:this.payerKey,recentBlockhash:this.recentBlockhash,instructions:this.instructions,addressLookupTableAccounts:e})}}class eo{get version(){return this.message.version}constructor(e,t){if(this.signatures=void 0,this.message=void 0,void 0!==t)X(t.length===e.header.numRequiredSignatures,"Expected signatures length to be equal to the number of required signatures"),this.signatures=t;else{let r=[];for(let i=0;i<e.header.numRequiredSignatures;i++)r.push(new Uint8Array(G));this.signatures=r}this.message=e}serialize(){let e=this.message.serialize(),t=[];$(t,this.signatures.length);let r=p.n_([p.Ik(t.length,"encodedSignaturesLength"),p.A9(H(),this.signatures.length,"signatures"),p.Ik(e.length,"serializedMessage")]),i=new Uint8Array(2048),n=r.encode({encodedSignaturesLength:new Uint8Array(t),signatures:this.signatures,serializedMessage:e},i);return i.slice(0,n)}static deserialize(e){let t=[...e],r=[],i=Z(t);for(let n=0;n<i;n++)r.push(new Uint8Array(t.splice(0,G)));let s=et.deserialize(new Uint8Array(t));return new eo(s,r)}sign(e){let t=this.message.serialize(),r=this.message.staticAccountKeys.slice(0,this.message.header.numRequiredSignatures);for(let i of e){let n=r.findIndex(e=>e.equals(i.publicKey));X(n>=0,`Cannot sign with non signer key ${i.publicKey.toBase58()}`),this.signatures[n]=P(t,i.secretKey)}}addSignature(e,t){X(64===t.byteLength,"Signature must be 64 bytes long");let r=this.message.staticAccountKeys.slice(0,this.message.header.numRequiredSignatures),i=r.findIndex(t=>t.equals(e));X(i>=0,`Can not add signature; \`${e.toBase58()}\` is not required to sign this transaction`),this.signatures[i]=t}}let ea=new K("SysvarC1ock11111111111111111111111111111111"),ec=new K("SysvarEpochSchedu1e111111111111111111111111"),eu=new K("Sysvar1nstructions1111111111111111111111111"),el=new K("SysvarRecentB1ockHashes11111111111111111111"),ed=new K("SysvarRent111111111111111111111111111111111"),eh=new K("SysvarRewards111111111111111111111111111111"),eg=new K("SysvarS1otHashes111111111111111111111111111"),ep=new K("SysvarS1otHistory11111111111111111111111111"),ey=new K("SysvarStakeHistory1111111111111111111111111");async function em(e,t,r,i){let n;let s=i&&{skipPreflight:i.skipPreflight,preflightCommitment:i.preflightCommitment||i.commitment,maxRetries:i.maxRetries,minContextSlot:i.minContextSlot},o=await e.sendTransaction(t,r,s);if(null!=t.recentBlockhash&&null!=t.lastValidBlockHeight)n=(await e.confirmTransaction({abortSignal:i?.abortSignal,signature:o,blockhash:t.recentBlockhash,lastValidBlockHeight:t.lastValidBlockHeight},i&&i.commitment)).value;else if(null!=t.minNonceContextSlot&&null!=t.nonceInfo){let{nonceInstruction:a}=t.nonceInfo,c=a.keys[0].pubkey;n=(await e.confirmTransaction({abortSignal:i?.abortSignal,minContextSlot:t.minNonceContextSlot,nonceAccountPubkey:c,nonceValue:t.nonceInfo.nonce,signature:o},i&&i.commitment)).value}else i?.abortSignal!=null&&console.warn("sendAndConfirmTransaction(): A transaction with a deprecated confirmation strategy was supplied along with an `abortSignal`. Only transactions having `lastValidBlockHeight` or a combination of `nonceInfo` and `minNonceContextSlot` are abortable."),n=(await e.confirmTransaction(o,i&&i.commitment)).value;if(n.err)throw Error(`Transaction ${o} failed (${JSON.stringify(n)})`);return o}function ef(e){return new Promise(t=>setTimeout(t,e))}function eb(e,t){let r=e.layout.span>=0?e.layout.span:function e(t,r){let i=t=>{if(t.span>=0)return t.span;if("function"==typeof t.alloc)return t.alloc(r[t.property]);if("count"in t&&"elementLayout"in t){let n=r[t.property];if(Array.isArray(n))return n.length*i(t.elementLayout)}else if("fields"in t)return e({layout:t},r[t.property]);return 0},n=0;return t.layout.fields.forEach(e=>{n+=i(e)}),n}(e,t),i=o.Buffer.alloc(r),n=Object.assign({instruction:e.index},t);return e.layout.encode(n,i),i}function ek(e,t){let r;try{r=e.layout.decode(t)}catch(i){throw Error("invalid instruction; "+i)}if(r.instruction!==e.index)throw Error(`invalid instruction; instruction index mismatch ${r.instruction} != ${e.index}`);return r}let eS=p._O("lamportsPerSignature"),ew=p.n_([p.Jq("version"),p.Jq("state"),D("authorizedPubkey"),D("nonce"),p.n_([eS],"feeCalculator")]),e_=ew.span;class eI{constructor(e){this.authorizedPubkey=void 0,this.nonce=void 0,this.feeCalculator=void 0,this.authorizedPubkey=e.authorizedPubkey,this.nonce=e.nonce,this.feeCalculator=e.feeCalculator}static fromAccountData(e){let t=ew.decode(E(e),0);return new eI({authorizedPubkey:new K(t.authorizedPubkey),nonce:new K(t.nonce).toString(),feeCalculator:t.feeCalculator})}}let eA=e=>{let t=e.decode.bind(e),r=e.encode.bind(e);return{decode:t,encode:r}},eR=e=>{let t=(0,p.Ik)(8,e),{encode:r,decode:i}=eA(t),n=t;return n.decode=(e,t)=>{let r=i(e,t);return(0,y.oU)(o.Buffer.from(r))},n.encode=(e,t,i)=>{let n=(0,y.k$)(e,8);return r(n,t,i)},n};class ex{constructor(){}static decodeInstructionType(e){let t;this.checkProgramId(e.programId);let r=p.Jq("instruction"),i=r.decode(e.data);for(let[n,s]of Object.entries(eP))if(s.index==i){t=n;break}if(!t)throw Error("Instruction type incorrect; not a SystemInstruction");return t}static decodeCreateAccount(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,2);let{lamports:t,space:r,programId:i}=ek(eP.Create,e.data);return{fromPubkey:e.keys[0].pubkey,newAccountPubkey:e.keys[1].pubkey,lamports:t,space:r,programId:new K(i)}}static decodeTransfer(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,2);let{lamports:t}=ek(eP.Transfer,e.data);return{fromPubkey:e.keys[0].pubkey,toPubkey:e.keys[1].pubkey,lamports:t}}static decodeTransferWithSeed(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3);let{lamports:t,seed:r,programId:i}=ek(eP.TransferWithSeed,e.data);return{fromPubkey:e.keys[0].pubkey,basePubkey:e.keys[1].pubkey,toPubkey:e.keys[2].pubkey,lamports:t,seed:r,programId:new K(i)}}static decodeAllocate(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,1);let{space:t}=ek(eP.Allocate,e.data);return{accountPubkey:e.keys[0].pubkey,space:t}}static decodeAllocateWithSeed(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,1);let{base:t,seed:r,space:i,programId:n}=ek(eP.AllocateWithSeed,e.data);return{accountPubkey:e.keys[0].pubkey,basePubkey:new K(t),seed:r,space:i,programId:new K(n)}}static decodeAssign(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,1);let{programId:t}=ek(eP.Assign,e.data);return{accountPubkey:e.keys[0].pubkey,programId:new K(t)}}static decodeAssignWithSeed(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,1);let{base:t,seed:r,programId:i}=ek(eP.AssignWithSeed,e.data);return{accountPubkey:e.keys[0].pubkey,basePubkey:new K(t),seed:r,programId:new K(i)}}static decodeCreateWithSeed(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,2);let{base:t,seed:r,lamports:i,space:n,programId:s}=ek(eP.CreateWithSeed,e.data);return{fromPubkey:e.keys[0].pubkey,newAccountPubkey:e.keys[1].pubkey,basePubkey:new K(t),seed:r,lamports:i,space:n,programId:new K(s)}}static decodeNonceInitialize(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3);let{authorized:t}=ek(eP.InitializeNonceAccount,e.data);return{noncePubkey:e.keys[0].pubkey,authorizedPubkey:new K(t)}}static decodeNonceAdvance(e){return this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3),ek(eP.AdvanceNonceAccount,e.data),{noncePubkey:e.keys[0].pubkey,authorizedPubkey:e.keys[2].pubkey}}static decodeNonceWithdraw(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,5);let{lamports:t}=ek(eP.WithdrawNonceAccount,e.data);return{noncePubkey:e.keys[0].pubkey,toPubkey:e.keys[1].pubkey,authorizedPubkey:e.keys[4].pubkey,lamports:t}}static decodeNonceAuthorize(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,2);let{authorized:t}=ek(eP.AuthorizeNonceAccount,e.data);return{noncePubkey:e.keys[0].pubkey,authorizedPubkey:e.keys[1].pubkey,newAuthorizedPubkey:new K(t)}}static checkProgramId(e){if(!e.equals(ev.programId))throw Error("invalid instruction; programId is not SystemProgram")}static checkKeyLength(e,t){if(e.length<t)throw Error(`invalid instruction; found ${e.length} keys, expected at least ${t}`)}}let eP=Object.freeze({Create:{index:0,layout:p.n_([p.Jq("instruction"),p.gM("lamports"),p.gM("space"),D("programId")])},Assign:{index:1,layout:p.n_([p.Jq("instruction"),D("programId")])},Transfer:{index:2,layout:p.n_([p.Jq("instruction"),eR("lamports")])},CreateWithSeed:{index:3,layout:p.n_([p.Jq("instruction"),D("base"),F("seed"),p.gM("lamports"),p.gM("space"),D("programId")])},AdvanceNonceAccount:{index:4,layout:p.n_([p.Jq("instruction")])},WithdrawNonceAccount:{index:5,layout:p.n_([p.Jq("instruction"),p.gM("lamports")])},InitializeNonceAccount:{index:6,layout:p.n_([p.Jq("instruction"),D("authorized")])},AuthorizeNonceAccount:{index:7,layout:p.n_([p.Jq("instruction"),D("authorized")])},Allocate:{index:8,layout:p.n_([p.Jq("instruction"),p.gM("space")])},AllocateWithSeed:{index:9,layout:p.n_([p.Jq("instruction"),D("base"),F("seed"),p.gM("space"),D("programId")])},AssignWithSeed:{index:10,layout:p.n_([p.Jq("instruction"),D("base"),F("seed"),D("programId")])},TransferWithSeed:{index:11,layout:p.n_([p.Jq("instruction"),eR("lamports"),F("seed"),D("programId")])},UpgradeNonceAccount:{index:12,layout:p.n_([p.Jq("instruction")])}});class ev{constructor(){}static createAccount(e){let t=eP.Create,r=eb(t,{lamports:e.lamports,space:e.space,programId:E(e.programId.toBuffer())});return new ei({keys:[{pubkey:e.fromPubkey,isSigner:!0,isWritable:!0},{pubkey:e.newAccountPubkey,isSigner:!0,isWritable:!0}],programId:this.programId,data:r})}static transfer(e){let t,r;if("basePubkey"in e){let i=eP.TransferWithSeed;t=eb(i,{lamports:BigInt(e.lamports),seed:e.seed,programId:E(e.programId.toBuffer())}),r=[{pubkey:e.fromPubkey,isSigner:!1,isWritable:!0},{pubkey:e.basePubkey,isSigner:!0,isWritable:!1},{pubkey:e.toPubkey,isSigner:!1,isWritable:!0}]}else{let n=eP.Transfer;t=eb(n,{lamports:BigInt(e.lamports)}),r=[{pubkey:e.fromPubkey,isSigner:!0,isWritable:!0},{pubkey:e.toPubkey,isSigner:!1,isWritable:!0}]}return new ei({keys:r,programId:this.programId,data:t})}static assign(e){let t,r;if("basePubkey"in e){let i=eP.AssignWithSeed;t=eb(i,{base:E(e.basePubkey.toBuffer()),seed:e.seed,programId:E(e.programId.toBuffer())}),r=[{pubkey:e.accountPubkey,isSigner:!1,isWritable:!0},{pubkey:e.basePubkey,isSigner:!0,isWritable:!1}]}else{let n=eP.Assign;t=eb(n,{programId:E(e.programId.toBuffer())}),r=[{pubkey:e.accountPubkey,isSigner:!0,isWritable:!0}]}return new ei({keys:r,programId:this.programId,data:t})}static createAccountWithSeed(e){let t=eP.CreateWithSeed,r=eb(t,{base:E(e.basePubkey.toBuffer()),seed:e.seed,lamports:e.lamports,space:e.space,programId:E(e.programId.toBuffer())}),i=[{pubkey:e.fromPubkey,isSigner:!0,isWritable:!0},{pubkey:e.newAccountPubkey,isSigner:!1,isWritable:!0}];return e.basePubkey!=e.fromPubkey&&i.push({pubkey:e.basePubkey,isSigner:!0,isWritable:!1}),new ei({keys:i,programId:this.programId,data:r})}static createNonceAccount(e){let t=new en;"basePubkey"in e&&"seed"in e?t.add(ev.createAccountWithSeed({fromPubkey:e.fromPubkey,newAccountPubkey:e.noncePubkey,basePubkey:e.basePubkey,seed:e.seed,lamports:e.lamports,space:e_,programId:this.programId})):t.add(ev.createAccount({fromPubkey:e.fromPubkey,newAccountPubkey:e.noncePubkey,lamports:e.lamports,space:e_,programId:this.programId}));let r={noncePubkey:e.noncePubkey,authorizedPubkey:e.authorizedPubkey};return t.add(this.nonceInitialize(r)),t}static nonceInitialize(e){let t=eP.InitializeNonceAccount,r=eb(t,{authorized:E(e.authorizedPubkey.toBuffer())}),i={keys:[{pubkey:e.noncePubkey,isSigner:!1,isWritable:!0},{pubkey:el,isSigner:!1,isWritable:!1},{pubkey:ed,isSigner:!1,isWritable:!1}],programId:this.programId,data:r};return new ei(i)}static nonceAdvance(e){let t=eP.AdvanceNonceAccount,r=eb(t),i={keys:[{pubkey:e.noncePubkey,isSigner:!1,isWritable:!0},{pubkey:el,isSigner:!1,isWritable:!1},{pubkey:e.authorizedPubkey,isSigner:!0,isWritable:!1}],programId:this.programId,data:r};return new ei(i)}static nonceWithdraw(e){let t=eP.WithdrawNonceAccount,r=eb(t,{lamports:e.lamports});return new ei({keys:[{pubkey:e.noncePubkey,isSigner:!1,isWritable:!0},{pubkey:e.toPubkey,isSigner:!1,isWritable:!0},{pubkey:el,isSigner:!1,isWritable:!1},{pubkey:ed,isSigner:!1,isWritable:!1},{pubkey:e.authorizedPubkey,isSigner:!0,isWritable:!1}],programId:this.programId,data:r})}static nonceAuthorize(e){let t=eP.AuthorizeNonceAccount,r=eb(t,{authorized:E(e.newAuthorizedPubkey.toBuffer())});return new ei({keys:[{pubkey:e.noncePubkey,isSigner:!1,isWritable:!0},{pubkey:e.authorizedPubkey,isSigner:!0,isWritable:!1}],programId:this.programId,data:r})}static allocate(e){let t,r;if("basePubkey"in e){let i=eP.AllocateWithSeed;t=eb(i,{base:E(e.basePubkey.toBuffer()),seed:e.seed,space:e.space,programId:E(e.programId.toBuffer())}),r=[{pubkey:e.accountPubkey,isSigner:!1,isWritable:!0},{pubkey:e.basePubkey,isSigner:!0,isWritable:!1}]}else{let n=eP.Allocate;t=eb(n,{space:e.space}),r=[{pubkey:e.accountPubkey,isSigner:!0,isWritable:!0}]}return new ei({keys:r,programId:this.programId,data:t})}}ev.programId=new K("11111111111111111111111111111111");class eE{constructor(){}static getMinNumSignatures(e){return 2*(Math.ceil(e/eE.chunkSize)+1+1)}static async load(e,t,r,i,n){{let s=await e.getMinimumBalanceForRentExemption(n.length),a=await e.getAccountInfo(r.publicKey,"confirmed"),c=null;if(null!==a){if(a.executable)return console.error("Program load failed, account is already executable"),!1;a.data.length!==n.length&&(c=c||new en).add(ev.allocate({accountPubkey:r.publicKey,space:n.length})),a.owner.equals(i)||(c=c||new en).add(ev.assign({accountPubkey:r.publicKey,programId:i})),a.lamports<s&&(c=c||new en).add(ev.transfer({fromPubkey:t.publicKey,toPubkey:r.publicKey,lamports:s-a.lamports}))}else c=new en().add(ev.createAccount({fromPubkey:t.publicKey,newAccountPubkey:r.publicKey,lamports:s>0?s:1,space:n.length,programId:i}));null!==c&&await em(e,c,[t,r],{commitment:"confirmed"})}let u=p.n_([p.Jq("instruction"),p.Jq("offset"),p.Jq("bytesLength"),p.Jq("bytesLengthPadding"),p.A9(p.u8("byte"),p.cv(p.Jq(),-8),"bytes")]),l=eE.chunkSize,d=0,h=n,g=[];for(;h.length>0;){let y=h.slice(0,l),m=o.Buffer.alloc(l+16);u.encode({instruction:0,offset:d,bytes:y,bytesLength:0,bytesLengthPadding:0},m);let f=new en().add({keys:[{pubkey:r.publicKey,isSigner:!0,isWritable:!0}],programId:i,data:m});g.push(em(e,f,[t,r],{commitment:"confirmed"})),e._rpcEndpoint.includes("solana.com")&&await ef(250),d+=l,h=h.slice(l)}await Promise.all(g);{let b=p.n_([p.Jq("instruction")]),k=o.Buffer.alloc(b.span);b.encode({instruction:1},k);let S=new en().add({keys:[{pubkey:r.publicKey,isSigner:!0,isWritable:!0},{pubkey:ed,isSigner:!1,isWritable:!1}],programId:i,data:k});await em(e,S,[t,r],{commitment:"confirmed"})}return!0}}eE.chunkSize=U-300;let eB=new K("BPFLoader2111111111111111111111111111111111");class eT{static getMinNumSignatures(e){return eE.getMinNumSignatures(e)}static load(e,t,r,i,n){return eE.load(e,t,r,n,i)}}var eC=Object.prototype.toString,eL=Object.keys||function(e){var t=[];for(var r in e)t.push(r);return t},eO=function(e){var t=function e(t,r){var i,n,s,o,a,c,u;if(!0===t)return"true";if(!1===t)return"false";switch(typeof t){case"object":if(null===t)return null;if(t.toJSON&&"function"==typeof t.toJSON)return e(t.toJSON(),r);if("[object Array]"===(u=eC.call(t))){for(i=0,s="[",n=t.length-1;i<n;i++)s+=e(t[i],!0)+",";return n>-1&&(s+=e(t[i],!0)),s+"]"}if("[object Object]"!==u)return JSON.stringify(t);for(n=(o=eL(t).sort()).length,s="",i=0;i<n;)void 0!==(c=e(t[a=o[i]],!1))&&(s&&(s+=","),s+=JSON.stringify(a)+":"+c),i++;return"{"+s+"}";case"function":case"undefined":return r?null:void 0;case"string":return JSON.stringify(t);default:return isFinite(t)?t:null}}(e,!1);if(void 0!==t)return""+t};function eW(e){let t=0;for(;e>1;)e/=2,t++;return t}class eK{constructor(e,t,r,i,n){this.slotsPerEpoch=void 0,this.leaderScheduleSlotOffset=void 0,this.warmup=void 0,this.firstNormalEpoch=void 0,this.firstNormalSlot=void 0,this.slotsPerEpoch=e,this.leaderScheduleSlotOffset=t,this.warmup=r,this.firstNormalEpoch=i,this.firstNormalSlot=n}getEpoch(e){return this.getEpochAndSlotIndex(e)[0]}getEpochAndSlotIndex(e){if(e<this.firstNormalSlot){var t;let r=eW(0===(t=e+32+1)?1:(t--,t|=t>>1,t|=t>>2,t|=t>>4,t|=t>>8,t|=t>>16,(t|=t>>32)+1))-eW(32)-1,i=this.getSlotsInEpoch(r);return[r,e-(i-32)]}{let n=e-this.firstNormalSlot,s=Math.floor(n/this.slotsPerEpoch),o=this.firstNormalEpoch+s,a=n%this.slotsPerEpoch;return[o,a]}}getFirstSlotInEpoch(e){return e<=this.firstNormalEpoch?(Math.pow(2,e)-1)*32:(e-this.firstNormalEpoch)*this.slotsPerEpoch+this.firstNormalSlot}getLastSlotInEpoch(e){return this.getFirstSlotInEpoch(e)+this.getSlotsInEpoch(e)-1}getSlotsInEpoch(e){return e<this.firstNormalEpoch?Math.pow(2,e+eW(32)):this.slotsPerEpoch}}class eN extends Error{constructor(e,t){super(e),this.logs=void 0,this.logs=t}}let ez={JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP:-32001,JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE:-32002,JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE:-32003,JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE:-32004,JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY:-32005,JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE:-32006,JSON_RPC_SERVER_ERROR_SLOT_SKIPPED:-32007,JSON_RPC_SERVER_ERROR_NO_SNAPSHOT:-32008,JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED:-32009,JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX:-32010,JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE:-32011,JSON_RPC_SCAN_ERROR:-32012,JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH:-32013,JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET:-32014,JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION:-32015,JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED:-32016};class eU extends Error{constructor({code:e,message:t,data:r},i){super(null!=i?`${i}: ${t}`:t),this.code=void 0,this.data=void 0,this.code=e,this.data=r,this.name="SolanaJSONRPCError"}}var eq=globalThis.fetch;class eG extends k.Z{constructor(e,t,r){let i=e=>{let r=(0,S.Z)(e,{autoconnect:!0,max_reconnects:5,reconnect:!0,reconnect_interval:1e3,...t});return"socket"in r?this.underlyingSocket=r.socket:this.underlyingSocket=r,r};super(i,e,t,r),this.underlyingSocket=void 0}call(...e){let t=this.underlyingSocket?.readyState;return 1===t?super.call(...e):Promise.reject(Error("Tried to call a JSON-RPC method `"+e[0]+"` but the socket was not `CONNECTING` or `OPEN` (`readyState` was "+t+")"))}notify(...e){let t=this.underlyingSocket?.readyState;return 1===t?super.notify(...e):Promise.reject(Error("Tried to send a JSON-RPC notification `"+e[0]+"` but the socket was not `CONNECTING` or `OPEN` (`readyState` was "+t+")"))}}class eM{constructor(e){this.key=void 0,this.state=void 0,this.key=e.key,this.state=e.state}isActive(){let e=BigInt("0xffffffffffffffff");return this.state.deactivationSlot===e}static deserialize(e){let t=function(e,t){let r;try{r=e.layout.decode(t)}catch(i){throw Error("invalid instruction; "+i)}if(r.typeIndex!==e.index)throw Error(`invalid account data; account type mismatch ${r.typeIndex} != ${e.index}`);return r}(ej,e),r=e.length-56;X(r>=0,"lookup table is invalid"),X(r%32==0,"lookup table is invalid");let{addresses:i}=p.n_([p.A9(D(),r/32,"addresses")]).decode(e.slice(56));return{deactivationSlot:t.deactivationSlot,lastExtendedSlot:t.lastExtendedSlot,lastExtendedSlotStartIndex:t.lastExtendedStartIndex,authority:0!==t.authority.length?new K(t.authority[0]):void 0,addresses:i.map(e=>new K(e))}}}let ej={index:1,layout:p.n_([p.Jq("typeIndex"),eR("deactivationSlot"),p._O("lastExtendedSlot"),p.u8("lastExtendedStartIndex"),p.u8(),p.A9(D(),p.cv(p.u8(),-1),"authority")])},eJ=/^[^:]+:\/\/([^:[]+|\[[^\]]+\])(:\d+)?(.*)/i,eV=(0,m.oQ)((0,m.eE)(K),(0,m.Z_)(),e=>new K(e)),eD=(0,m.bc)([(0,m.Z_)(),(0,m.i0)("base64")]),eH=(0,m.oQ)((0,m.eE)(o.Buffer),eD,e=>o.Buffer.from(e[0],"base64")),eF=3e4;function eZ(e){let t,r;if("string"==typeof e)t=e;else if(e){let{commitment:i,...n}=e;t=i,r=n}return{commitment:t,config:r}}function e$(e){return(0,m.G0)([(0,m.dt)({jsonrpc:(0,m.i0)("2.0"),id:(0,m.Z_)(),result:e}),(0,m.dt)({jsonrpc:(0,m.i0)("2.0"),id:(0,m.Z_)(),error:(0,m.dt)({code:(0,m._4)(),message:(0,m.Z_)(),data:(0,m.jt)((0,m.Yj)())})})])}let eX=e$((0,m._4)());function eY(e){return(0,m.oQ)(e$(e),eX,t=>"error"in t?t:{...t,result:(0,m.Ue)(t.result,e)})}function eQ(e){return eY((0,m.dt)({context:(0,m.dt)({slot:(0,m.Rx)()}),value:e}))}function e0(e){return(0,m.dt)({context:(0,m.dt)({slot:(0,m.Rx)()}),value:e})}function e1(e,t){return 0===e?new ee({header:t.header,staticAccountKeys:t.accountKeys.map(e=>new K(e)),recentBlockhash:t.recentBlockhash,compiledInstructions:t.instructions.map(e=>({programIdIndex:e.programIdIndex,accountKeyIndexes:e.accounts,data:d().decode(e.data)})),addressTableLookups:t.addressTableLookups}):new Q(t)}let e8=(0,m.dt)({foundation:(0,m.Rx)(),foundationTerm:(0,m.Rx)(),initial:(0,m.Rx)(),taper:(0,m.Rx)(),terminal:(0,m.Rx)()}),e2=eY((0,m.IX)((0,m.AG)((0,m.dt)({epoch:(0,m.Rx)(),effectiveSlot:(0,m.Rx)(),amount:(0,m.Rx)(),postBalance:(0,m.Rx)(),commission:(0,m.jt)((0,m.AG)((0,m.Rx)()))})))),e5=(0,m.IX)((0,m.dt)({slot:(0,m.Rx)(),prioritizationFee:(0,m.Rx)()})),e3=(0,m.dt)({total:(0,m.Rx)(),validator:(0,m.Rx)(),foundation:(0,m.Rx)(),epoch:(0,m.Rx)()}),e4=(0,m.dt)({epoch:(0,m.Rx)(),slotIndex:(0,m.Rx)(),slotsInEpoch:(0,m.Rx)(),absoluteSlot:(0,m.Rx)(),blockHeight:(0,m.jt)((0,m.Rx)()),transactionCount:(0,m.jt)((0,m.Rx)())}),e6=(0,m.dt)({slotsPerEpoch:(0,m.Rx)(),leaderScheduleSlotOffset:(0,m.Rx)(),warmup:(0,m.O7)(),firstNormalEpoch:(0,m.Rx)(),firstNormalSlot:(0,m.Rx)()}),e9=(0,m.IM)((0,m.Z_)(),(0,m.IX)((0,m.Rx)())),e7=(0,m.AG)((0,m.G0)([(0,m.dt)({}),(0,m.Z_)()])),te=(0,m.dt)({err:e7}),tt=(0,m.i0)("receivedSignature"),tr=(0,m.dt)({"solana-core":(0,m.Z_)(),"feature-set":(0,m.jt)((0,m.Rx)())}),ti=eQ((0,m.dt)({err:(0,m.AG)((0,m.G0)([(0,m.dt)({}),(0,m.Z_)()])),logs:(0,m.AG)((0,m.IX)((0,m.Z_)())),accounts:(0,m.jt)((0,m.AG)((0,m.IX)((0,m.AG)((0,m.dt)({executable:(0,m.O7)(),owner:(0,m.Z_)(),lamports:(0,m.Rx)(),data:(0,m.IX)((0,m.Z_)()),rentEpoch:(0,m.jt)((0,m.Rx)())}))))),unitsConsumed:(0,m.jt)((0,m.Rx)()),returnData:(0,m.jt)((0,m.AG)((0,m.dt)({programId:(0,m.Z_)(),data:(0,m.bc)([(0,m.Z_)(),(0,m.i0)("base64")])})))})),tn=eQ((0,m.dt)({byIdentity:(0,m.IM)((0,m.Z_)(),(0,m.IX)((0,m.Rx)())),range:(0,m.dt)({firstSlot:(0,m.Rx)(),lastSlot:(0,m.Rx)()})})),ts=eY(e8),to=eY(e3),ta=eY(e5),tc=eY(e4),tu=eY(e6),tl=eY(e9),td=eY((0,m.Rx)()),th=eQ((0,m.dt)({total:(0,m.Rx)(),circulating:(0,m.Rx)(),nonCirculating:(0,m.Rx)(),nonCirculatingAccounts:(0,m.IX)(eV)})),tg=(0,m.dt)({amount:(0,m.Z_)(),uiAmount:(0,m.AG)((0,m.Rx)()),decimals:(0,m.Rx)(),uiAmountString:(0,m.jt)((0,m.Z_)())}),tp=eQ((0,m.IX)((0,m.dt)({address:eV,amount:(0,m.Z_)(),uiAmount:(0,m.AG)((0,m.Rx)()),decimals:(0,m.Rx)(),uiAmountString:(0,m.jt)((0,m.Z_)())}))),ty=eQ((0,m.IX)((0,m.dt)({pubkey:eV,account:(0,m.dt)({executable:(0,m.O7)(),owner:eV,lamports:(0,m.Rx)(),data:eH,rentEpoch:(0,m.Rx)()})}))),tm=(0,m.dt)({program:(0,m.Z_)(),parsed:(0,m._4)(),space:(0,m.Rx)()}),tf=eQ((0,m.IX)((0,m.dt)({pubkey:eV,account:(0,m.dt)({executable:(0,m.O7)(),owner:eV,lamports:(0,m.Rx)(),data:tm,rentEpoch:(0,m.Rx)()})}))),tb=eQ((0,m.IX)((0,m.dt)({lamports:(0,m.Rx)(),address:eV}))),tk=(0,m.dt)({executable:(0,m.O7)(),owner:eV,lamports:(0,m.Rx)(),data:eH,rentEpoch:(0,m.Rx)()}),tS=(0,m.dt)({pubkey:eV,account:tk}),tw=(0,m.oQ)((0,m.G0)([(0,m.eE)(o.Buffer),tm]),(0,m.G0)([eD,tm]),e=>Array.isArray(e)?(0,m.Ue)(e,eH):e),t_=(0,m.dt)({executable:(0,m.O7)(),owner:eV,lamports:(0,m.Rx)(),data:tw,rentEpoch:(0,m.Rx)()}),tI=(0,m.dt)({pubkey:eV,account:t_}),tA=(0,m.dt)({state:(0,m.G0)([(0,m.i0)("active"),(0,m.i0)("inactive"),(0,m.i0)("activating"),(0,m.i0)("deactivating")]),active:(0,m.Rx)(),inactive:(0,m.Rx)()}),tR=eY((0,m.IX)((0,m.dt)({signature:(0,m.Z_)(),slot:(0,m.Rx)(),err:e7,memo:(0,m.AG)((0,m.Z_)()),blockTime:(0,m.jt)((0,m.AG)((0,m.Rx)()))}))),tx=eY((0,m.IX)((0,m.dt)({signature:(0,m.Z_)(),slot:(0,m.Rx)(),err:e7,memo:(0,m.AG)((0,m.Z_)()),blockTime:(0,m.jt)((0,m.AG)((0,m.Rx)()))}))),tP=(0,m.dt)({subscription:(0,m.Rx)(),result:e0(tk)}),tv=(0,m.dt)({pubkey:eV,account:tk}),tE=(0,m.dt)({subscription:(0,m.Rx)(),result:e0(tv)}),tB=(0,m.dt)({parent:(0,m.Rx)(),slot:(0,m.Rx)(),root:(0,m.Rx)()}),tT=(0,m.dt)({subscription:(0,m.Rx)(),result:tB}),tC=(0,m.G0)([(0,m.dt)({type:(0,m.G0)([(0,m.i0)("firstShredReceived"),(0,m.i0)("completed"),(0,m.i0)("optimisticConfirmation"),(0,m.i0)("root")]),slot:(0,m.Rx)(),timestamp:(0,m.Rx)()}),(0,m.dt)({type:(0,m.i0)("createdBank"),parent:(0,m.Rx)(),slot:(0,m.Rx)(),timestamp:(0,m.Rx)()}),(0,m.dt)({type:(0,m.i0)("frozen"),slot:(0,m.Rx)(),timestamp:(0,m.Rx)(),stats:(0,m.dt)({numTransactionEntries:(0,m.Rx)(),numSuccessfulTransactions:(0,m.Rx)(),numFailedTransactions:(0,m.Rx)(),maxTransactionsPerEntry:(0,m.Rx)()})}),(0,m.dt)({type:(0,m.i0)("dead"),slot:(0,m.Rx)(),timestamp:(0,m.Rx)(),err:(0,m.Z_)()})]),tL=(0,m.dt)({subscription:(0,m.Rx)(),result:tC}),tO=(0,m.dt)({subscription:(0,m.Rx)(),result:e0((0,m.G0)([te,tt]))}),tW=(0,m.dt)({subscription:(0,m.Rx)(),result:(0,m.Rx)()}),tK=(0,m.dt)({pubkey:(0,m.Z_)(),gossip:(0,m.AG)((0,m.Z_)()),tpu:(0,m.AG)((0,m.Z_)()),rpc:(0,m.AG)((0,m.Z_)()),version:(0,m.AG)((0,m.Z_)())}),tN=(0,m.dt)({votePubkey:(0,m.Z_)(),nodePubkey:(0,m.Z_)(),activatedStake:(0,m.Rx)(),epochVoteAccount:(0,m.O7)(),epochCredits:(0,m.IX)((0,m.bc)([(0,m.Rx)(),(0,m.Rx)(),(0,m.Rx)()])),commission:(0,m.Rx)(),lastVote:(0,m.Rx)(),rootSlot:(0,m.AG)((0,m.Rx)())}),tz=eY((0,m.dt)({current:(0,m.IX)(tN),delinquent:(0,m.IX)(tN)})),tU=(0,m.G0)([(0,m.i0)("processed"),(0,m.i0)("confirmed"),(0,m.i0)("finalized")]),tq=(0,m.dt)({slot:(0,m.Rx)(),confirmations:(0,m.AG)((0,m.Rx)()),err:e7,confirmationStatus:(0,m.jt)(tU)}),tG=eQ((0,m.IX)((0,m.AG)(tq))),tM=eY((0,m.Rx)()),tj=(0,m.dt)({accountKey:eV,writableIndexes:(0,m.IX)((0,m.Rx)()),readonlyIndexes:(0,m.IX)((0,m.Rx)())}),tJ=(0,m.dt)({signatures:(0,m.IX)((0,m.Z_)()),message:(0,m.dt)({accountKeys:(0,m.IX)((0,m.Z_)()),header:(0,m.dt)({numRequiredSignatures:(0,m.Rx)(),numReadonlySignedAccounts:(0,m.Rx)(),numReadonlyUnsignedAccounts:(0,m.Rx)()}),instructions:(0,m.IX)((0,m.dt)({accounts:(0,m.IX)((0,m.Rx)()),data:(0,m.Z_)(),programIdIndex:(0,m.Rx)()})),recentBlockhash:(0,m.Z_)(),addressTableLookups:(0,m.jt)((0,m.IX)(tj))})}),tV=(0,m.dt)({pubkey:eV,signer:(0,m.O7)(),writable:(0,m.O7)(),source:(0,m.jt)((0,m.G0)([(0,m.i0)("transaction"),(0,m.i0)("lookupTable")]))}),tD=(0,m.dt)({accountKeys:(0,m.IX)(tV),signatures:(0,m.IX)((0,m.Z_)())}),tH=(0,m.dt)({parsed:(0,m._4)(),program:(0,m.Z_)(),programId:eV}),tF=(0,m.dt)({accounts:(0,m.IX)(eV),data:(0,m.Z_)(),programId:eV}),tZ=(0,m.G0)([tF,tH]),t$=(0,m.G0)([(0,m.dt)({parsed:(0,m._4)(),program:(0,m.Z_)(),programId:(0,m.Z_)()}),(0,m.dt)({accounts:(0,m.IX)((0,m.Z_)()),data:(0,m.Z_)(),programId:(0,m.Z_)()})]),tX=(0,m.oQ)(tZ,t$,e=>"accounts"in e?(0,m.Ue)(e,tF):(0,m.Ue)(e,tH)),tY=(0,m.dt)({signatures:(0,m.IX)((0,m.Z_)()),message:(0,m.dt)({accountKeys:(0,m.IX)(tV),instructions:(0,m.IX)(tX),recentBlockhash:(0,m.Z_)(),addressTableLookups:(0,m.jt)((0,m.AG)((0,m.IX)(tj)))})}),tQ=(0,m.dt)({accountIndex:(0,m.Rx)(),mint:(0,m.Z_)(),owner:(0,m.jt)((0,m.Z_)()),uiTokenAmount:tg}),t0=(0,m.dt)({writable:(0,m.IX)(eV),readonly:(0,m.IX)(eV)}),t1=(0,m.dt)({err:e7,fee:(0,m.Rx)(),innerInstructions:(0,m.jt)((0,m.AG)((0,m.IX)((0,m.dt)({index:(0,m.Rx)(),instructions:(0,m.IX)((0,m.dt)({accounts:(0,m.IX)((0,m.Rx)()),data:(0,m.Z_)(),programIdIndex:(0,m.Rx)()}))})))),preBalances:(0,m.IX)((0,m.Rx)()),postBalances:(0,m.IX)((0,m.Rx)()),logMessages:(0,m.jt)((0,m.AG)((0,m.IX)((0,m.Z_)()))),preTokenBalances:(0,m.jt)((0,m.AG)((0,m.IX)(tQ))),postTokenBalances:(0,m.jt)((0,m.AG)((0,m.IX)(tQ))),loadedAddresses:(0,m.jt)(t0),computeUnitsConsumed:(0,m.jt)((0,m.Rx)())}),t8=(0,m.dt)({err:e7,fee:(0,m.Rx)(),innerInstructions:(0,m.jt)((0,m.AG)((0,m.IX)((0,m.dt)({index:(0,m.Rx)(),instructions:(0,m.IX)(tX)})))),preBalances:(0,m.IX)((0,m.Rx)()),postBalances:(0,m.IX)((0,m.Rx)()),logMessages:(0,m.jt)((0,m.AG)((0,m.IX)((0,m.Z_)()))),preTokenBalances:(0,m.jt)((0,m.AG)((0,m.IX)(tQ))),postTokenBalances:(0,m.jt)((0,m.AG)((0,m.IX)(tQ))),loadedAddresses:(0,m.jt)(t0),computeUnitsConsumed:(0,m.jt)((0,m.Rx)())}),t2=(0,m.G0)([(0,m.i0)(0),(0,m.i0)("legacy")]),t5=(0,m.dt)({pubkey:(0,m.Z_)(),lamports:(0,m.Rx)(),postBalance:(0,m.AG)((0,m.Rx)()),rewardType:(0,m.AG)((0,m.Z_)()),commission:(0,m.jt)((0,m.AG)((0,m.Rx)()))}),t3=eY((0,m.AG)((0,m.dt)({blockhash:(0,m.Z_)(),previousBlockhash:(0,m.Z_)(),parentSlot:(0,m.Rx)(),transactions:(0,m.IX)((0,m.dt)({transaction:tJ,meta:(0,m.AG)(t1),version:(0,m.jt)(t2)})),rewards:(0,m.jt)((0,m.IX)(t5)),blockTime:(0,m.AG)((0,m.Rx)()),blockHeight:(0,m.AG)((0,m.Rx)())}))),t4=eY((0,m.AG)((0,m.dt)({blockhash:(0,m.Z_)(),previousBlockhash:(0,m.Z_)(),parentSlot:(0,m.Rx)(),rewards:(0,m.jt)((0,m.IX)(t5)),blockTime:(0,m.AG)((0,m.Rx)()),blockHeight:(0,m.AG)((0,m.Rx)())}))),t6=eY((0,m.AG)((0,m.dt)({blockhash:(0,m.Z_)(),previousBlockhash:(0,m.Z_)(),parentSlot:(0,m.Rx)(),transactions:(0,m.IX)((0,m.dt)({transaction:tD,meta:(0,m.AG)(t1),version:(0,m.jt)(t2)})),rewards:(0,m.jt)((0,m.IX)(t5)),blockTime:(0,m.AG)((0,m.Rx)()),blockHeight:(0,m.AG)((0,m.Rx)())}))),t9=eY((0,m.AG)((0,m.dt)({blockhash:(0,m.Z_)(),previousBlockhash:(0,m.Z_)(),parentSlot:(0,m.Rx)(),transactions:(0,m.IX)((0,m.dt)({transaction:tY,meta:(0,m.AG)(t8),version:(0,m.jt)(t2)})),rewards:(0,m.jt)((0,m.IX)(t5)),blockTime:(0,m.AG)((0,m.Rx)()),blockHeight:(0,m.AG)((0,m.Rx)())}))),t7=eY((0,m.AG)((0,m.dt)({blockhash:(0,m.Z_)(),previousBlockhash:(0,m.Z_)(),parentSlot:(0,m.Rx)(),transactions:(0,m.IX)((0,m.dt)({transaction:tD,meta:(0,m.AG)(t8),version:(0,m.jt)(t2)})),rewards:(0,m.jt)((0,m.IX)(t5)),blockTime:(0,m.AG)((0,m.Rx)()),blockHeight:(0,m.AG)((0,m.Rx)())}))),re=eY((0,m.AG)((0,m.dt)({blockhash:(0,m.Z_)(),previousBlockhash:(0,m.Z_)(),parentSlot:(0,m.Rx)(),rewards:(0,m.jt)((0,m.IX)(t5)),blockTime:(0,m.AG)((0,m.Rx)()),blockHeight:(0,m.AG)((0,m.Rx)())}))),rt=eY((0,m.AG)((0,m.dt)({blockhash:(0,m.Z_)(),previousBlockhash:(0,m.Z_)(),parentSlot:(0,m.Rx)(),transactions:(0,m.IX)((0,m.dt)({transaction:tJ,meta:(0,m.AG)(t1)})),rewards:(0,m.jt)((0,m.IX)(t5)),blockTime:(0,m.AG)((0,m.Rx)())}))),rr=eY((0,m.AG)((0,m.dt)({blockhash:(0,m.Z_)(),previousBlockhash:(0,m.Z_)(),parentSlot:(0,m.Rx)(),signatures:(0,m.IX)((0,m.Z_)()),blockTime:(0,m.AG)((0,m.Rx)())}))),ri=eY((0,m.AG)((0,m.dt)({slot:(0,m.Rx)(),meta:t1,blockTime:(0,m.jt)((0,m.AG)((0,m.Rx)())),transaction:tJ,version:(0,m.jt)(t2)}))),rn=eY((0,m.AG)((0,m.dt)({slot:(0,m.Rx)(),transaction:tY,meta:(0,m.AG)(t8),blockTime:(0,m.jt)((0,m.AG)((0,m.Rx)())),version:(0,m.jt)(t2)}))),rs=eQ((0,m.dt)({blockhash:(0,m.Z_)(),feeCalculator:(0,m.dt)({lamportsPerSignature:(0,m.Rx)()})})),ro=eQ((0,m.dt)({blockhash:(0,m.Z_)(),lastValidBlockHeight:(0,m.Rx)()})),ra=(0,m.dt)({slot:(0,m.Rx)(),numTransactions:(0,m.Rx)(),numSlots:(0,m.Rx)(),samplePeriodSecs:(0,m.Rx)()}),rc=eY((0,m.IX)(ra)),ru=eQ((0,m.AG)((0,m.dt)({feeCalculator:(0,m.dt)({lamportsPerSignature:(0,m.Rx)()})}))),rl=eY((0,m.Z_)()),rd=eY((0,m.Z_)()),rh=(0,m.dt)({err:e7,logs:(0,m.IX)((0,m.Z_)()),signature:(0,m.Z_)()}),rg=(0,m.dt)({result:e0(rh),subscription:(0,m.Rx)()}),rp={"solana-client":"js/0.0.0-development"};class ry{constructor(e,t){var r,i;let n,s,o,a,c,u;this._commitment=void 0,this._confirmTransactionInitialTimeout=void 0,this._rpcEndpoint=void 0,this._rpcWsEndpoint=void 0,this._rpcClient=void 0,this._rpcRequest=void 0,this._rpcBatchRequest=void 0,this._rpcWebSocket=void 0,this._rpcWebSocketConnected=!1,this._rpcWebSocketHeartbeat=null,this._rpcWebSocketIdleTimeout=null,this._rpcWebSocketGeneration=0,this._disableBlockhashCaching=!1,this._pollingBlockhash=!1,this._blockhashInfo={latestBlockhash:null,lastFetch:0,transactionSignatures:[],simulatedSignatures:[]},this._nextClientSubscriptionId=0,this._subscriptionDisposeFunctionsByClientSubscriptionId={},this._subscriptionHashByClientSubscriptionId={},this._subscriptionStateChangeCallbacksByHash={},this._subscriptionCallbacksByServerSubscriptionId={},this._subscriptionsByHash={},this._subscriptionsAutoDisposedByRpc=new Set,this.getBlockHeight=(()=>{let e={};return async t=>{let{commitment:r,config:i}=eZ(t),n=this._buildArgs([],r,void 0,i),s=eO(n);return e[s]=e[s]??(async()=>{try{let t=await this._rpcRequest("getBlockHeight",n),r=(0,m.Ue)(t,eY((0,m.Rx)()));if("error"in r)throw new eU(r.error,"failed to get block height information");return r.result}finally{delete e[s]}})(),await e[s]}})(),t&&"string"==typeof t?this._commitment=t:t&&(this._commitment=t.commitment,this._confirmTransactionInitialTimeout=t.confirmTransactionInitialTimeout,n=t.wsEndpoint,s=t.httpHeaders,o=t.fetch,a=t.fetchMiddleware,c=t.disableRetryOnRateLimit,u=t.httpAgent),this._rpcEndpoint=function(e){if(!1===/^https?:/.test(e))throw TypeError("Endpoint URL must start with `http:` or `https:`.");return e}(e),this._rpcWsEndpoint=n||function(e){let t=e.match(eJ);if(null==t)throw TypeError(`Failed to validate endpoint URL \`${e}\``);let[r,i,n,s]=t,o=e.startsWith("https:")?"wss:":"ws:",a=null==n?null:parseInt(n.slice(1),10),c=null==a?"":`:${a+1}`;return`${o}//${i}${c}${s}`}(e),this._rpcClient=function(e,t,r,i,n,s){let o,a;let c=r||eq;null!=s&&console.warn("You have supplied an `httpAgent` when creating a `Connection` in a browser environment.It has been ignored; `httpAgent` is only used in Node environments."),i&&(a=async(e,t)=>{let r=await new Promise((r,n)=>{try{i(e,t,(e,t)=>r([e,t]))}catch(s){n(s)}});return await c(...r)});let u=new(b())(async(r,i)=>{let s={method:"POST",body:r,agent:o,headers:Object.assign({"Content-Type":"application/json"},t||{},rp)};try{let u,l=5,d=500;for(;u=a?await a(e,s):await c(e,s),429===u.status&&!0!==n&&(l-=1,0!==l);)console.log(`Server responded with ${u.status} ${u.statusText}.  Retrying after ${d}ms delay...`),await ef(d),d*=2;let h=await u.text();u.ok?i(null,h):i(Error(`${u.status} ${u.statusText}: ${h}`))}catch(g){g instanceof Error&&i(g)}},{});return u}(e,s,o,a,c,u),this._rpcRequest=(r=this._rpcClient,(e,t)=>new Promise((i,n)=>{r.request(e,t,(e,t)=>{if(e){n(e);return}i(t)})})),this._rpcBatchRequest=(i=this._rpcClient,e=>new Promise((t,r)=>{0===e.length&&t([]);let n=e.map(e=>i.request(e.methodName,e.args));i.request(n,(e,i)=>{if(e){r(e);return}t(i)})})),this._rpcWebSocket=new eG(this._rpcWsEndpoint,{autoconnect:!1,max_reconnects:1/0}),this._rpcWebSocket.on("open",this._wsOnOpen.bind(this)),this._rpcWebSocket.on("error",this._wsOnError.bind(this)),this._rpcWebSocket.on("close",this._wsOnClose.bind(this)),this._rpcWebSocket.on("accountNotification",this._wsOnAccountNotification.bind(this)),this._rpcWebSocket.on("programNotification",this._wsOnProgramAccountNotification.bind(this)),this._rpcWebSocket.on("slotNotification",this._wsOnSlotNotification.bind(this)),this._rpcWebSocket.on("slotsUpdatesNotification",this._wsOnSlotUpdatesNotification.bind(this)),this._rpcWebSocket.on("signatureNotification",this._wsOnSignatureNotification.bind(this)),this._rpcWebSocket.on("rootNotification",this._wsOnRootNotification.bind(this)),this._rpcWebSocket.on("logsNotification",this._wsOnLogsNotification.bind(this))}get commitment(){return this._commitment}get rpcEndpoint(){return this._rpcEndpoint}async getBalanceAndContext(e,t){let{commitment:r,config:i}=eZ(t),n=this._buildArgs([e.toBase58()],r,void 0,i),s=await this._rpcRequest("getBalance",n),o=(0,m.Ue)(s,eQ((0,m.Rx)()));if("error"in o)throw new eU(o.error,`failed to get balance for ${e.toBase58()}`);return o.result}async getBalance(e,t){return await this.getBalanceAndContext(e,t).then(e=>e.value).catch(t=>{throw Error("failed to get balance of account "+e.toBase58()+": "+t)})}async getBlockTime(e){let t=await this._rpcRequest("getBlockTime",[e]),r=(0,m.Ue)(t,eY((0,m.AG)((0,m.Rx)())));if("error"in r)throw new eU(r.error,`failed to get block time for slot ${e}`);return r.result}async getMinimumLedgerSlot(){let e=await this._rpcRequest("minimumLedgerSlot",[]),t=(0,m.Ue)(e,eY((0,m.Rx)()));if("error"in t)throw new eU(t.error,"failed to get minimum ledger slot");return t.result}async getFirstAvailableBlock(){let e=await this._rpcRequest("getFirstAvailableBlock",[]),t=(0,m.Ue)(e,td);if("error"in t)throw new eU(t.error,"failed to get first available block");return t.result}async getSupply(e){let t={};t="string"==typeof e?{commitment:e}:e?{...e,commitment:e&&e.commitment||this.commitment}:{commitment:this.commitment};let r=await this._rpcRequest("getSupply",[t]),i=(0,m.Ue)(r,th);if("error"in i)throw new eU(i.error,"failed to get supply");return i.result}async getTokenSupply(e,t){let r=this._buildArgs([e.toBase58()],t),i=await this._rpcRequest("getTokenSupply",r),n=(0,m.Ue)(i,eQ(tg));if("error"in n)throw new eU(n.error,"failed to get token supply");return n.result}async getTokenAccountBalance(e,t){let r=this._buildArgs([e.toBase58()],t),i=await this._rpcRequest("getTokenAccountBalance",r),n=(0,m.Ue)(i,eQ(tg));if("error"in n)throw new eU(n.error,"failed to get token account balance");return n.result}async getTokenAccountsByOwner(e,t,r){let{commitment:i,config:n}=eZ(r),s=[e.toBase58()];"mint"in t?s.push({mint:t.mint.toBase58()}):s.push({programId:t.programId.toBase58()});let o=this._buildArgs(s,i,"base64",n),a=await this._rpcRequest("getTokenAccountsByOwner",o),c=(0,m.Ue)(a,ty);if("error"in c)throw new eU(c.error,`failed to get token accounts owned by account ${e.toBase58()}`);return c.result}async getParsedTokenAccountsByOwner(e,t,r){let i=[e.toBase58()];"mint"in t?i.push({mint:t.mint.toBase58()}):i.push({programId:t.programId.toBase58()});let n=this._buildArgs(i,r,"jsonParsed"),s=await this._rpcRequest("getTokenAccountsByOwner",n),o=(0,m.Ue)(s,tf);if("error"in o)throw new eU(o.error,`failed to get token accounts owned by account ${e.toBase58()}`);return o.result}async getLargestAccounts(e){let t={...e,commitment:e&&e.commitment||this.commitment},r=t.filter||t.commitment?[t]:[],i=await this._rpcRequest("getLargestAccounts",r),n=(0,m.Ue)(i,tb);if("error"in n)throw new eU(n.error,"failed to get largest accounts");return n.result}async getTokenLargestAccounts(e,t){let r=this._buildArgs([e.toBase58()],t),i=await this._rpcRequest("getTokenLargestAccounts",r),n=(0,m.Ue)(i,tp);if("error"in n)throw new eU(n.error,"failed to get token largest accounts");return n.result}async getAccountInfoAndContext(e,t){let{commitment:r,config:i}=eZ(t),n=this._buildArgs([e.toBase58()],r,"base64",i),s=await this._rpcRequest("getAccountInfo",n),o=(0,m.Ue)(s,eQ((0,m.AG)(tk)));if("error"in o)throw new eU(o.error,`failed to get info about account ${e.toBase58()}`);return o.result}async getParsedAccountInfo(e,t){let{commitment:r,config:i}=eZ(t),n=this._buildArgs([e.toBase58()],r,"jsonParsed",i),s=await this._rpcRequest("getAccountInfo",n),o=(0,m.Ue)(s,eQ((0,m.AG)(t_)));if("error"in o)throw new eU(o.error,`failed to get info about account ${e.toBase58()}`);return o.result}async getAccountInfo(e,t){try{let r=await this.getAccountInfoAndContext(e,t);return r.value}catch(i){throw Error("failed to get info about account "+e.toBase58()+": "+i)}}async getMultipleParsedAccounts(e,t){let{commitment:r,config:i}=eZ(t),n=e.map(e=>e.toBase58()),s=this._buildArgs([n],r,"jsonParsed",i),o=await this._rpcRequest("getMultipleAccounts",s),a=(0,m.Ue)(o,eQ((0,m.IX)((0,m.AG)(t_))));if("error"in a)throw new eU(a.error,`failed to get info for accounts ${n}`);return a.result}async getMultipleAccountsInfoAndContext(e,t){let{commitment:r,config:i}=eZ(t),n=e.map(e=>e.toBase58()),s=this._buildArgs([n],r,"base64",i),o=await this._rpcRequest("getMultipleAccounts",s),a=(0,m.Ue)(o,eQ((0,m.IX)((0,m.AG)(tk))));if("error"in a)throw new eU(a.error,`failed to get info for accounts ${n}`);return a.result}async getMultipleAccountsInfo(e,t){let r=await this.getMultipleAccountsInfoAndContext(e,t);return r.value}async getStakeActivation(e,t,r){let{commitment:i,config:n}=eZ(t),s=this._buildArgs([e.toBase58()],i,void 0,{...n,epoch:null!=r?r:n?.epoch}),o=await this._rpcRequest("getStakeActivation",s),a=(0,m.Ue)(o,eY(tA));if("error"in a)throw new eU(a.error,`failed to get Stake Activation ${e.toBase58()}`);return a.result}async getProgramAccounts(e,t){let{commitment:r,config:i}=eZ(t),{encoding:n,...s}=i||{},o=this._buildArgs([e.toBase58()],r,n||"base64",s),a=await this._rpcRequest("getProgramAccounts",o),c=(0,m.Ue)(a,eY((0,m.IX)(tS)));if("error"in c)throw new eU(c.error,`failed to get accounts owned by program ${e.toBase58()}`);return c.result}async getParsedProgramAccounts(e,t){let{commitment:r,config:i}=eZ(t),n=this._buildArgs([e.toBase58()],r,"jsonParsed",i),s=await this._rpcRequest("getProgramAccounts",n),o=(0,m.Ue)(s,eY((0,m.IX)(tI)));if("error"in o)throw new eU(o.error,`failed to get accounts owned by program ${e.toBase58()}`);return o.result}async confirmTransaction(e,t){let r,i;if("string"==typeof e)r=e;else{if(e.abortSignal?.aborted)return Promise.reject(e.abortSignal.reason);r=e.signature}try{i=d().decode(r)}catch(n){throw Error("signature must be base58 encoded: "+r)}return(X(64===i.length,"signature has invalid length"),"string"==typeof e)?await this.confirmTransactionUsingLegacyTimeoutStrategy({commitment:t||this.commitment,signature:r}):"lastValidBlockHeight"in e?await this.confirmTransactionUsingBlockHeightExceedanceStrategy({commitment:t||this.commitment,strategy:e}):await this.confirmTransactionUsingDurableNonceStrategy({commitment:t||this.commitment,strategy:e})}getCancellationPromise(e){return new Promise((t,r)=>{null!=e&&(e.aborted?r(e.reason):e.addEventListener("abort",()=>{r(e.reason)}))})}getTransactionConfirmationPromise({commitment:e,signature:t}){let r,i;let s=!1,o=new Promise((o,a)=>{try{r=this.onSignature(t,(e,t)=>{r=void 0,o({__type:n.PROCESSED,response:{context:t,value:e}})},e);let c=new Promise(e=>{null==r?e():i=this._onSubscriptionStateChange(r,t=>{"subscribed"===t&&e()})});(async()=>{if(await c,s)return;let r=await this.getSignatureStatus(t);if(s||null==r)return;let{context:i,value:u}=r;if(null!=u){if(u?.err)a(u.err);else{switch(e){case"confirmed":case"single":case"singleGossip":if("processed"===u.confirmationStatus)return;break;case"finalized":case"max":case"root":if("processed"===u.confirmationStatus||"confirmed"===u.confirmationStatus)return}s=!0,o({__type:n.PROCESSED,response:{context:i,value:u}})}}})()}catch(u){a(u)}}),a=()=>{i&&(i(),i=void 0),null!=r&&(this.removeSignatureListener(r),r=void 0)};return{abortConfirmation:a,confirmationPromise:o}}async confirmTransactionUsingBlockHeightExceedanceStrategy({commitment:e,strategy:{abortSignal:t,lastValidBlockHeight:r,signature:i}}){let s,o=!1,a=new Promise(t=>{let i=async()=>{try{let t=await this.getBlockHeight(e);return t}catch(r){return -1}};(async()=>{let e=await i();if(!o){for(;e<=r;)if(await ef(1e3),o||(e=await i(),o))return;t({__type:n.BLOCKHEIGHT_EXCEEDED})}})()}),{abortConfirmation:c,confirmationPromise:u}=this.getTransactionConfirmationPromise({commitment:e,signature:i}),l=this.getCancellationPromise(t);try{let d=await Promise.race([l,u,a]);if(d.__type===n.PROCESSED)s=d.response;else throw new M(i)}finally{o=!0,c()}return s}async confirmTransactionUsingDurableNonceStrategy({commitment:e,strategy:{abortSignal:t,minContextSlot:r,nonceAccountPubkey:i,nonceValue:s,signature:o}}){let a,c=!1,u=new Promise(t=>{let o=s,a=null,u=async()=>{try{let{context:t,value:n}=await this.getNonceAndContext(i,{commitment:e,minContextSlot:r});return a=t.slot,n?.nonce}catch(s){return o}};(async()=>{if(o=await u(),!c)for(;;){if(s!==o){t({__type:n.NONCE_INVALID,slotInWhichNonceDidAdvance:a});return}if(await ef(2e3),c||(o=await u(),c))return}})()}),{abortConfirmation:l,confirmationPromise:d}=this.getTransactionConfirmationPromise({commitment:e,signature:o}),h=this.getCancellationPromise(t);try{let g=await Promise.race([h,d,u]);if(g.__type===n.PROCESSED)a=g.response;else{let p;for(;;){let y=await this.getSignatureStatus(o);if(null==y)break;if(y.context.slot<(g.slotInWhichNonceDidAdvance??r)){await ef(400);continue}p=y;break}if(p?.value){let{confirmationStatus:m}=p.value;switch(e||"finalized"){case"processed":case"recent":if("processed"!==m&&"confirmed"!==m&&"finalized"!==m)throw new J(o);break;case"confirmed":case"single":case"singleGossip":if("confirmed"!==m&&"finalized"!==m)throw new J(o);break;case"finalized":case"max":case"root":if("finalized"!==m)throw new J(o)}a={context:p.context,value:{err:p.value.err}}}else throw new J(o)}}finally{c=!0,l()}return a}async confirmTransactionUsingLegacyTimeoutStrategy({commitment:e,signature:t}){let r,i;let s=new Promise(t=>{let i=this._confirmTransactionInitialTimeout||6e4;switch(e){case"processed":case"recent":case"single":case"confirmed":case"singleGossip":i=this._confirmTransactionInitialTimeout||3e4}r=setTimeout(()=>t({__type:n.TIMED_OUT,timeoutMs:i}),i)}),{abortConfirmation:o,confirmationPromise:a}=this.getTransactionConfirmationPromise({commitment:e,signature:t});try{let c=await Promise.race([a,s]);if(c.__type===n.PROCESSED)i=c.response;else throw new j(t,c.timeoutMs/1e3)}finally{clearTimeout(r),o()}return i}async getClusterNodes(){let e=await this._rpcRequest("getClusterNodes",[]),t=(0,m.Ue)(e,eY((0,m.IX)(tK)));if("error"in t)throw new eU(t.error,"failed to get cluster nodes");return t.result}async getVoteAccounts(e){let t=this._buildArgs([],e),r=await this._rpcRequest("getVoteAccounts",t),i=(0,m.Ue)(r,tz);if("error"in i)throw new eU(i.error,"failed to get vote accounts");return i.result}async getSlot(e){let{commitment:t,config:r}=eZ(e),i=this._buildArgs([],t,void 0,r),n=await this._rpcRequest("getSlot",i),s=(0,m.Ue)(n,eY((0,m.Rx)()));if("error"in s)throw new eU(s.error,"failed to get slot");return s.result}async getSlotLeader(e){let{commitment:t,config:r}=eZ(e),i=this._buildArgs([],t,void 0,r),n=await this._rpcRequest("getSlotLeader",i),s=(0,m.Ue)(n,eY((0,m.Z_)()));if("error"in s)throw new eU(s.error,"failed to get slot leader");return s.result}async getSlotLeaders(e,t){let r=await this._rpcRequest("getSlotLeaders",[e,t]),i=(0,m.Ue)(r,eY((0,m.IX)(eV)));if("error"in i)throw new eU(i.error,"failed to get slot leaders");return i.result}async getSignatureStatus(e,t){let{context:r,value:i}=await this.getSignatureStatuses([e],t);X(1===i.length);let n=i[0];return{context:r,value:n}}async getSignatureStatuses(e,t){let r=[e];t&&r.push(t);let i=await this._rpcRequest("getSignatureStatuses",r),n=(0,m.Ue)(i,tG);if("error"in n)throw new eU(n.error,"failed to get signature status");return n.result}async getTransactionCount(e){let{commitment:t,config:r}=eZ(e),i=this._buildArgs([],t,void 0,r),n=await this._rpcRequest("getTransactionCount",i),s=(0,m.Ue)(n,eY((0,m.Rx)()));if("error"in s)throw new eU(s.error,"failed to get transaction count");return s.result}async getTotalSupply(e){let t=await this.getSupply({commitment:e,excludeNonCirculatingAccountsList:!0});return t.value.total}async getInflationGovernor(e){let t=this._buildArgs([],e),r=await this._rpcRequest("getInflationGovernor",t),i=(0,m.Ue)(r,ts);if("error"in i)throw new eU(i.error,"failed to get inflation");return i.result}async getInflationReward(e,t,r){let{commitment:i,config:n}=eZ(r),s=this._buildArgs([e.map(e=>e.toBase58())],i,void 0,{...n,epoch:null!=t?t:n?.epoch}),o=await this._rpcRequest("getInflationReward",s),a=(0,m.Ue)(o,e2);if("error"in a)throw new eU(a.error,"failed to get inflation reward");return a.result}async getInflationRate(){let e=await this._rpcRequest("getInflationRate",[]),t=(0,m.Ue)(e,to);if("error"in t)throw new eU(t.error,"failed to get inflation rate");return t.result}async getEpochInfo(e){let{commitment:t,config:r}=eZ(e),i=this._buildArgs([],t,void 0,r),n=await this._rpcRequest("getEpochInfo",i),s=(0,m.Ue)(n,tc);if("error"in s)throw new eU(s.error,"failed to get epoch info");return s.result}async getEpochSchedule(){let e=await this._rpcRequest("getEpochSchedule",[]),t=(0,m.Ue)(e,tu);if("error"in t)throw new eU(t.error,"failed to get epoch schedule");let r=t.result;return new eK(r.slotsPerEpoch,r.leaderScheduleSlotOffset,r.warmup,r.firstNormalEpoch,r.firstNormalSlot)}async getLeaderSchedule(){let e=await this._rpcRequest("getLeaderSchedule",[]),t=(0,m.Ue)(e,tl);if("error"in t)throw new eU(t.error,"failed to get leader schedule");return t.result}async getMinimumBalanceForRentExemption(e,t){let r=this._buildArgs([e],t),i=await this._rpcRequest("getMinimumBalanceForRentExemption",r),n=(0,m.Ue)(i,tM);return"error"in n?(console.warn("Unable to fetch minimum balance for rent exemption"),0):n.result}async getRecentBlockhashAndContext(e){let t=this._buildArgs([],e),r=await this._rpcRequest("getRecentBlockhash",t),i=(0,m.Ue)(r,rs);if("error"in i)throw new eU(i.error,"failed to get recent blockhash");return i.result}async getRecentPerformanceSamples(e){let t=await this._rpcRequest("getRecentPerformanceSamples",e?[e]:[]),r=(0,m.Ue)(t,rc);if("error"in r)throw new eU(r.error,"failed to get recent performance samples");return r.result}async getFeeCalculatorForBlockhash(e,t){let r=this._buildArgs([e],t),i=await this._rpcRequest("getFeeCalculatorForBlockhash",r),n=(0,m.Ue)(i,ru);if("error"in n)throw new eU(n.error,"failed to get fee calculator");let{context:s,value:o}=n.result;return{context:s,value:null!==o?o.feeCalculator:null}}async getFeeForMessage(e,t){let r=E(e.serialize()).toString("base64"),i=this._buildArgs([r],t),n=await this._rpcRequest("getFeeForMessage",i),s=(0,m.Ue)(n,eQ((0,m.AG)((0,m.Rx)())));if("error"in s)throw new eU(s.error,"failed to get fee for message");if(null===s.result)throw Error("invalid blockhash");return s.result}async getRecentPrioritizationFees(e){let t=e?.lockedWritableAccounts?.map(e=>e.toBase58()),r=this._buildArgs(t?.length?[t]:[]),i=await this._rpcRequest("getRecentPrioritizationFees",r),n=(0,m.Ue)(i,ta);if("error"in n)throw new eU(n.error,"failed to get recent prioritization fees");return n.result}async getRecentBlockhash(e){try{let t=await this.getRecentBlockhashAndContext(e);return t.value}catch(r){throw Error("failed to get recent blockhash: "+r)}}async getLatestBlockhash(e){try{let t=await this.getLatestBlockhashAndContext(e);return t.value}catch(r){throw Error("failed to get recent blockhash: "+r)}}async getLatestBlockhashAndContext(e){let{commitment:t,config:r}=eZ(e),i=this._buildArgs([],t,void 0,r),n=await this._rpcRequest("getLatestBlockhash",i),s=(0,m.Ue)(n,ro);if("error"in s)throw new eU(s.error,"failed to get latest blockhash");return s.result}async getVersion(){let e=await this._rpcRequest("getVersion",[]),t=(0,m.Ue)(e,eY(tr));if("error"in t)throw new eU(t.error,"failed to get version");return t.result}async getGenesisHash(){let e=await this._rpcRequest("getGenesisHash",[]),t=(0,m.Ue)(e,eY((0,m.Z_)()));if("error"in t)throw new eU(t.error,"failed to get genesis hash");return t.result}async getBlock(e,t){let{commitment:r,config:i}=eZ(t),n=this._buildArgsAtLeastConfirmed([e],r,void 0,i),s=await this._rpcRequest("getBlock",n);try{switch(i?.transactionDetails){case"accounts":{let o=(0,m.Ue)(s,t6);if("error"in o)throw o.error;return o.result}case"none":{let a=(0,m.Ue)(s,t4);if("error"in a)throw a.error;return a.result}default:{let c=(0,m.Ue)(s,t3);if("error"in c)throw c.error;let{result:u}=c;return u?{...u,transactions:u.transactions.map(({transaction:e,meta:t,version:r})=>({meta:t,transaction:{...e,message:e1(r,e.message)},version:r}))}:null}}}catch(l){throw new eU(l,"failed to get confirmed block")}}async getParsedBlock(e,t){let{commitment:r,config:i}=eZ(t),n=this._buildArgsAtLeastConfirmed([e],r,"jsonParsed",i),s=await this._rpcRequest("getBlock",n);try{switch(i?.transactionDetails){case"accounts":{let o=(0,m.Ue)(s,t7);if("error"in o)throw o.error;return o.result}case"none":{let a=(0,m.Ue)(s,re);if("error"in a)throw a.error;return a.result}default:{let c=(0,m.Ue)(s,t9);if("error"in c)throw c.error;return c.result}}}catch(u){throw new eU(u,"failed to get block")}}async getBlockProduction(e){let t,r;if("string"==typeof e)r=e;else if(e){let{commitment:i,...n}=e;r=i,t=n}let s=this._buildArgs([],r,"base64",t),o=await this._rpcRequest("getBlockProduction",s),a=(0,m.Ue)(o,tn);if("error"in a)throw new eU(a.error,"failed to get block production information");return a.result}async getTransaction(e,t){let{commitment:r,config:i}=eZ(t),n=this._buildArgsAtLeastConfirmed([e],r,void 0,i),s=await this._rpcRequest("getTransaction",n),o=(0,m.Ue)(s,ri);if("error"in o)throw new eU(o.error,"failed to get transaction");let a=o.result;return a?{...a,transaction:{...a.transaction,message:e1(a.version,a.transaction.message)}}:a}async getParsedTransaction(e,t){let{commitment:r,config:i}=eZ(t),n=this._buildArgsAtLeastConfirmed([e],r,"jsonParsed",i),s=await this._rpcRequest("getTransaction",n),o=(0,m.Ue)(s,rn);if("error"in o)throw new eU(o.error,"failed to get transaction");return o.result}async getParsedTransactions(e,t){let{commitment:r,config:i}=eZ(t),n=e.map(e=>{let t=this._buildArgsAtLeastConfirmed([e],r,"jsonParsed",i);return{methodName:"getTransaction",args:t}}),s=await this._rpcBatchRequest(n),o=s.map(e=>{let t=(0,m.Ue)(e,rn);if("error"in t)throw new eU(t.error,"failed to get transactions");return t.result});return o}async getTransactions(e,t){let{commitment:r,config:i}=eZ(t),n=e.map(e=>{let t=this._buildArgsAtLeastConfirmed([e],r,void 0,i);return{methodName:"getTransaction",args:t}}),s=await this._rpcBatchRequest(n),o=s.map(e=>{let t=(0,m.Ue)(e,ri);if("error"in t)throw new eU(t.error,"failed to get transactions");let r=t.result;return r?{...r,transaction:{...r.transaction,message:e1(r.version,r.transaction.message)}}:r});return o}async getConfirmedBlock(e,t){let r=this._buildArgsAtLeastConfirmed([e],t),i=await this._rpcRequest("getConfirmedBlock",r),n=(0,m.Ue)(i,rt);if("error"in n)throw new eU(n.error,"failed to get confirmed block");let s=n.result;if(!s)throw Error("Confirmed block "+e+" not found");let o={...s,transactions:s.transactions.map(({transaction:e,meta:t})=>{let r=new Q(e.message);return{meta:t,transaction:{...e,message:r}}})};return{...o,transactions:o.transactions.map(({transaction:e,meta:t})=>({meta:t,transaction:en.populate(e.message,e.signatures)}))}}async getBlocks(e,t,r){let i=this._buildArgsAtLeastConfirmed(void 0!==t?[e,t]:[e],r),n=await this._rpcRequest("getBlocks",i),s=(0,m.Ue)(n,eY((0,m.IX)((0,m.Rx)())));if("error"in s)throw new eU(s.error,"failed to get blocks");return s.result}async getBlockSignatures(e,t){let r=this._buildArgsAtLeastConfirmed([e],t,void 0,{transactionDetails:"signatures",rewards:!1}),i=await this._rpcRequest("getBlock",r),n=(0,m.Ue)(i,rr);if("error"in n)throw new eU(n.error,"failed to get block");let s=n.result;if(!s)throw Error("Block "+e+" not found");return s}async getConfirmedBlockSignatures(e,t){let r=this._buildArgsAtLeastConfirmed([e],t,void 0,{transactionDetails:"signatures",rewards:!1}),i=await this._rpcRequest("getConfirmedBlock",r),n=(0,m.Ue)(i,rr);if("error"in n)throw new eU(n.error,"failed to get confirmed block");let s=n.result;if(!s)throw Error("Confirmed block "+e+" not found");return s}async getConfirmedTransaction(e,t){let r=this._buildArgsAtLeastConfirmed([e],t),i=await this._rpcRequest("getConfirmedTransaction",r),n=(0,m.Ue)(i,ri);if("error"in n)throw new eU(n.error,"failed to get transaction");let s=n.result;if(!s)return s;let o=new Q(s.transaction.message),a=s.transaction.signatures;return{...s,transaction:en.populate(o,a)}}async getParsedConfirmedTransaction(e,t){let r=this._buildArgsAtLeastConfirmed([e],t,"jsonParsed"),i=await this._rpcRequest("getConfirmedTransaction",r),n=(0,m.Ue)(i,rn);if("error"in n)throw new eU(n.error,"failed to get confirmed transaction");return n.result}async getParsedConfirmedTransactions(e,t){let r=e.map(e=>{let r=this._buildArgsAtLeastConfirmed([e],t,"jsonParsed");return{methodName:"getConfirmedTransaction",args:r}}),i=await this._rpcBatchRequest(r),n=i.map(e=>{let t=(0,m.Ue)(e,rn);if("error"in t)throw new eU(t.error,"failed to get confirmed transactions");return t.result});return n}async getConfirmedSignaturesForAddress(e,t,r){let i={},n=await this.getFirstAvailableBlock();for(;!("until"in i)&&!(--t<=0)&&!(t<n);)try{let s=await this.getConfirmedBlockSignatures(t,"finalized");s.signatures.length>0&&(i.until=s.signatures[s.signatures.length-1].toString())}catch(o){if(o instanceof Error&&o.message.includes("skipped"))continue;throw o}let a=await this.getSlot("finalized");for(;!("before"in i)&&!(++r>a);)try{let c=await this.getConfirmedBlockSignatures(r);c.signatures.length>0&&(i.before=c.signatures[c.signatures.length-1].toString())}catch(u){if(u instanceof Error&&u.message.includes("skipped"))continue;throw u}let l=await this.getConfirmedSignaturesForAddress2(e,i);return l.map(e=>e.signature)}async getConfirmedSignaturesForAddress2(e,t,r){let i=this._buildArgsAtLeastConfirmed([e.toBase58()],r,void 0,t),n=await this._rpcRequest("getConfirmedSignaturesForAddress2",i),s=(0,m.Ue)(n,tR);if("error"in s)throw new eU(s.error,"failed to get confirmed signatures for address");return s.result}async getSignaturesForAddress(e,t,r){let i=this._buildArgsAtLeastConfirmed([e.toBase58()],r,void 0,t),n=await this._rpcRequest("getSignaturesForAddress",i),s=(0,m.Ue)(n,tx);if("error"in s)throw new eU(s.error,"failed to get signatures for address");return s.result}async getAddressLookupTable(e,t){let{context:r,value:i}=await this.getAccountInfoAndContext(e,t),n=null;return null!==i&&(n=new eM({key:e,state:eM.deserialize(i.data)})),{context:r,value:n}}async getNonceAndContext(e,t){let{context:r,value:i}=await this.getAccountInfoAndContext(e,t),n=null;return null!==i&&(n=eI.fromAccountData(i.data)),{context:r,value:n}}async getNonce(e,t){return await this.getNonceAndContext(e,t).then(e=>e.value).catch(t=>{throw Error("failed to get nonce for account "+e.toBase58()+": "+t)})}async requestAirdrop(e,t){let r=await this._rpcRequest("requestAirdrop",[e.toBase58(),t]),i=(0,m.Ue)(r,rl);if("error"in i)throw new eU(i.error,`airdrop to ${e.toBase58()} failed`);return i.result}async _blockhashWithExpiryBlockHeight(e){if(!e){for(;this._pollingBlockhash;)await ef(100);let t=Date.now()-this._blockhashInfo.lastFetch;if(null!==this._blockhashInfo.latestBlockhash&&!(t>=eF))return this._blockhashInfo.latestBlockhash}return await this._pollNewBlockhash()}async _pollNewBlockhash(){this._pollingBlockhash=!0;try{let e=Date.now(),t=this._blockhashInfo.latestBlockhash,r=t?t.blockhash:null;for(let i=0;i<50;i++){let n=await this.getLatestBlockhash("finalized");if(r!==n.blockhash)return this._blockhashInfo={latestBlockhash:n,lastFetch:Date.now(),transactionSignatures:[],simulatedSignatures:[]},n;await ef(200)}throw Error(`Unable to obtain a new blockhash after ${Date.now()-e}ms`)}finally{this._pollingBlockhash=!1}}async getStakeMinimumDelegation(e){let{commitment:t,config:r}=eZ(e),i=this._buildArgs([],t,"base64",r),n=await this._rpcRequest("getStakeMinimumDelegation",i),s=(0,m.Ue)(n,eQ((0,m.Rx)()));if("error"in s)throw new eU(s.error,"failed to get stake minimum delegation");return s.result}async simulateTransaction(e,t,r){let i;if("message"in e){let n=e.serialize(),s=o.Buffer.from(n).toString("base64");if(Array.isArray(t)||void 0!==r)throw Error("Invalid arguments");let a=t||{};a.encoding="base64","commitment"in a||(a.commitment=this.commitment);let c=[s,a],u=await this._rpcRequest("simulateTransaction",c),l=(0,m.Ue)(u,ti);if("error"in l)throw Error("failed to simulate transaction: "+l.error.message);return l.result}if(e instanceof en?((i=new en).feePayer=e.feePayer,i.instructions=e.instructions,i.nonceInfo=e.nonceInfo,i.signatures=e.signatures):(i=en.populate(e))._message=i._json=void 0,void 0!==t&&!Array.isArray(t))throw Error("Invalid arguments");if(i.nonceInfo&&t)i.sign(...t);else{let d=this._disableBlockhashCaching;for(;;){let h=await this._blockhashWithExpiryBlockHeight(d);if(i.lastValidBlockHeight=h.lastValidBlockHeight,i.recentBlockhash=h.blockhash,!t)break;if(i.sign(...t),!i.signature)throw Error("!signature");let g=i.signature.toString("base64");if(this._blockhashInfo.simulatedSignatures.includes(g)||this._blockhashInfo.transactionSignatures.includes(g))d=!0;else{this._blockhashInfo.simulatedSignatures.push(g);break}}}let p=i._compile(),y=p.serialize(),f=i._serialize(y),b=f.toString("base64"),k={encoding:"base64",commitment:this.commitment};if(r){let S=(Array.isArray(r)?r:p.nonProgramIds()).map(e=>e.toBase58());k.accounts={encoding:"base64",addresses:S}}t&&(k.sigVerify=!0);let w=[b,k],_=await this._rpcRequest("simulateTransaction",w),I=(0,m.Ue)(_,ti);if("error"in I){let A;if("data"in I.error&&(A=I.error.data.logs)&&Array.isArray(A)){let R="\n    ",x=R+A.join(R);console.error(I.error.message,x)}throw new eN("failed to simulate transaction: "+I.error.message,A)}return I.result}async sendTransaction(e,t,r){if("version"in e){if(t&&Array.isArray(t))throw Error("Invalid arguments");let i=e.serialize();return await this.sendRawTransaction(i,t)}if(void 0===t||!Array.isArray(t))throw Error("Invalid arguments");if(e.nonceInfo)e.sign(...t);else{let n=this._disableBlockhashCaching;for(;;){let s=await this._blockhashWithExpiryBlockHeight(n);if(e.lastValidBlockHeight=s.lastValidBlockHeight,e.recentBlockhash=s.blockhash,e.sign(...t),!e.signature)throw Error("!signature");let o=e.signature.toString("base64");if(this._blockhashInfo.transactionSignatures.includes(o))n=!0;else{this._blockhashInfo.transactionSignatures.push(o);break}}}let a=e.serialize();return await this.sendRawTransaction(a,r)}async sendRawTransaction(e,t){let r=E(e).toString("base64"),i=await this.sendEncodedTransaction(r,t);return i}async sendEncodedTransaction(e,t){let r={encoding:"base64"},i=t&&t.skipPreflight,n=t&&t.preflightCommitment||this.commitment;t&&null!=t.maxRetries&&(r.maxRetries=t.maxRetries),t&&null!=t.minContextSlot&&(r.minContextSlot=t.minContextSlot),i&&(r.skipPreflight=i),n&&(r.preflightCommitment=n);let s=[e,r],o=await this._rpcRequest("sendTransaction",s),a=(0,m.Ue)(o,rd);if("error"in a){let c;throw"data"in a.error&&(c=a.error.data.logs),new eN("failed to send transaction: "+a.error.message,c)}return a.result}_wsOnOpen(){this._rpcWebSocketConnected=!0,this._rpcWebSocketHeartbeat=setInterval(()=>{(async()=>{try{await this._rpcWebSocket.notify("ping")}catch{}})()},5e3),this._updateSubscriptions()}_wsOnError(e){this._rpcWebSocketConnected=!1,console.error("ws error:",e.message)}_wsOnClose(e){if(this._rpcWebSocketConnected=!1,this._rpcWebSocketGeneration=(this._rpcWebSocketGeneration+1)%Number.MAX_SAFE_INTEGER,this._rpcWebSocketIdleTimeout&&(clearTimeout(this._rpcWebSocketIdleTimeout),this._rpcWebSocketIdleTimeout=null),this._rpcWebSocketHeartbeat&&(clearInterval(this._rpcWebSocketHeartbeat),this._rpcWebSocketHeartbeat=null),1e3===e){this._updateSubscriptions();return}this._subscriptionCallbacksByServerSubscriptionId={},Object.entries(this._subscriptionsByHash).forEach(([e,t])=>{this._setSubscription(e,{...t,state:"pending"})})}_setSubscription(e,t){let r=this._subscriptionsByHash[e]?.state;if(this._subscriptionsByHash[e]=t,r!==t.state){let i=this._subscriptionStateChangeCallbacksByHash[e];i&&i.forEach(e=>{try{e(t.state)}catch{}})}}_onSubscriptionStateChange(e,t){let r=this._subscriptionHashByClientSubscriptionId[e];if(null==r)return()=>{};let i=this._subscriptionStateChangeCallbacksByHash[r]||=new Set;return i.add(t),()=>{i.delete(t),0===i.size&&delete this._subscriptionStateChangeCallbacksByHash[r]}}async _updateSubscriptions(){if(0===Object.keys(this._subscriptionsByHash).length){this._rpcWebSocketConnected&&(this._rpcWebSocketConnected=!1,this._rpcWebSocketIdleTimeout=setTimeout(()=>{this._rpcWebSocketIdleTimeout=null;try{this._rpcWebSocket.close()}catch(e){e instanceof Error&&console.log(`Error when closing socket connection: ${e.message}`)}},500));return}if(null!==this._rpcWebSocketIdleTimeout&&(clearTimeout(this._rpcWebSocketIdleTimeout),this._rpcWebSocketIdleTimeout=null,this._rpcWebSocketConnected=!0),!this._rpcWebSocketConnected){this._rpcWebSocket.connect();return}let e=this._rpcWebSocketGeneration,t=()=>e===this._rpcWebSocketGeneration;await Promise.all(Object.keys(this._subscriptionsByHash).map(async e=>{let r=this._subscriptionsByHash[e];if(void 0!==r)switch(r.state){case"pending":case"unsubscribed":if(0===r.callbacks.size){delete this._subscriptionsByHash[e],"unsubscribed"===r.state&&delete this._subscriptionCallbacksByServerSubscriptionId[r.serverSubscriptionId],await this._updateSubscriptions();return}await (async()=>{let{args:i,method:n}=r;try{this._setSubscription(e,{...r,state:"subscribing"});let s=await this._rpcWebSocket.call(n,i);this._setSubscription(e,{...r,serverSubscriptionId:s,state:"subscribed"}),this._subscriptionCallbacksByServerSubscriptionId[s]=r.callbacks,await this._updateSubscriptions()}catch(o){if(o instanceof Error&&console.error(`${n} error for argument`,i,o.message),!t())return;this._setSubscription(e,{...r,state:"pending"}),await this._updateSubscriptions()}})();break;case"subscribed":0===r.callbacks.size&&await (async()=>{let{serverSubscriptionId:i,unsubscribeMethod:n}=r;if(this._subscriptionsAutoDisposedByRpc.has(i))this._subscriptionsAutoDisposedByRpc.delete(i);else{this._setSubscription(e,{...r,state:"unsubscribing"}),this._setSubscription(e,{...r,state:"unsubscribing"});try{await this._rpcWebSocket.call(n,[i])}catch(s){if(s instanceof Error&&console.error(`${n} error:`,s.message),!t())return;this._setSubscription(e,{...r,state:"subscribed"}),await this._updateSubscriptions();return}}this._setSubscription(e,{...r,state:"unsubscribed"}),await this._updateSubscriptions()})()}}))}_handleServerNotification(e,t){let r=this._subscriptionCallbacksByServerSubscriptionId[e];void 0!==r&&r.forEach(e=>{try{e(...t)}catch(r){console.error(r)}})}_wsOnAccountNotification(e){let{result:t,subscription:r}=(0,m.Ue)(e,tP);this._handleServerNotification(r,[t.value,t.context])}_makeSubscription(e,t){let r=this._nextClientSubscriptionId++,i=eO([e.method,t]),n=this._subscriptionsByHash[i];return void 0===n?this._subscriptionsByHash[i]={...e,args:t,callbacks:new Set([e.callback]),state:"pending"}:n.callbacks.add(e.callback),this._subscriptionHashByClientSubscriptionId[r]=i,this._subscriptionDisposeFunctionsByClientSubscriptionId[r]=async()=>{delete this._subscriptionDisposeFunctionsByClientSubscriptionId[r],delete this._subscriptionHashByClientSubscriptionId[r];let t=this._subscriptionsByHash[i];X(void 0!==t,`Could not find a \`Subscription\` when tearing down client subscription #${r}`),t.callbacks.delete(e.callback),await this._updateSubscriptions()},this._updateSubscriptions(),r}onAccountChange(e,t,r){let i=this._buildArgs([e.toBase58()],r||this._commitment||"finalized","base64");return this._makeSubscription({callback:t,method:"accountSubscribe",unsubscribeMethod:"accountUnsubscribe"},i)}async removeAccountChangeListener(e){await this._unsubscribeClientSubscription(e,"account change")}_wsOnProgramAccountNotification(e){let{result:t,subscription:r}=(0,m.Ue)(e,tE);this._handleServerNotification(r,[{accountId:t.value.pubkey,accountInfo:t.value.account},t.context])}onProgramAccountChange(e,t,r,i){let n=this._buildArgs([e.toBase58()],r||this._commitment||"finalized","base64",i?{filters:i}:void 0);return this._makeSubscription({callback:t,method:"programSubscribe",unsubscribeMethod:"programUnsubscribe"},n)}async removeProgramAccountChangeListener(e){await this._unsubscribeClientSubscription(e,"program account change")}onLogs(e,t,r){let i=this._buildArgs(["object"==typeof e?{mentions:[e.toString()]}:e],r||this._commitment||"finalized");return this._makeSubscription({callback:t,method:"logsSubscribe",unsubscribeMethod:"logsUnsubscribe"},i)}async removeOnLogsListener(e){await this._unsubscribeClientSubscription(e,"logs")}_wsOnLogsNotification(e){let{result:t,subscription:r}=(0,m.Ue)(e,rg);this._handleServerNotification(r,[t.value,t.context])}_wsOnSlotNotification(e){let{result:t,subscription:r}=(0,m.Ue)(e,tT);this._handleServerNotification(r,[t])}onSlotChange(e){return this._makeSubscription({callback:e,method:"slotSubscribe",unsubscribeMethod:"slotUnsubscribe"},[])}async removeSlotChangeListener(e){await this._unsubscribeClientSubscription(e,"slot change")}_wsOnSlotUpdatesNotification(e){let{result:t,subscription:r}=(0,m.Ue)(e,tL);this._handleServerNotification(r,[t])}onSlotUpdate(e){return this._makeSubscription({callback:e,method:"slotsUpdatesSubscribe",unsubscribeMethod:"slotsUpdatesUnsubscribe"},[])}async removeSlotUpdateListener(e){await this._unsubscribeClientSubscription(e,"slot update")}async _unsubscribeClientSubscription(e,t){let r=this._subscriptionDisposeFunctionsByClientSubscriptionId[e];r?await r():console.warn(`Ignored unsubscribe request because an active subscription with id \`${e}\` for '${t}' events could not be found.`)}_buildArgs(e,t,r,i){let n=t||this._commitment;if(n||r||i){let s={};r&&(s.encoding=r),n&&(s.commitment=n),i&&(s=Object.assign(s,i)),e.push(s)}return e}_buildArgsAtLeastConfirmed(e,t,r,i){let n=t||this._commitment;if(n&&!["confirmed","finalized"].includes(n))throw Error("Using Connection with default commitment: `"+this._commitment+"`, but method requires at least `confirmed`");return this._buildArgs(e,t,r,i)}_wsOnSignatureNotification(e){let{result:t,subscription:r}=(0,m.Ue)(e,tO);"receivedSignature"!==t.value&&this._subscriptionsAutoDisposedByRpc.add(r),this._handleServerNotification(r,"receivedSignature"===t.value?[{type:"received"},t.context]:[{type:"status",result:t.value},t.context])}onSignature(e,t,r){let i=this._buildArgs([e],r||this._commitment||"finalized"),n=this._makeSubscription({callback:(e,r)=>{if("status"===e.type){t(e.result,r);try{this.removeSignatureListener(n)}catch(i){}}},method:"signatureSubscribe",unsubscribeMethod:"signatureUnsubscribe"},i);return n}onSignatureWithOptions(e,t,r){let{commitment:i,...n}={...r,commitment:r&&r.commitment||this._commitment||"finalized"},s=this._buildArgs([e],i,void 0,n),o=this._makeSubscription({callback:(e,r)=>{t(e,r);try{this.removeSignatureListener(o)}catch(i){}},method:"signatureSubscribe",unsubscribeMethod:"signatureUnsubscribe"},s);return o}async removeSignatureListener(e){await this._unsubscribeClientSubscription(e,"signature result")}_wsOnRootNotification(e){let{result:t,subscription:r}=(0,m.Ue)(e,tW);this._handleServerNotification(r,[t])}onRootChange(e){return this._makeSubscription({callback:e,method:"rootSubscribe",unsubscribeMethod:"rootUnsubscribe"},[])}async removeRootChangeListener(e){await this._unsubscribeClientSubscription(e,"root change")}}class rm{constructor(e){this._keypair=void 0,this._keypair=e??A()}static generate(){return new rm(A())}static fromSecretKey(e,t){if(64!==e.byteLength)throw Error("bad secret key size");let r=e.slice(32,64);if(!t||!t.skipValidation){let i=e.slice(0,32),n=R(i);for(let s=0;s<32;s++)if(r[s]!==n[s])throw Error("provided secretKey is invalid")}return new rm({publicKey:r,secretKey:e})}static fromSeed(e){let t=R(e),r=new Uint8Array(64);return r.set(e),r.set(t,32),new rm({publicKey:t,secretKey:r})}get publicKey(){return new K(this._keypair.publicKey)}get secretKey(){return new Uint8Array(this._keypair.secretKey)}}let rf=Object.freeze({CreateLookupTable:{index:0,layout:p.n_([p.Jq("instruction"),eR("recentSlot"),p.u8("bumpSeed")])},FreezeLookupTable:{index:1,layout:p.n_([p.Jq("instruction")])},ExtendLookupTable:{index:2,layout:p.n_([p.Jq("instruction"),eR(),p.A9(D(),p.cv(p.Jq(),-8),"addresses")])},DeactivateLookupTable:{index:3,layout:p.n_([p.Jq("instruction")])},CloseLookupTable:{index:4,layout:p.n_([p.Jq("instruction")])}});class rb{constructor(){}static decodeInstructionType(e){let t;this.checkProgramId(e.programId);let r=p.Jq("instruction"),i=r.decode(e.data);for(let[n,s]of Object.entries(rf))if(s.index==i){t=n;break}if(!t)throw Error("Invalid Instruction. Should be a LookupTable Instruction");return t}static decodeCreateLookupTable(e){this.checkProgramId(e.programId),this.checkKeysLength(e.keys,4);let{recentSlot:t}=ek(rf.CreateLookupTable,e.data);return{authority:e.keys[1].pubkey,payer:e.keys[2].pubkey,recentSlot:Number(t)}}static decodeExtendLookupTable(e){if(this.checkProgramId(e.programId),e.keys.length<2)throw Error(`invalid instruction; found ${e.keys.length} keys, expected at least 2`);let{addresses:t}=ek(rf.ExtendLookupTable,e.data);return{lookupTable:e.keys[0].pubkey,authority:e.keys[1].pubkey,payer:e.keys.length>2?e.keys[2].pubkey:void 0,addresses:t.map(e=>new K(e))}}static decodeCloseLookupTable(e){return this.checkProgramId(e.programId),this.checkKeysLength(e.keys,3),{lookupTable:e.keys[0].pubkey,authority:e.keys[1].pubkey,recipient:e.keys[2].pubkey}}static decodeFreezeLookupTable(e){return this.checkProgramId(e.programId),this.checkKeysLength(e.keys,2),{lookupTable:e.keys[0].pubkey,authority:e.keys[1].pubkey}}static decodeDeactivateLookupTable(e){return this.checkProgramId(e.programId),this.checkKeysLength(e.keys,2),{lookupTable:e.keys[0].pubkey,authority:e.keys[1].pubkey}}static checkProgramId(e){if(!e.equals(rk.programId))throw Error("invalid instruction; programId is not AddressLookupTable Program")}static checkKeysLength(e,t){if(e.length<t)throw Error(`invalid instruction; found ${e.length} keys, expected at least ${t}`)}}class rk{constructor(){}static createLookupTable(e){let[t,r]=K.findProgramAddressSync([e.authority.toBuffer(),(0,y.k$)(BigInt(e.recentSlot),8)],this.programId),i=rf.CreateLookupTable,n=eb(i,{recentSlot:BigInt(e.recentSlot),bumpSeed:r}),s=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:e.authority,isSigner:!0,isWritable:!1},{pubkey:e.payer,isSigner:!0,isWritable:!0},{pubkey:ev.programId,isSigner:!1,isWritable:!1}];return[new ei({programId:this.programId,keys:s,data:n}),t]}static freezeLookupTable(e){let t=rf.FreezeLookupTable,r=eb(t),i=[{pubkey:e.lookupTable,isSigner:!1,isWritable:!0},{pubkey:e.authority,isSigner:!0,isWritable:!1}];return new ei({programId:this.programId,keys:i,data:r})}static extendLookupTable(e){let t=rf.ExtendLookupTable,r=eb(t,{addresses:e.addresses.map(e=>e.toBytes())}),i=[{pubkey:e.lookupTable,isSigner:!1,isWritable:!0},{pubkey:e.authority,isSigner:!0,isWritable:!1}];return e.payer&&i.push({pubkey:e.payer,isSigner:!0,isWritable:!0},{pubkey:ev.programId,isSigner:!1,isWritable:!1}),new ei({programId:this.programId,keys:i,data:r})}static deactivateLookupTable(e){let t=rf.DeactivateLookupTable,r=eb(t),i=[{pubkey:e.lookupTable,isSigner:!1,isWritable:!0},{pubkey:e.authority,isSigner:!0,isWritable:!1}];return new ei({programId:this.programId,keys:i,data:r})}static closeLookupTable(e){let t=rf.CloseLookupTable,r=eb(t),i=[{pubkey:e.lookupTable,isSigner:!1,isWritable:!0},{pubkey:e.authority,isSigner:!0,isWritable:!1},{pubkey:e.recipient,isSigner:!1,isWritable:!0}];return new ei({programId:this.programId,keys:i,data:r})}}rk.programId=new K("AddressLookupTab1e1111111111111111111111111");class rS{constructor(){}static decodeInstructionType(e){let t;this.checkProgramId(e.programId);let r=p.u8("instruction"),i=r.decode(e.data);for(let[n,s]of Object.entries(rw))if(s.index==i){t=n;break}if(!t)throw Error("Instruction type incorrect; not a ComputeBudgetInstruction");return t}static decodeRequestUnits(e){this.checkProgramId(e.programId);let{units:t,additionalFee:r}=ek(rw.RequestUnits,e.data);return{units:t,additionalFee:r}}static decodeRequestHeapFrame(e){this.checkProgramId(e.programId);let{bytes:t}=ek(rw.RequestHeapFrame,e.data);return{bytes:t}}static decodeSetComputeUnitLimit(e){this.checkProgramId(e.programId);let{units:t}=ek(rw.SetComputeUnitLimit,e.data);return{units:t}}static decodeSetComputeUnitPrice(e){this.checkProgramId(e.programId);let{microLamports:t}=ek(rw.SetComputeUnitPrice,e.data);return{microLamports:t}}static checkProgramId(e){if(!e.equals(r_.programId))throw Error("invalid instruction; programId is not ComputeBudgetProgram")}}let rw=Object.freeze({RequestUnits:{index:0,layout:p.n_([p.u8("instruction"),p.Jq("units"),p.Jq("additionalFee")])},RequestHeapFrame:{index:1,layout:p.n_([p.u8("instruction"),p.Jq("bytes")])},SetComputeUnitLimit:{index:2,layout:p.n_([p.u8("instruction"),p.Jq("units")])},SetComputeUnitPrice:{index:3,layout:p.n_([p.u8("instruction"),eR("microLamports")])}});class r_{constructor(){}static requestUnits(e){let t=rw.RequestUnits,r=eb(t,e);return new ei({keys:[],programId:this.programId,data:r})}static requestHeapFrame(e){let t=rw.RequestHeapFrame,r=eb(t,e);return new ei({keys:[],programId:this.programId,data:r})}static setComputeUnitLimit(e){let t=rw.SetComputeUnitLimit,r=eb(t,e);return new ei({keys:[],programId:this.programId,data:r})}static setComputeUnitPrice(e){let t=rw.SetComputeUnitPrice,r=eb(t,{microLamports:BigInt(e.microLamports)});return new ei({keys:[],programId:this.programId,data:r})}}r_.programId=new K("ComputeBudget111111111111111111111111111111");let rI=p.n_([p.u8("numSignatures"),p.u8("padding"),p.KB("signatureOffset"),p.KB("signatureInstructionIndex"),p.KB("publicKeyOffset"),p.KB("publicKeyInstructionIndex"),p.KB("messageDataOffset"),p.KB("messageDataSize"),p.KB("messageInstructionIndex")]);class rA{constructor(){}static createInstructionWithPublicKey(e){let{publicKey:t,message:r,signature:i,instructionIndex:n}=e;X(32===t.length,`Public Key must be 32 bytes but received ${t.length} bytes`),X(64===i.length,`Signature must be 64 bytes but received ${i.length} bytes`);let s=rI.span,a=s+t.length,c=a+i.length,u=o.Buffer.alloc(c+r.length),l=null==n?65535:n;return rI.encode({numSignatures:1,padding:0,signatureOffset:a,signatureInstructionIndex:l,publicKeyOffset:s,publicKeyInstructionIndex:l,messageDataOffset:c,messageDataSize:r.length,messageInstructionIndex:l},u),u.fill(t,s),u.fill(i,a),u.fill(r,c),new ei({keys:[],programId:rA.programId,data:u})}static createInstructionWithPrivateKey(e){let{privateKey:t,message:r,instructionIndex:i}=e;X(64===t.length,`Private key must be 64 bytes but received ${t.length} bytes`);try{let n=rm.fromSecretKey(t),s=n.publicKey.toBytes(),o=P(r,n.secretKey);return this.createInstructionWithPublicKey({publicKey:s,message:r,signature:o,instructionIndex:i})}catch(a){throw Error(`Error creating instruction; ${a}`)}}}rA.programId=new K("Ed25519SigVerify111111111111111111111111111");let rR=(e,t)=>{let r=_.kA.sign(e,t);return[r.toCompactRawBytes(),r.recovery]};_.kA.utils.isValidPrivateKey;let rx=_.kA.getPublicKey,rP=p.n_([p.u8("numSignatures"),p.KB("signatureOffset"),p.u8("signatureInstructionIndex"),p.KB("ethAddressOffset"),p.u8("ethAddressInstructionIndex"),p.KB("messageDataOffset"),p.KB("messageDataSize"),p.u8("messageInstructionIndex"),p.Ik(20,"ethAddress"),p.Ik(64,"signature"),p.u8("recoveryId")]);class rv{constructor(){}static publicKeyToEthAddress(e){X(64===e.length,`Public key must be 64 bytes but received ${e.length} bytes`);try{return o.Buffer.from((0,w.fr)(E(e))).slice(-20)}catch(t){throw Error(`Error constructing Ethereum address: ${t}`)}}static createInstructionWithPublicKey(e){let{publicKey:t,message:r,signature:i,recoveryId:n,instructionIndex:s}=e;return rv.createInstructionWithEthAddress({ethAddress:rv.publicKeyToEthAddress(t),message:r,signature:i,recoveryId:n,instructionIndex:s})}static createInstructionWithEthAddress(e){let t;let{ethAddress:r,message:i,signature:n,recoveryId:s,instructionIndex:a=0}=e;X(20===(t="string"==typeof r?r.startsWith("0x")?o.Buffer.from(r.substr(2),"hex"):o.Buffer.from(r,"hex"):r).length,`Address must be 20 bytes but received ${t.length} bytes`);let c=12+t.length,u=c+n.length+1,l=o.Buffer.alloc(rP.span+i.length);return rP.encode({numSignatures:1,signatureOffset:c,signatureInstructionIndex:a,ethAddressOffset:12,ethAddressInstructionIndex:a,messageDataOffset:u,messageDataSize:i.length,messageInstructionIndex:a,signature:E(n),ethAddress:E(t),recoveryId:s},l),l.fill(E(i),rP.span),new ei({keys:[],programId:rv.programId,data:l})}static createInstructionWithPrivateKey(e){let{privateKey:t,message:r,instructionIndex:i}=e;X(32===t.length,`Private key must be 32 bytes but received ${t.length} bytes`);try{let n=E(t),s=rx(n,!1).slice(1),a=o.Buffer.from((0,w.fr)(E(r))),[c,u]=rR(a,n);return this.createInstructionWithPublicKey({publicKey:s,message:r,signature:c,recoveryId:u,instructionIndex:i})}catch(l){throw Error(`Error creating instruction; ${l}`)}}}rv.programId=new K("KeccakSecp256k11111111111111111111111111111");let rE=new K("StakeConfig11111111111111111111111111111111");class rB{constructor(e,t){this.staker=void 0,this.withdrawer=void 0,this.staker=e,this.withdrawer=t}}class rT{constructor(e,t,r){this.unixTimestamp=void 0,this.epoch=void 0,this.custodian=void 0,this.unixTimestamp=e,this.epoch=t,this.custodian=r}}rT.default=new rT(0,0,K.default);class rC{constructor(){}static decodeInstructionType(e){let t;this.checkProgramId(e.programId);let r=p.Jq("instruction"),i=r.decode(e.data);for(let[n,s]of Object.entries(rL))if(s.index==i){t=n;break}if(!t)throw Error("Instruction type incorrect; not a StakeInstruction");return t}static decodeInitialize(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,2);let{authorized:t,lockup:r}=ek(rL.Initialize,e.data);return{stakePubkey:e.keys[0].pubkey,authorized:new rB(new K(t.staker),new K(t.withdrawer)),lockup:new rT(r.unixTimestamp,r.epoch,new K(r.custodian))}}static decodeDelegate(e){return this.checkProgramId(e.programId),this.checkKeyLength(e.keys,6),ek(rL.Delegate,e.data),{stakePubkey:e.keys[0].pubkey,votePubkey:e.keys[1].pubkey,authorizedPubkey:e.keys[5].pubkey}}static decodeAuthorize(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3);let{newAuthorized:t,stakeAuthorizationType:r}=ek(rL.Authorize,e.data),i={stakePubkey:e.keys[0].pubkey,authorizedPubkey:e.keys[2].pubkey,newAuthorizedPubkey:new K(t),stakeAuthorizationType:{index:r}};return e.keys.length>3&&(i.custodianPubkey=e.keys[3].pubkey),i}static decodeAuthorizeWithSeed(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,2);let{newAuthorized:t,stakeAuthorizationType:r,authoritySeed:i,authorityOwner:n}=ek(rL.AuthorizeWithSeed,e.data),s={stakePubkey:e.keys[0].pubkey,authorityBase:e.keys[1].pubkey,authoritySeed:i,authorityOwner:new K(n),newAuthorizedPubkey:new K(t),stakeAuthorizationType:{index:r}};return e.keys.length>3&&(s.custodianPubkey=e.keys[3].pubkey),s}static decodeSplit(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3);let{lamports:t}=ek(rL.Split,e.data);return{stakePubkey:e.keys[0].pubkey,splitStakePubkey:e.keys[1].pubkey,authorizedPubkey:e.keys[2].pubkey,lamports:t}}static decodeMerge(e){return this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3),ek(rL.Merge,e.data),{stakePubkey:e.keys[0].pubkey,sourceStakePubKey:e.keys[1].pubkey,authorizedPubkey:e.keys[4].pubkey}}static decodeWithdraw(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,5);let{lamports:t}=ek(rL.Withdraw,e.data),r={stakePubkey:e.keys[0].pubkey,toPubkey:e.keys[1].pubkey,authorizedPubkey:e.keys[4].pubkey,lamports:t};return e.keys.length>5&&(r.custodianPubkey=e.keys[5].pubkey),r}static decodeDeactivate(e){return this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3),ek(rL.Deactivate,e.data),{stakePubkey:e.keys[0].pubkey,authorizedPubkey:e.keys[2].pubkey}}static checkProgramId(e){if(!e.equals(rW.programId))throw Error("invalid instruction; programId is not StakeProgram")}static checkKeyLength(e,t){if(e.length<t)throw Error(`invalid instruction; found ${e.length} keys, expected at least ${t}`)}}let rL=Object.freeze({Initialize:{index:0,layout:p.n_([p.Jq("instruction"),((e="authorized")=>p.n_([D("staker"),D("withdrawer")],e))(),((e="lockup")=>p.n_([p.gM("unixTimestamp"),p.gM("epoch"),D("custodian")],e))()])},Authorize:{index:1,layout:p.n_([p.Jq("instruction"),D("newAuthorized"),p.Jq("stakeAuthorizationType")])},Delegate:{index:2,layout:p.n_([p.Jq("instruction")])},Split:{index:3,layout:p.n_([p.Jq("instruction"),p.gM("lamports")])},Withdraw:{index:4,layout:p.n_([p.Jq("instruction"),p.gM("lamports")])},Deactivate:{index:5,layout:p.n_([p.Jq("instruction")])},Merge:{index:7,layout:p.n_([p.Jq("instruction")])},AuthorizeWithSeed:{index:8,layout:p.n_([p.Jq("instruction"),D("newAuthorized"),p.Jq("stakeAuthorizationType"),F("authoritySeed"),D("authorityOwner")])}}),rO=Object.freeze({Staker:{index:0},Withdrawer:{index:1}});class rW{constructor(){}static initialize(e){let{stakePubkey:t,authorized:r,lockup:i}=e,n=i||rT.default,s=rL.Initialize,o=eb(s,{authorized:{staker:E(r.staker.toBuffer()),withdrawer:E(r.withdrawer.toBuffer())},lockup:{unixTimestamp:n.unixTimestamp,epoch:n.epoch,custodian:E(n.custodian.toBuffer())}}),a={keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:ed,isSigner:!1,isWritable:!1}],programId:this.programId,data:o};return new ei(a)}static createAccountWithSeed(e){let t=new en;t.add(ev.createAccountWithSeed({fromPubkey:e.fromPubkey,newAccountPubkey:e.stakePubkey,basePubkey:e.basePubkey,seed:e.seed,lamports:e.lamports,space:this.space,programId:this.programId}));let{stakePubkey:r,authorized:i,lockup:n}=e;return t.add(this.initialize({stakePubkey:r,authorized:i,lockup:n}))}static createAccount(e){let t=new en;t.add(ev.createAccount({fromPubkey:e.fromPubkey,newAccountPubkey:e.stakePubkey,lamports:e.lamports,space:this.space,programId:this.programId}));let{stakePubkey:r,authorized:i,lockup:n}=e;return t.add(this.initialize({stakePubkey:r,authorized:i,lockup:n}))}static delegate(e){let{stakePubkey:t,authorizedPubkey:r,votePubkey:i}=e,n=rL.Delegate,s=eb(n);return new en().add({keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:i,isSigner:!1,isWritable:!1},{pubkey:ea,isSigner:!1,isWritable:!1},{pubkey:ey,isSigner:!1,isWritable:!1},{pubkey:rE,isSigner:!1,isWritable:!1},{pubkey:r,isSigner:!0,isWritable:!1}],programId:this.programId,data:s})}static authorize(e){let{stakePubkey:t,authorizedPubkey:r,newAuthorizedPubkey:i,stakeAuthorizationType:n,custodianPubkey:s}=e,o=rL.Authorize,a=eb(o,{newAuthorized:E(i.toBuffer()),stakeAuthorizationType:n.index}),c=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:ea,isSigner:!1,isWritable:!0},{pubkey:r,isSigner:!0,isWritable:!1}];return s&&c.push({pubkey:s,isSigner:!1,isWritable:!1}),new en().add({keys:c,programId:this.programId,data:a})}static authorizeWithSeed(e){let{stakePubkey:t,authorityBase:r,authoritySeed:i,authorityOwner:n,newAuthorizedPubkey:s,stakeAuthorizationType:o,custodianPubkey:a}=e,c=rL.AuthorizeWithSeed,u=eb(c,{newAuthorized:E(s.toBuffer()),stakeAuthorizationType:o.index,authoritySeed:i,authorityOwner:E(n.toBuffer())}),l=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:r,isSigner:!0,isWritable:!1},{pubkey:ea,isSigner:!1,isWritable:!1}];return a&&l.push({pubkey:a,isSigner:!1,isWritable:!1}),new en().add({keys:l,programId:this.programId,data:u})}static splitInstruction(e){let{stakePubkey:t,authorizedPubkey:r,splitStakePubkey:i,lamports:n}=e,s=rL.Split,o=eb(s,{lamports:n});return new ei({keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:i,isSigner:!1,isWritable:!0},{pubkey:r,isSigner:!0,isWritable:!1}],programId:this.programId,data:o})}static split(e){let t=new en;return t.add(ev.createAccount({fromPubkey:e.authorizedPubkey,newAccountPubkey:e.splitStakePubkey,lamports:0,space:this.space,programId:this.programId})),t.add(this.splitInstruction(e))}static splitWithSeed(e){let{stakePubkey:t,authorizedPubkey:r,splitStakePubkey:i,basePubkey:n,seed:s,lamports:o}=e,a=new en;return a.add(ev.allocate({accountPubkey:i,basePubkey:n,seed:s,space:this.space,programId:this.programId})),a.add(this.splitInstruction({stakePubkey:t,authorizedPubkey:r,splitStakePubkey:i,lamports:o}))}static merge(e){let{stakePubkey:t,sourceStakePubKey:r,authorizedPubkey:i}=e,n=rL.Merge,s=eb(n);return new en().add({keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:r,isSigner:!1,isWritable:!0},{pubkey:ea,isSigner:!1,isWritable:!1},{pubkey:ey,isSigner:!1,isWritable:!1},{pubkey:i,isSigner:!0,isWritable:!1}],programId:this.programId,data:s})}static withdraw(e){let{stakePubkey:t,authorizedPubkey:r,toPubkey:i,lamports:n,custodianPubkey:s}=e,o=rL.Withdraw,a=eb(o,{lamports:n}),c=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:i,isSigner:!1,isWritable:!0},{pubkey:ea,isSigner:!1,isWritable:!1},{pubkey:ey,isSigner:!1,isWritable:!1},{pubkey:r,isSigner:!0,isWritable:!1}];return s&&c.push({pubkey:s,isSigner:!1,isWritable:!1}),new en().add({keys:c,programId:this.programId,data:a})}static deactivate(e){let{stakePubkey:t,authorizedPubkey:r}=e,i=rL.Deactivate,n=eb(i);return new en().add({keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:ea,isSigner:!1,isWritable:!1},{pubkey:r,isSigner:!0,isWritable:!1}],programId:this.programId,data:n})}}rW.programId=new K("Stake11111111111111111111111111111111111111"),rW.space=200;class rK{constructor(e,t,r,i){this.nodePubkey=void 0,this.authorizedVoter=void 0,this.authorizedWithdrawer=void 0,this.commission=void 0,this.nodePubkey=e,this.authorizedVoter=t,this.authorizedWithdrawer=r,this.commission=i}}class rN{constructor(){}static decodeInstructionType(e){let t;this.checkProgramId(e.programId);let r=p.Jq("instruction"),i=r.decode(e.data);for(let[n,s]of Object.entries(rz))if(s.index==i){t=n;break}if(!t)throw Error("Instruction type incorrect; not a VoteInstruction");return t}static decodeInitializeAccount(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,4);let{voteInit:t}=ek(rz.InitializeAccount,e.data);return{votePubkey:e.keys[0].pubkey,nodePubkey:e.keys[3].pubkey,voteInit:new rK(new K(t.nodePubkey),new K(t.authorizedVoter),new K(t.authorizedWithdrawer),t.commission)}}static decodeAuthorize(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3);let{newAuthorized:t,voteAuthorizationType:r}=ek(rz.Authorize,e.data);return{votePubkey:e.keys[0].pubkey,authorizedPubkey:e.keys[2].pubkey,newAuthorizedPubkey:new K(t),voteAuthorizationType:{index:r}}}static decodeAuthorizeWithSeed(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3);let{voteAuthorizeWithSeedArgs:{currentAuthorityDerivedKeyOwnerPubkey:t,currentAuthorityDerivedKeySeed:r,newAuthorized:i,voteAuthorizationType:n}}=ek(rz.AuthorizeWithSeed,e.data);return{currentAuthorityDerivedKeyBasePubkey:e.keys[2].pubkey,currentAuthorityDerivedKeyOwnerPubkey:new K(t),currentAuthorityDerivedKeySeed:r,newAuthorizedPubkey:new K(i),voteAuthorizationType:{index:n},votePubkey:e.keys[0].pubkey}}static decodeWithdraw(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3);let{lamports:t}=ek(rz.Withdraw,e.data);return{votePubkey:e.keys[0].pubkey,authorizedWithdrawerPubkey:e.keys[2].pubkey,lamports:t,toPubkey:e.keys[1].pubkey}}static checkProgramId(e){if(!e.equals(rq.programId))throw Error("invalid instruction; programId is not VoteProgram")}static checkKeyLength(e,t){if(e.length<t)throw Error(`invalid instruction; found ${e.length} keys, expected at least ${t}`)}}let rz=Object.freeze({InitializeAccount:{index:0,layout:p.n_([p.Jq("instruction"),((e="voteInit")=>p.n_([D("nodePubkey"),D("authorizedVoter"),D("authorizedWithdrawer"),p.u8("commission")],e))()])},Authorize:{index:1,layout:p.n_([p.Jq("instruction"),D("newAuthorized"),p.Jq("voteAuthorizationType")])},Withdraw:{index:3,layout:p.n_([p.Jq("instruction"),p.gM("lamports")])},AuthorizeWithSeed:{index:10,layout:p.n_([p.Jq("instruction"),((e="voteAuthorizeWithSeedArgs")=>p.n_([p.Jq("voteAuthorizationType"),D("currentAuthorityDerivedKeyOwnerPubkey"),F("currentAuthorityDerivedKeySeed"),D("newAuthorized")],e))()])}}),rU=Object.freeze({Voter:{index:0},Withdrawer:{index:1}});class rq{constructor(){}static initializeAccount(e){let{votePubkey:t,nodePubkey:r,voteInit:i}=e,n=rz.InitializeAccount,s=eb(n,{voteInit:{nodePubkey:E(i.nodePubkey.toBuffer()),authorizedVoter:E(i.authorizedVoter.toBuffer()),authorizedWithdrawer:E(i.authorizedWithdrawer.toBuffer()),commission:i.commission}}),o={keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:ed,isSigner:!1,isWritable:!1},{pubkey:ea,isSigner:!1,isWritable:!1},{pubkey:r,isSigner:!0,isWritable:!1}],programId:this.programId,data:s};return new ei(o)}static createAccount(e){let t=new en;return t.add(ev.createAccount({fromPubkey:e.fromPubkey,newAccountPubkey:e.votePubkey,lamports:e.lamports,space:this.space,programId:this.programId})),t.add(this.initializeAccount({votePubkey:e.votePubkey,nodePubkey:e.voteInit.nodePubkey,voteInit:e.voteInit}))}static authorize(e){let{votePubkey:t,authorizedPubkey:r,newAuthorizedPubkey:i,voteAuthorizationType:n}=e,s=rz.Authorize,o=eb(s,{newAuthorized:E(i.toBuffer()),voteAuthorizationType:n.index});return new en().add({keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:ea,isSigner:!1,isWritable:!1},{pubkey:r,isSigner:!0,isWritable:!1}],programId:this.programId,data:o})}static authorizeWithSeed(e){let{currentAuthorityDerivedKeyBasePubkey:t,currentAuthorityDerivedKeyOwnerPubkey:r,currentAuthorityDerivedKeySeed:i,newAuthorizedPubkey:n,voteAuthorizationType:s,votePubkey:o}=e,a=rz.AuthorizeWithSeed,c=eb(a,{voteAuthorizeWithSeedArgs:{currentAuthorityDerivedKeyOwnerPubkey:E(r.toBuffer()),currentAuthorityDerivedKeySeed:i,newAuthorized:E(n.toBuffer()),voteAuthorizationType:s.index}});return new en().add({keys:[{pubkey:o,isSigner:!1,isWritable:!0},{pubkey:ea,isSigner:!1,isWritable:!1},{pubkey:t,isSigner:!0,isWritable:!1}],programId:this.programId,data:c})}static withdraw(e){let{votePubkey:t,authorizedWithdrawerPubkey:r,lamports:i,toPubkey:n}=e,s=rz.Withdraw,o=eb(s,{lamports:i});return new en().add({keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:n,isSigner:!1,isWritable:!0},{pubkey:r,isSigner:!0,isWritable:!1}],programId:this.programId,data:o})}static safeWithdraw(e,t,r){if(e.lamports>t-r)throw Error("Withdraw will leave vote account with insuffcient funds.");return rq.withdraw(e)}}rq.programId=new K("Vote111111111111111111111111111111111111111"),rq.space=3731;let rG=new K("Va1idator1nfo111111111111111111111111111111"),rM=(0,m.dt)({name:(0,m.Z_)(),website:(0,m.jt)((0,m.Z_)()),details:(0,m.jt)((0,m.Z_)()),keybaseUsername:(0,m.jt)((0,m.Z_)())});class rj{constructor(e,t){this.key=void 0,this.info=void 0,this.key=e,this.info=t}static fromConfigData(e){let t=[...e],r=Z(t);if(2!==r)return null;let i=[];for(let n=0;n<2;n++){let s=new K(t.slice(0,O));t=t.slice(O);let a=1===t.slice(0,1)[0];t=t.slice(1),i.push({publicKey:s,isSigner:a})}if(i[0].publicKey.equals(rG)&&i[1].isSigner){let c=F().decode(o.Buffer.from(t)),u=JSON.parse(c);return(0,m.hu)(u,rM),new rj(i[1].publicKey,u)}return null}}let rJ=new K("Vote111111111111111111111111111111111111111"),rV=p.n_([D("nodePubkey"),D("authorizedWithdrawer"),p.u8("commission"),p._O(),p.A9(p.n_([p._O("slot"),p.Jq("confirmationCount")]),p.cv(p.Jq(),-8),"votes"),p.u8("rootSlotValid"),p._O("rootSlot"),p._O(),p.A9(p.n_([p._O("epoch"),D("authorizedVoter")]),p.cv(p.Jq(),-8),"authorizedVoters"),p.n_([p.A9(p.n_([D("authorizedPubkey"),p._O("epochOfLastAuthorizedSwitch"),p._O("targetEpoch")]),32,"buf"),p._O("idx"),p.u8("isEmpty")],"priorVoters"),p._O(),p.A9(p.n_([p._O("epoch"),p._O("credits"),p._O("prevCredits")]),p.cv(p.Jq(),-8),"epochCredits"),p.n_([p._O("slot"),p._O("timestamp")],"lastTimestamp")]);class rD{constructor(e){this.nodePubkey=void 0,this.authorizedWithdrawer=void 0,this.commission=void 0,this.rootSlot=void 0,this.votes=void 0,this.authorizedVoters=void 0,this.priorVoters=void 0,this.epochCredits=void 0,this.lastTimestamp=void 0,this.nodePubkey=e.nodePubkey,this.authorizedWithdrawer=e.authorizedWithdrawer,this.commission=e.commission,this.rootSlot=e.rootSlot,this.votes=e.votes,this.authorizedVoters=e.authorizedVoters,this.priorVoters=e.priorVoters,this.epochCredits=e.epochCredits,this.lastTimestamp=e.lastTimestamp}static fromAccountData(e){let t=rV.decode(E(e),4),r=t.rootSlot;return t.rootSlotValid||(r=null),new rD({nodePubkey:new K(t.nodePubkey),authorizedWithdrawer:new K(t.authorizedWithdrawer),commission:t.commission,votes:t.votes,rootSlot:r,authorizedVoters:t.authorizedVoters.map(rH),priorVoters:function({buf:e,idx:t,isEmpty:r}){return r?[]:[...e.slice(t+1).map(rF),...e.slice(0,t).map(rF)]}(t.priorVoters),epochCredits:t.epochCredits,lastTimestamp:t.lastTimestamp})}}function rH({authorizedVoter:e,epoch:t}){return{epoch:t,authorizedVoter:new K(e)}}function rF({authorizedPubkey:e,epochOfLastAuthorizedSwitch:t,targetEpoch:r}){return{authorizedPubkey:new K(e),epochOfLastAuthorizedSwitch:t,targetEpoch:r}}let rZ={http:{devnet:"http://api.devnet.solana.com",testnet:"http://api.testnet.solana.com","mainnet-beta":"http://api.mainnet-beta.solana.com/"},https:{devnet:"https://api.devnet.solana.com",testnet:"https://api.testnet.solana.com","mainnet-beta":"https://api.mainnet-beta.solana.com/"}};function r$(e,t){let r=!1===t?"http":"https";if(!e)return rZ[r].devnet;let i=rZ[r][e];if(!i)throw Error(`Unknown ${r} cluster: ${e}`);return i}async function rX(e,t,r,i){let n,s;r&&Object.prototype.hasOwnProperty.call(r,"lastValidBlockHeight")?(n=r,s=i):r&&Object.prototype.hasOwnProperty.call(r,"nonceValue")?(n=r,s=i):s=r;let o=s&&{skipPreflight:s.skipPreflight,preflightCommitment:s.preflightCommitment||s.commitment,minContextSlot:s.minContextSlot},a=await e.sendRawTransaction(t,o),c=s&&s.commitment,u=n?e.confirmTransaction(n,c):e.confirmTransaction(a,c),l=(await u).value;if(l.err)throw Error(`Raw transaction ${a} failed (${JSON.stringify(l)})`);return a}let rY=1e9}}]);